{"type": "root", "attrs": {}, "body": [{"type": "para", "indent": 0, "text": ["#"], "extent": [0, 2]}, {"type": "ord_group", "body": [{"blevel": 8, "type": "ord", "indent": 0, "text": ["@file       VEXpressions.txt"], "extent": [2, 39]}, {"blevel": 8, "type": "ord", "indent": 0, "text": ["@author     xy\n#"], "extent": [39, 64]}, {"blevel": 8, "type": "ord", "indent": 0, "text": ["@since      2018-09-02\n#"], "extent": [64, 97]}, {"blevel": 8, "type": "ord", "indent": 0, "text": ["@brief      Varions VEXpression presets for nodes.\n#\n#"], "extent": [97, 161]}], "container": true}, {"type": "para", "indent": 0, "text": ["groupexpression/snippet"], "extent": [161, 185], "body": [{"type": "para", "indent": 4, "text": [{"scheme": null, "value": "qL", "type": "link", "text": "", "fullpath": "/qlib/vexpressions/qL.html"}, " Curve Endpoints\n    neighbourcount(0, @ptnum)==1"], "extent": [185, 244]}], "container": true}, {"type": "para", "indent": 0, "text": ["groupexpression/snippet"], "extent": [244, 268], "body": [{"type": "para", "indent": 4, "text": [{"scheme": null, "value": "qL", "type": "link", "text": "", "fullpath": "/qlib/vexpressions/qL.html"}, " Curve(s), Start Point\n    vertexprimindex(0, @vtxnum)==0"], "extent": [268, 335]}], "container": true}, {"type": "para", "indent": 0, "text": ["groupexpression/snippet"], "extent": [335, 359], "body": [{"type": "para", "indent": 4, "text": [{"scheme": null, "value": "qL", "type": "link", "text": "", "fullpath": "/qlib/vexpressions/qL.html"}, " Curve(s), End Point\n    vertexprimindex(0, @vtxnum)==@numvtx-1"], "extent": [359, 432]}], "container": true}, {"type": "para", "indent": 0, "text": ["groupexpression/snippet"], "extent": [432, 456], "body": [{"type": "para", "indent": 4, "text": [{"scheme": null, "value": "qL", "type": "link", "text": "", "fullpath": "/qlib/vexpressions/qL.html"}, " Open Primitives (e.g. Curves)\n    primintrinsic(0, ", {"type": "q", "text": ["closed"]}, ", @elemnum)==0"], "extent": [456, 540]}], "container": true}, {"type": "para", "indent": 0, "text": ["groupexpression/snippet"], "extent": [540, 564], "body": [{"type": "para", "indent": 4, "text": [{"scheme": null, "value": "qL", "type": "link", "text": "", "fullpath": "/qlib/vexpressions/qL.html"}, " Closed Primitives\n    primintrinsic(0, ", {"type": "q", "text": ["closed"]}, ", @elemnum)==1"], "extent": [564, 636]}], "container": true}, {"type": "para", "indent": 0, "text": ["groupexpression/snippet"], "extent": [636, 660], "body": [{"type": "para", "indent": 4, "text": [{"scheme": null, "value": "qL", "type": "link", "text": "", "fullpath": "/qlib/vexpressions/qL.html"}, " Prim Area: Smaller than\n    chf(", {"type": "q", "text": ["tolerance"]}, ") > primintrinsic(0, ", {"type": "q", "text": ["measuredarea"]}, ", @elemnum)"], "extent": [660, 760]}], "container": true}, {"type": "para", "indent": 0, "text": ["groupexpression/snippet"], "extent": [760, 784], "body": [{"type": "para", "indent": 4, "text": [{"scheme": null, "value": "qL", "type": "link", "text": "", "fullpath": "/qlib/vexpressions/qL.html"}, " Prim Area: Larger than\n    chf(", {"type": "q", "text": ["tolerance"]}, ") < primintrinsic(0, ", {"type": "q", "text": ["measuredarea"]}, ", @elemnum)"], "extent": [784, 883]}], "container": true}, {"type": "para", "indent": 0, "text": ["groupexpression/snippet"], "extent": [883, 907], "body": [{"type": "para", "indent": 4, "text": [{"scheme": null, "value": "qL", "type": "link", "text": "", "fullpath": "/qlib/vexpressions/qL.html"}, " Prim Length: Shorter than\n    chf(", {"type": "q", "text": ["tolerance"]}, ") > primintrinsic(0, ", {"type": "q", "text": ["measuredperimeter"]}, ", @elemnum)"], "extent": [907, 1014]}], "container": true}, {"type": "para", "indent": 0, "text": ["groupexpression/snippet"], "extent": [1014, 1038], "body": [{"type": "para", "indent": 4, "text": [{"scheme": null, "value": "qL", "type": "link", "text": "", "fullpath": "/qlib/vexpressions/qL.html"}, " Prim Length: Longer than\n    chf(", {"type": "q", "text": ["tolerance"]}, ") < primintrinsic(0, ", {"type": "q", "text": ["measuredperimeter"]}, ", @elemnum)"], "extent": [1038, 1144]}], "container": true}, {"type": "para", "indent": 0, "text": ["groupexpression/snippet"], "extent": [1144, 1168], "body": [{"type": "para", "indent": 4, "text": [{"scheme": null, "value": "qL", "type": "link", "text": "", "fullpath": "/qlib/vexpressions/qL.html"}, " Prim Volume: Smaller than\n    chf(", {"type": "q", "text": ["tolerance"]}, ") > primintrinsic(0, ", {"type": "q", "text": ["measuredvolume"]}, ", @elemnum)"], "extent": [1168, 1272]}], "container": true}, {"type": "para", "indent": 0, "text": ["groupexpression/snippet"], "extent": [1272, 1296], "body": [{"type": "para", "indent": 4, "text": [{"scheme": null, "value": "qL", "type": "link", "text": "", "fullpath": "/qlib/vexpressions/qL.html"}, " Prim Volume: Larger than\n    chf(", {"type": "q", "text": ["tolerance"]}, ") < primintrinsic(0, ", {"type": "q", "text": ["measuredvolume"]}, ", @elemnum)"], "extent": [1296, 1399]}], "container": true}, {"type": "para", "indent": 0, "text": ["groupexpression/snippet"], "extent": [1399, 1423], "body": [{"type": "para", "indent": 4, "text": [{"scheme": null, "value": "qL", "type": "link", "text": "", "fullpath": "/qlib/vexpressions/qL.html"}, " Group by Normal/Lookat Point\n    degrees( acos(dot(@N, normalize(chv(", {"type": "q", "text": ["position"]}, ")-@P))) ) < chf(", {"type": "q", "text": ["angle"]}, ")"], "extent": [1423, 1537]}], "container": true}, {"type": "para", "indent": 0, "text": ["groupexpression/snippet"], "extent": [1537, 1561], "body": [{"type": "para", "indent": 4, "text": [{"scheme": null, "value": "qL", "type": "link", "text": "", "fullpath": "/qlib/vexpressions/qL.html"}, " Group by Same ids as in Second Input\n    findattribval(1, chs(", {"type": "q", "text": ["grouptype"]}, "), ", {"type": "q", "text": ["id"]}, ", @id)>=0"], "extent": [1561, 1663]}], "container": true}, {"type": "para", "indent": 0, "text": ["attribexpression/snippet"], "extent": [1663, 1688], "body": [{"type": "para", "indent": 4, "text": [{"scheme": null, "value": "qL", "type": "link", "text": "", "fullpath": "/qlib/vexpressions/qL.html"}, " Element number\n    @elemnum"], "extent": [1688, 1726]}], "container": true}, {"type": "para", "indent": 0, "text": ["attribexpression/snippet"], "extent": [1726, 1751], "body": [{"type": "para", "indent": 4, "text": [{"scheme": null, "value": "qL", "type": "link", "text": "", "fullpath": "/qlib/vexpressions/qL.html"}, " Element number (float ", {"scheme": null, "value": "0..1", "type": "link", "text": "", "fullpath": "/qlib/vexpressions/0..1.html"}, ")\n    @elemnum/(@numelem-1.0)"], "extent": [1751, 1819]}], "container": true}, {"type": "para", "indent": 0, "text": ["attribexpression/snippet"], "extent": [1819, 1844], "body": [{"type": "para", "indent": 4, "text": [{"scheme": null, "value": "qL", "type": "link", "text": "", "fullpath": "/qlib/vexpressions/qL.html"}, " Random Distribution (elemnum)\n    chramp(", {"type": "q", "text": ["distribution"]}, ", random(@elemnum*12+34))"], "extent": [1844, 1935]}], "container": true}, {"type": "para", "indent": 0, "text": ["attribexpression/snippet"], "extent": [1935, 1960], "body": [{"type": "para", "indent": 4, "text": [{"scheme": null, "value": "qL", "type": "link", "text": "", "fullpath": "/qlib/vexpressions/qL.html"}, " Random Distribution (id)\n    chramp(", {"type": "q", "text": ["distribution"]}, ", random(@id*76+19))"], "extent": [1960, 2041]}], "container": true}, {"type": "para", "indent": 0, "text": ["attribexpression/snippet"], "extent": [2041, 2066], "body": [{"type": "para", "indent": 4, "text": [{"scheme": null, "value": "qL", "type": "link", "text": "", "fullpath": "/qlib/vexpressions/qL.html"}, " Vector to 2nd Input Point Positions\n    @opinput1_P - @P"], "extent": [2066, 2133]}], "container": true}, {"type": "para", "indent": 0, "text": ["attribexpression/snippet"], "extent": [2133, 2158], "body": [{"type": "para", "indent": 4, "text": [{"scheme": null, "value": "qL", "type": "link", "text": "", "fullpath": "/qlib/vexpressions/qL.html"}, " Vector to 2nd Input Point Positions (Normalized)\n    normalize(@opinput1_P - @P)"], "extent": [2158, 2249]}], "container": true}, {"type": "para", "indent": 0, "text": ["attribexpression/snippet"], "extent": [2249, 2274], "body": [{"type": "para", "indent": 4, "text": [{"scheme": null, "value": "qL", "type": "link", "text": "", "fullpath": "/qlib/vexpressions/qL.html"}, " Number of Nearby Points\n    len(nearpoints(0, v@P, chf('maxdist'), chi('maxpts')))"], "extent": [2274, 2367]}], "container": true}, {"type": "para", "indent": 0, "text": ["attribexpression/snippet"], "extent": [2367, 2392], "body": [{"type": "para", "indent": 4, "text": [{"scheme": null, "value": "qL", "type": "link", "text": "", "fullpath": "/qlib/vexpressions/qL.html"}, " Number of Nearby Points (Normalized)\n    len(nearpoints(0, v@P, chf('maxdist'), chi('maxpts'))) / float(chi('maxpts'))"], "extent": [2392, 2521]}], "container": true}, {"type": "para", "indent": 0, "text": ["attribexpression/snippet"], "extent": [2521, 2546], "body": [{"type": "para", "indent": 4, "text": [{"scheme": null, "value": "qL", "type": "link", "text": "", "fullpath": "/qlib/vexpressions/qL.html"}, " id to string attribute\n    sprintf(", {"type": "q", "text": ["piece%d"]}, ", i@id)"], "extent": [2546, 2608]}], "container": true}, {"type": "para", "indent": 0, "text": ["attribexpression/snippet"], "extent": [2608, 2633], "body": [{"type": "para", "indent": 4, "text": [{"scheme": null, "value": "qL", "type": "link", "text": "", "fullpath": "/qlib/vexpressions/qL.html"}, " ", {"type": "q", "text": ["name"]}, " piece numbers to int attribute\n    opdigits(s@name)"], "extent": [2633, 2704]}], "container": true}, {"type": "para", "indent": 0, "text": ["attribwrangle/snippet"], "extent": [2704, 2726], "body": [{"type": "para", "indent": 4, "text": [{"scheme": null, "value": "qL", "type": "link", "text": "", "fullpath": "/qlib/vexpressions/qL.html"}, " Number of Nearby Points\n    float maxdist = chf('maxdist');\n    int maxpts = chi('maxpts');\n    i@numnear = len(nearpoints(0, v@P, maxdist, maxpts));"], "extent": [2726, 2886]}], "container": true}, {"type": "para", "indent": 0, "text": ["attribwrangle/snippet"], "extent": [2886, 2908], "body": [{"type": "para", "indent": 4, "text": [{"scheme": null, "value": "qL", "type": "link", "text": "", "fullpath": "/qlib/vexpressions/qL.html"}, " Number of Nearby Points (Normalized)\n    float maxdist = chf('maxdist');\n    int maxpts = chi('maxpts');\n    f@numnear = len(nearpoints(0, v@P, maxdist, maxpts)) / float(maxpts);"], "extent": [2908, 3097]}], "container": true}, {"type": "para", "indent": 0, "text": ["attribwrangle/snippet"], "extent": [3097, 3119], "body": [{"type": "para", "indent": 4, "text": [{"scheme": null, "value": "qL", "type": "link", "text": "", "fullpath": "/qlib/vexpressions/qL.html"}, " Snap to 2nd Input SDF Boundary"], "extent": [3119, 3159]}, {"type": "para", "indent": 4, "text": ["// Snaps points of 1st input to the SDF boundary of 2nd input"], "extent": [3159, 3225]}, {"type": "para", "indent": 4, "text": ["// 1st input: geometry"], "extent": [3225, 3252]}, {"type": "para", "indent": 4, "text": ["// 2nd input: SDF volume to snap to"], "extent": [3252, 3292]}, {"type": "para", "indent": 4, "text": ["// NOTE: make sure the exterior voxel band is large enough"], "extent": [3292, 3355]}, {"type": "para", "indent": 4, "text": ["//       on the 2nd SDF volume\n    vector"], "extent": [3355, 3401], "body": [{"type": "para", "indent": 8, "text": ["d = volumegradient(1, 0, v@P),\n        v = 0;"], "extent": [3401, 3455]}], "container": true}, {"type": "para", "indent": 4, "text": ["float"], "extent": [3455, 3465], "body": [{"type": "para", "indent": 8, "text": ["sdf = volumesample(1, 0, v@P);"], "extent": [3465, 3504]}], "container": true}, {"type": "para", "indent": 4, "text": ["//if (sdf<0)\n    {"], "extent": [3504, 3527], "body": [{"type": "para", "indent": 8, "text": ["v = normalize(d) * -sdf;"], "extent": [3527, 3560]}], "container": true}, {"type": "para", "indent": 4, "text": ["}\n    v@P += v;"], "extent": [3560, 3581]}], "container": true}, {"type": "para", "indent": 0, "text": ["attribwrangle/snippet"], "extent": [3581, 3603], "body": [{"type": "para", "indent": 4, "text": [{"scheme": null, "value": "qL", "type": "link", "text": "", "fullpath": "/qlib/vexpressions/qL.html"}, " Extract packed prim full transform (Transform-by-Attrib)"], "extent": [3603, 3669]}, {"type": "para", "indent": 4, "text": ["// Use the 'xform' attribute with a Transform by Attrib SOP\n    4@xform = primintrinsic(0, ", {"type": "q", "text": ["packedfulltransform"]}, ", @primnum);"], "extent": [3669, 3799]}], "container": true}, {"type": "para", "indent": 0, "text": ["attribwrangle/snippet"], "extent": [3799, 3821], "body": [{"type": "para", "indent": 4, "text": [{"scheme": null, "value": "qL", "type": "link", "text": "", "fullpath": "/qlib/vexpressions/qL.html"}, " Extract packed prim full transform (Copy-to-Points)"], "extent": [3821, 3882]}, {"type": "para", "indent": 4, "text": ["// ", {"type": "q", "text": ["transform"]}, " the full transformation attribute supported by Copy to Points SOP\n    4@transform = primintrinsic(0, ", {"type": "q", "text": ["packedfulltransform"]}, ", @primnum);"], "extent": [3882, 4036]}, {"type": "para", "indent": 4, "text": ["// P is zeroed out as ", {"type": "q", "text": ["transform"]}, " already contains the transformation\n    v@P = 0;"], "extent": [4036, 4124]}], "container": true}, {"type": "para", "indent": 0, "text": ["attribwrangle/snippet"], "extent": [4124, 4146], "body": [{"type": "para", "indent": 4, "text": [{"scheme": null, "value": "qL", "type": "link", "text": "", "fullpath": "/qlib/vexpressions/qL.html"}, " id attribute to name (", {"type": "q", "text": ["pieceNNN"]}, ")\n    s@name = sprintf(", {"type": "q", "text": ["piece%d"]}, ", i@id);"], "extent": [4146, 4229]}], "container": true}, {"type": "para", "indent": 0, "text": ["attribwrangle/snippet"], "extent": [4229, 4251], "body": [{"type": "para", "indent": 4, "text": [{"scheme": null, "value": "qL", "type": "link", "text": "", "fullpath": "/qlib/vexpressions/qL.html"}, " name (", {"type": "q", "text": ["pieceNNN"]}, ") numbering to id attrib\n    i@id = opdigits(s@name);"], "extent": [4251, 4331]}], "container": true}, {"type": "para", "indent": 0, "text": ["attribwrangle/snippet"], "extent": [4331, 4353], "body": [{"type": "para", "indent": 4, "text": [{"scheme": null, "value": "qL", "type": "link", "text": "", "fullpath": "/qlib/vexpressions/qL.html"}, " Point (element) number to id attribute\n    i@id = @elemnum;"], "extent": [4353, 4424]}], "container": true}, {"type": "para", "indent": 0, "text": ["popforce/localforceexpression"], "extent": [4424, 4454], "body": [{"type": "para", "indent": 4, "text": [{"scheme": null, "value": "qL", "type": "link", "text": "", "fullpath": "/qlib/vexpressions/qL.html"}, " Magnitude by Ramp over Lifespan\n    force *= chramp(", {"type": "q", "text": ["force_by_age"]}, ", @nage);"], "extent": [4454, 4540]}], "container": true}, {"type": "para", "indent": 0, "text": ["popforce/localforceexpression"], "extent": [4540, 4570], "body": [{"type": "para", "indent": 4, "text": [{"scheme": null, "value": "qL", "type": "link", "text": "", "fullpath": "/qlib/vexpressions/qL.html"}, " Random Magnitude from id"], "extent": [4570, 4604]}, {"type": "para", "indent": 4, "text": ["// random magnitude from id          (exp,  min,    max)\n    force *= fit01( pow(rand(@id*12+34),  1.0),  0.25,  1.0 );"], "extent": [4604, 4729]}], "container": true}, {"type": "para", "indent": 0, "text": ["popforce/localnoiseexpression"], "extent": [4729, 4759], "body": [{"type": "para", "indent": 4, "text": [{"scheme": null, "value": "qL", "type": "link", "text": "", "fullpath": "/qlib/vexpressions/qL.html"}, " Amplitude by Ramp over Lifespan\n    amp *= chramp(", {"type": "q", "text": ["amp_by_age"]}, ", @nage);"], "extent": [4759, 4841]}], "container": true}, {"type": "para", "indent": 0, "text": ["popforce/localnoiseexpression"], "extent": [4841, 4871], "body": [{"type": "para", "indent": 4, "text": [{"scheme": null, "value": "qL", "type": "link", "text": "", "fullpath": "/qlib/vexpressions/qL.html"}, " Random Amplitude from id"], "extent": [4871, 4905]}, {"type": "para", "indent": 4, "text": ["// random amplitude from id        (exp,   min,   max)\n    amp *= fit01( pow(rand(@id*12+34),  1.0),  0.25,  1.0 );"], "extent": [4905, 5027]}], "container": true}, {"type": "para", "indent": 0, "text": ["popadvectbyvolumes/localexpression"], "extent": [5027, 5062], "body": [{"type": "para", "indent": 4, "text": [{"scheme": null, "value": "qL", "type": "link", "text": "", "fullpath": "/qlib/vexpressions/qL.html"}, " Random Velocity Scale from id"], "extent": [5062, 5101]}, {"type": "para", "indent": 4, "text": ["//\n    velscale *= fit01( random(@id*12+34), 0.25, 1.0 );"], "extent": [5101, 5164]}, {"type": "para", "indent": 4, "text": ["// update velscale correctly for negative aged particles"], "extent": [5164, 5225]}, {"type": "para", "indent": 4, "text": ["//\n    if (@age<0.0) {"], "extent": [5225, 5252], "body": [{"type": "para", "indent": 8, "text": ["velscale *= (@age+@TimeInc) / @TimeInc;"], "extent": [5252, 5300]}], "container": true}, {"type": "para", "indent": 4, "text": ["}"], "extent": [5300, 5307]}], "container": true}, {"type": "para", "indent": 0, "text": ["popadvectbyvolumes/localexpression"], "extent": [5307, 5342], "body": [{"type": "para", "indent": 4, "text": [{"scheme": null, "value": "qL", "type": "link", "text": "", "fullpath": "/qlib/vexpressions/qL.html"}, " Update velscale correctly for negative aged particles"], "extent": [5342, 5405]}, {"type": "para", "indent": 4, "text": ["//\n    if (@age<0.0) {"], "extent": [5405, 5432], "body": [{"type": "para", "indent": 8, "text": ["velscale *= (@age+@TimeInc) / @TimeInc;"], "extent": [5432, 5480]}], "container": true}, {"type": "para", "indent": 4, "text": ["}"], "extent": [5480, 5488]}], "container": true}, {"type": "para", "indent": 0, "text": ["popwrangle/snippet\n", {"scheme": null, "value": "qL", "type": "link", "text": "", "fullpath": "/qlib/vexpressions/qL.html"}, " Snap to 2nd Input SDF Boundary"], "extent": [5488, 5543]}, {"type": "para", "indent": 0, "text": ["vector"], "extent": [5543, 5800], "body": [{"type": "para", "indent": 4, "text": ["d = volumegradient(1, 0, v@P),\n    v = 0;"], "extent": [5800, 5846]}], "container": true}, {"type": "para", "indent": 0, "text": ["float"], "extent": [5846, 5852], "body": [{"type": "para", "indent": 4, "text": ["sdf = volumesample(1, 0, v@P);"], "extent": [5852, 5887]}], "container": true}, {"type": "para", "indent": 0, "text": ["{"], "extent": [5887, 5902], "body": [{"type": "para", "indent": 4, "text": ["v = normalize(d) * -sdf;"], "extent": [5902, 5931]}], "container": true}, {"type": "para", "indent": 0, "text": ["}\nv@P += v;"], "extent": [5931, 5944]}]}