{"type": "root", "attrs": {"type": "node", "context": "apex", "namespace": "apex", "internal": "rig::SplineInterpolateTransformsArray", "version": "", "tags": "apex", "since": "20.0"}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["rig::SplineInterpolateTransformsArray"], "extent": [129, 171]}, {"type": "summary", "indent": 0, "text": ["Generates and samples a spline."], "extent": [171, 211]}, {"type": "para", "indent": 0, "text": ["Generates a spline from a number of input control matrices. The position of the control matrices defines the shape of the generated spline, while the upper 3\u00d73 transform of the control matrices defines the framing of the spline. The generated spline is then resampled ", {"type": "ui", "text": ["numsamples"]}, " times to produce output transforms that are made available on the ", {"type": "ui", "text": ["resampled"]}, " port. Additional twists can be applied to the output transforms via the ", {"type": "ui", "text": ["twists"]}, " port."], "extent": [211, 664]}, {"type": "para", "indent": 0, "text": ["The output transforms are interpolated based on the sample\u2019s neighboring input transforms, and then adjusted such that the ", {"type": "ui", "text": ["tangent"]}, " vector points toward the next sample. The default tangent vector is the -Z axis, which implies that, by default, the control matrices should also have their -Z axis pointing in the spline\u2019s desired tangent direction. If the control matrices use a different local tangent vector to define their tangent direction, the ", {"type": "ui", "text": ["tangent"]}, " port should be updated accordingly. For example, if the control matrices use the +X axis as the tangent direction, then ", {"type": "ui", "text": ["tangent"]}, " should be updated to (1, 0, 0)."], "extent": [664, 1293]}, {"type": "para", "indent": 0, "text": ["Internally, the spline generated from the control matrices is a bezier curve of the specified ", {"type": "ui", "text": ["order"]}, ". This means that the number of control matrices must satisfy the equation, ", {"type": "code", "text": ["<number_of_cvs> % (order-1) == 1"]}, ". This constraint may be lifted in a future version of Houdini, but as a workaround, users can generate a NURBS curve with the desired number of control points (with a ", {"type": "code", "text": ["transform"]}, " point attribute), and use ", {"scheme": "Node", "value": "/nodes/apex/rig--SampleSplineTransforms", "type": "link", "text": ["rig::SampleSplineTransforms"], "fullpath": "/nodes/apex/rig--SampleSplineTransforms.html"}, " to sample the control curve."], "extent": [1293, 1810]}, {"level": 1, "id": "inputs", "container": true, "type": "inputs_section", "indent": 0, "role": "section", "extent": [1810, 1818], "body": [{"type": "inputs_item_group", "body": [{"ext": null, "type": "inputs_item", "indent": 0, "text": ["cvs"], "role": "item", "extent": [1818, 1827], "body": [{"type": "para", "indent": 4, "text": ["The control matrices used to generate and frame a control spline. The number of control matrices must satisfy the equation, ", {"type": "code", "text": ["<number_of_cvs> % (order-1) == 1"]}, "."], "extent": [1851, 2016]}], "container": true, "attrs": {"type": "Matrix4Array"}}, {"ext": null, "type": "inputs_item", "indent": 0, "text": ["twists"], "role": "item", "extent": [2016, 2027], "body": [{"type": "para", "indent": 4, "text": ["Additional twists (in radians) to add to the output transforms. There does NOT have to be a twist value per CV. Adding values 0 and 2*M_PI twists the output transforms a full rotation about the transforms' Z axes. Additional twist values are interpolated linearly between the values across the length of the spline."], "extent": [2049, 2370]}], "container": true, "attrs": {"type": "FloatArray"}}, {"ext": null, "type": "inputs_item", "indent": 0, "text": ["numsamples"], "role": "item", "extent": [2370, 2385], "body": [{"type": "para", "indent": 4, "text": ["The number of samples to take for the output spline."], "extent": [2400, 2458]}], "container": true, "attrs": {"type": "Int"}}, {"ext": null, "type": "inputs_item", "indent": 0, "text": ["order"], "role": "item", "extent": [2458, 2468], "body": [{"type": "para", "indent": 4, "text": ["The order of the generated spline curve."], "extent": [2483, 2529]}], "container": true, "attrs": {"type": "Int"}}, {"ext": null, "type": "inputs_item", "indent": 0, "text": ["smooth"], "role": "item", "extent": [2529, 2539], "body": [{"type": "para", "indent": 4, "text": ["If set to True, adds smoothstep smoothing to the output transforms. The default value is False."], "extent": [2555, 2656]}], "container": true, "attrs": {"type": "Bool"}}, {"ext": null, "type": "inputs_item", "indent": 0, "text": ["byedge"], "role": "item", "extent": [2656, 2667], "body": [{"type": "para", "indent": 4, "text": ["If set to True, samples each segment of the spline separately, with ", {"type": "ui", "text": ["numsamples"]}, " points sampled on each edge of the input geometry."], "extent": [2683, 2822]}], "container": true, "attrs": {"type": "Bool"}}], "container": true, "role": "item_group"}], "text": "Inputs"}, {"level": 1, "id": "outputs", "container": true, "type": "outputs_section", "indent": 0, "role": "section", "extent": [2822, 2831], "body": [{"type": "outputs_item_group", "body": [{"ext": null, "type": "outputs_item", "indent": 0, "text": ["resampled"], "role": "item", "extent": [2831, 2846], "body": [{"type": "para", "indent": 4, "text": ["The resampled transforms."], "extent": [2870, 2901]}], "container": true, "attrs": {"type": "Matrix4Array"}}], "container": true, "role": "item_group"}], "text": "Outputs"}, {"level": 1, "id": "related", "container": true, "type": "related_section", "indent": 0, "role": "section", "extent": [2901, 2910], "body": [{"type": "bullet_group", "body": [{"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/apex/rig--ControlSpline", "type": "link", "text": "", "fullpath": "/nodes/apex/rig--ControlSpline.html"}], "extent": [2910, 2943]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/apex/rig--ControlSplineFromArray", "type": "link", "text": "", "fullpath": "/nodes/apex/rig--ControlSplineFromArray.html"}], "extent": [2943, 2985]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/apex/rig--SampleSplineTransforms", "type": "link", "text": "", "fullpath": "/nodes/apex/rig--SampleSplineTransforms.html"}], "extent": [2985, 3027]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/apex/rig--SampleSplineTransformsToArray", "type": "link", "text": "", "fullpath": "/nodes/apex/rig--SampleSplineTransformsToArray.html"}], "extent": [3027, 3076]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/apex/rig--SplineInterpolateTransforms", "type": "link", "text": "", "fullpath": "/nodes/apex/rig--SplineInterpolateTransforms.html"}], "extent": [3076, 3123]}], "container": true}], "text": "Related"}], "title": ["rig::SplineInterpolateTransformsArray"], "summary": ["Generates and samples a spline."]}