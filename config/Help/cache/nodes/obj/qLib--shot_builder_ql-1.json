{"type": "root", "attrs": {"icon": "MISC/present", "context": "obj", "type": "node", "internal": "shot_builder_ql", "version": "1", "namespace": "qLib"}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["Shot Builder qL"], "extent": [47, 67]}, {"type": "para", "indent": 0, "text": [{"type": "strong", "text": ["interface version 1"]}], "extent": [67, 91]}, {"type": "summary", "indent": 0, "text": ["Builds Houdini scene elements from on-disk files."], "extent": [91, 148]}, {"type": "para", "indent": 0, "text": ["This is a convenience OBJ-level operator to quickly "], "extent": [148, 202]}, {"type": "para", "indent": 0, "text": ["This object-level operator provides a convenient way for creating Houdini scene elements\nfrom multiple geometry files on disk."], "extent": [202, 330]}, {"type": "para", "indent": 0, "text": ["This enables a basically single-click importing of multiple alembic files\n(cameras, geometry, animation, etc.) exported from another application (such as Maya) \u2013\npractically setting up a rough version of the same Maya scene."], "extent": [330, 557]}, {"type": "para", "indent": 0, "text": ["Additionally, hscript .cmd files are also supported (to be used for setting\nup animation ranges, etc.), as well as channel-type file formats."], "extent": [557, 701]}, {"level": 1, "id": "filetypes", "container": true, "type": "filetypes_section", "indent": 0, "text": ["Supported file types"], "role": "section", "extent": [701, 733], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["alembic (*.abc)"], "extent": [733, 754], "body": [{"type": "para", "indent": 8, "text": ["The main intended format for sharing geometry between applications.\n        Also the preferred format of this operator."], "extent": [754, 883]}], "container": true}, {"type": "dt", "indent": 4, "text": ["hscript (*.cmd)"], "extent": [883, 904], "body": [{"type": "para", "indent": 8, "text": ["Hscript allows to set up various other aspects of the scene that are\n        not related to geometry (e.g. frame ranges, resolutions, etc.)"], "extent": [904, 1053]}], "container": true}, {"type": "dt", "indent": 4, "text": ["channel (*.clip, etc.)"], "extent": [1053, 1081], "body": [{"type": "para", "indent": 8, "text": ["All channel-type formats are supported, and an individual File CHOP is\n        created for each in a CHOP network.\n        For supported formats, see the ", {"scheme": "Node", "value": "/nodes/chop/file", "type": "link", "text": ["File CHOP documentation"], "fullpath": "/nodes/chop/file.html"}, "."], "extent": [1081, 1286]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Other"], "extent": [1286, 1297], "body": [{"type": "para", "indent": 8, "text": ["Any other file is considered to be a geometry format and will be\n        loaded with a File SOP."], "extent": [1297, 1404]}], "container": true}], "container": true}]}, {"type": "warning_group", "body": [{"type": "warning", "indent": 0, "role": "item", "extent": [1404, 1413], "body": [{"type": "para", "indent": 4, "text": [{"type": "strong", "text": ["Geometry file sequences are not supported"]}, " at the moment. (Trying to import\n    one will have the undesirable result of creating individual objects for each\n    file.)"], "extent": [1413, 1587]}], "container": true}], "container": true, "role": "item_group"}, {"level": 1, "id": "parameters", "container": true, "type": "parameters_section", "indent": 0, "role": "section", "extent": [1587, 1599], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 4, "text": ["Sources"], "extent": [1599, 1613], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 8, "text": ["Source Directories"], "extent": [1613, 1641], "body": [{"type": "para", "indent": 12, "text": ["A list of folders to import scene elements from.\n            (Multiple folders allows separating of shared and shot-specific data, for example.)"], "extent": [1641, 1803]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Source File Patterns"], "extent": [1803, 1833], "body": [{"type": "para", "indent": 12, "text": ["A list of filename patterns to import (or run).\n            Both wildcarded patterns and specific file names are valid.\n            Also, multiple patterns can be included on a single line."], "extent": [1833, 2040]}, {"type": "note_group", "body": [{"type": "note", "indent": 12, "role": "item", "extent": [2040, 2058], "body": [{"type": "para", "indent": 16, "text": ["When specifying actual file names, it\u2019s recommended to\n                have unique file names even between different source folders.\n                (As the specified file will be looked for in ", {"type": "em", "text": ["all"]}, " source folders.)"], "extent": [2058, 2296]}, {"type": "para", "indent": 16, "text": ["Also, ", {"type": "strong", "text": ["no whitespace is supported"]}, " in file names."], "extent": [2296, 2363]}], "container": true}], "container": true, "role": "item_group"}], "container": true}], "container": true}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Creation"], "extent": [2363, 2377], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 8, "text": ["Build Path"], "extent": [2377, 2397], "body": [{"type": "para", "indent": 12, "text": ["Path to an OBJ network or subnet to import/build into.\n            If disabled, the current network/subnet will be used."], "extent": [2397, 2535]}], "container": true}, {"type": "dt", "indent": 8, "text": ["OP Prefix"], "extent": [2535, 2554], "body": [{"type": "para", "indent": 12, "text": ["A name prefix added to all created operators."], "extent": [2554, 2617]}], "container": true}, {"type": "dt", "indent": 8, "text": ["CHOP Name"], "extent": [2617, 2636], "body": [{"type": "para", "indent": 12, "text": ["Name of the CHOP network to be created for storing channel-type loaders.\n            (If there are no actual channel-type files, this chopnet won\u2019t be created.)"], "extent": [2636, 2814]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Abc as Hierarchy"], "extent": [2814, 2840], "body": [{"type": "para", "indent": 12, "text": ["If the file name matches one of the patterns in this field, the\n            alembic file will be imported with it\u2019s hierarchy as Houdini subnetworks.\n            (This can be useful for extracting individual node transformations, etc.)"], "extent": [2840, 3093]}, {"type": "para", "indent": 12, "text": ["Otherwise, an alembic file is imported as a single OBJ\n            (with an Alembic SOP within.)"], "extent": [3093, 3207]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Apply Preset"], "extent": [3207, 3229], "body": [{"type": "para", "indent": 12, "text": ["If enabled, all newly created nodes will have the specified operator preset\n            applied, right after their creation. (This requires saving a preset with the\n            same name for any involved node type.) If the preset doesn\u2019t exist for a node\n            type, nothing will happen."], "extent": [3229, 3540]}, {"type": "note_group", "body": [{"type": "note", "indent": 12, "role": "item", "extent": [3540, 3558], "body": [{"type": "para", "indent": 16, "text": ["The preset will ", {"type": "em", "text": ["not"]}, " be applied to nodes not directly created by this\n                operator (e.g. nodes withing generated alembic hierarchies.)"], "extent": [3558, 3727]}], "container": true}], "container": true, "role": "item_group"}], "container": true}, {"type": "dt", "indent": 8, "text": ["Node Color"], "extent": [3727, 3747], "body": [{"type": "para", "indent": 12, "text": ["If enabled, new nodes will be created with this node color."], "extent": [3747, 3824]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Post-Create"], "extent": [3824, 3845], "body": [{"type": "para", "indent": 12, "text": [{"type": "em", "text": ["(work-in-progress)"]}], "extent": [3845, 3883]}, {"type": "para", "indent": 12, "text": ["An optional hscript or python code snippet to run on all newly created node.\n            (TODO: finish this section)"], "extent": [3883, 4013]}], "container": true}], "container": true}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Build"], "extent": [4013, 4024], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 8, "text": ["Build Scene Objects"], "extent": [4024, 4053], "body": [{"type": "para", "indent": 12, "text": ["Pressing this button will run the import procedure."], "extent": [4053, 4122]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Rebuild Existing Objects"], "extent": [4122, 4156], "body": [{"type": "para", "indent": 12, "text": ["If enabled, already existing nodes will be deleted and re-created.\n            (Otherwise already nodes that already import existing geometry will\n            be skipped.)"], "extent": [4156, 4342]}], "container": true}], "container": true}], "container": true, "role": "item"}], "container": true, "role": "item_group"}], "text": "Parameters"}, {"level": 1, "id": "related", "container": true, "type": "related_section", "indent": 0, "role": "section", "extent": [4342, 4351], "body": [{"type": "bullet_group", "body": [{"blevel": 6, "type": "bullet", "indent": 4, "text": [{"scheme": "Node", "value": "/nodes/obj/qLib::shot_ql::1", "type": "link", "text": ["Shot qL"], "exists": true}], "extent": [4351, 4393]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": [{"scheme": "Node", "value": "/nodes/obj/qLib::environment_ql::1", "type": "link", "text": ["Environment qL"], "exists": true}], "extent": [4393, 4449]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": [{"scheme": "Node", "value": "/nodes/obj/alembicarchive", "type": "link", "text": "", "fullpath": "/nodes/obj/alembicarchive.html"}], "extent": [4449, 4481]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": [{"scheme": "Node", "value": "/nodes/sop/file", "type": "link", "text": ["File SOP"], "fullpath": "/nodes/sop/file.html"}], "extent": [4481, 4512]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": [{"scheme": "Node", "value": "/nodes/sop/alembic", "type": "link", "text": ["Alembic SOP"], "fullpath": "/nodes/sop/alembic.html"}], "extent": [4512, 4549]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": [{"scheme": "Node", "value": "/nodes/chop/file", "type": "link", "text": ["File CHOP"], "fullpath": "/nodes/chop/file.html"}], "extent": [4549, 4583]}], "container": true}], "text": "Related"}, {"level": 1, "id": "todo", "container": true, "type": "todo_section", "indent": 0, "text": ["Todo"], "role": "section", "extent": [4583, 4594], "body": [{"type": "bullet_group", "body": [{"blevel": 6, "type": "bullet", "indent": 4, "text": ["(WIP) add a VEXpression-style python post-processing field (which runs for each created node)"], "extent": [4594, 4694], "body": [{"type": "bullet_group", "body": [{"blevel": 8, "type": "bullet", "indent": 6, "text": ["the postproc hscript/python code is (re-)evaluated for each created node"], "extent": [4694, 4775]}], "container": true}], "container": true}, {"blevel": 6, "type": "bullet", "indent": 4, "text": ["parameter: ", {"type": "em", "text": ["exclusion"]}, " file name pattern"], "extent": [4775, 4822]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": ["Support importing of python scripts"], "extent": [4822, 4864]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": ["Support geometry file sequences (if it\u2019s still common enough)"], "extent": [4864, 4932]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": ["Implement Misc Functions"], "extent": [4932, 4965]}], "container": true}]}, {"level": 1, "id": "relnotes", "container": true, "type": "relnotes_section", "indent": 0, "text": ["Release Notes"], "role": "section", "extent": [4965, 4989], "body": [{"type": "para", "indent": 0, "text": [{"type": "em", "text": ["interface version 1"]}, " \u2014"], "extent": [4989, 5017]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 0, "text": ["2015-05-06"], "extent": [5017, 5029], "body": [{"type": "bullet_group", "body": [{"blevel": 6, "type": "bullet", "indent": 4, "text": ["Created operator names will be stripped of any version strings (e.g. ", {"type": "q", "text": ["something_v001.abc"]}, "  \u2192 ", {"type": "q", "text": ["something.abc"]}, ")"], "extent": [5029, 5146]}], "container": true}], "container": true}, {"type": "dt", "indent": 0, "text": ["2015-03-20"], "extent": [5146, 5158], "body": [{"type": "bullet_group", "body": [{"blevel": 6, "type": "bullet", "indent": 4, "text": ["Resaved for H14"], "extent": [5158, 5180]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": ["Enforces forward slashes for file paths"], "extent": [5180, 5227]}], "container": true}], "container": true}, {"type": "dt", "indent": 0, "text": ["2015-02-13"], "extent": [5227, 5239], "body": [{"type": "bullet_group", "body": [{"blevel": 6, "type": "bullet", "indent": 4, "text": ["Now it uses (should use) forward slashes on windows machines, too. (needs to be tested)"], "extent": [5239, 5334]}], "container": true}], "container": true}, {"type": "dt", "indent": 0, "text": ["2015-02-06"], "extent": [5334, 5346], "body": [{"type": "bullet_group", "body": [{"blevel": 6, "type": "bullet", "indent": 4, "text": ["Folder and file lists are now sorted before processing"], "extent": [5346, 5407]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": ["The ", {"type": "em", "text": ["Build Path"]}, " parameter is now optional\n      (and disabled by default \u2013 this performs build in the current network or subnet)"], "extent": [5407, 5544]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": ["Added UI for post-create hscript/python code"], "extent": [5544, 5596]}], "container": true}], "container": true}, {"type": "dt", "indent": 0, "text": ["2014-11-13"], "extent": [5596, 5608], "body": [{"type": "bullet_group", "body": [{"blevel": 6, "type": "bullet", "indent": 4, "text": ["Sets the builder node\u2019s parent as parent (obj input) for the created objects."], "extent": [5608, 5693]}], "container": true}], "container": true}, {"type": "dt", "indent": 0, "text": ["2014-04-05"], "extent": [5693, 5705], "body": [{"type": "bullet_group", "body": [{"blevel": 6, "type": "bullet", "indent": 4, "text": ["Added toolid/toolcount user data creation for newly created nodes."], "extent": [5705, 5779]}], "container": true}], "container": true}, {"type": "dt", "indent": 0, "text": ["2014-01-23"], "extent": [5779, 5791], "body": [{"type": "bullet_group", "body": [{"blevel": 6, "type": "bullet", "indent": 4, "text": ["Source file patterns won\u2019t try to strip filesystem paths\n      if the parameter contains a backtick expression."], "extent": [5791, 5910]}], "container": true}], "container": true}, {"type": "dt", "indent": 0, "text": ["2013-06-07"], "extent": [5910, 5922], "body": [{"type": "bullet_group", "body": [{"blevel": 6, "type": "bullet", "indent": 4, "text": ["Options for creating new nodes with the specified preset and/or node color."], "extent": [5922, 6005]}], "container": true}], "container": true}, {"type": "dt", "indent": 0, "text": ["2013-06-05"], "extent": [6005, 6017], "body": [{"type": "bullet_group", "body": [{"blevel": 6, "type": "bullet", "indent": 4, "text": ["Bug fix: directory and file pattern on/off switches weren\u2019t working."], "extent": [6017, 6092]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": ["Added support for channel file formats"], "extent": [6092, 6138]}], "container": true}], "container": true}, {"type": "dt", "indent": 0, "text": ["2013-06-04"], "extent": [6138, 6150], "body": [{"type": "para", "indent": 4, "text": ["First prototype."], "extent": [6150, 6172]}], "container": true}], "container": true}]}], "title": ["Shot Builder qL"], "summary": ["Builds Houdini scene elements from on-disk files."]}