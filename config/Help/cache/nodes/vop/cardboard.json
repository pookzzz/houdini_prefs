{"type": "root", "attrs": {"type": "node", "context": "vop", "internal": "cardboard", "icon": "VOP/cardboard", "version": null, "namespace": null}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["Cardboard"], "extent": [69, 83]}, {"type": "summary", "indent": 0, "text": ["Simulates a rough, anti-aliased cardboard surface."], "extent": [83, 142]}, {"type": "para", "indent": 0, "text": ["This operator simulates a rough, anti-aliased cardboard surface."], "extent": [142, 208]}, {"type": "para", "indent": 0, "text": ["If you are looking for a corrugated look, you can either use Furrows in\na separate displacement shader, or pipe the ", {"type": "code", "text": ["dispN"]}, " output of the\n", {"scheme": "Node", "value": "/nodes/vop/furrows", "type": "link", "text": ["Furrows"], "fullpath": "/nodes/vop/furrows.html"}, " operator into the Normal (", {"type": "code", "text": ["N"]}, ") input of this operator as a bump map. We recommend the former."], "extent": [208, 468]}, {"type": "para", "indent": 0, "text": ["Other materials, such as ragged paper and rough walls can also be\nsimulated with this operator by changing the Surface Color (", {"type": "code", "text": ["scolor"]}, ")\ninput and possibly other parameters. Since all this operator does is a\nnoisy displacement followed by a call to the lighting model, it truly is\nmuch more generic than its name suggests. For example, it was used to\nsimulate grout in the ", {"scheme": "Node", "value": "/nodes/vop/stonewall", "type": "link", "text": ["Stone Wall"], "fullpath": "/nodes/vop/stonewall.html"}, " operator."], "extent": [468, 883]}, {"type": "para", "indent": 0, "text": ["If the Position (", {"type": "code", "text": ["P"]}, ") input and the Normal (", {"type": "code", "text": ["N"]}, ") input are not connected,\nthe global variables by the same names will be used instead. Typically\nyou will use ", {"scheme": "Node", "value": "/nodes/vop/restpos", "type": "link", "text": ["Rest Position"], "fullpath": "/nodes/vop/restpos.html"}, " or ", {"scheme": "Node", "value": "/nodes/vop/uvspacechg", "type": "link", "text": ["UV Space Change"], "fullpath": "/nodes/vop/uvspacechg.html"}, " as inputs for ", {"type": "code", "text": ["P"]}, ", and\nwill not touch ", {"type": "code", "text": ["N"]}, " unless you want to apply additional displacement to\nthe surface using an operator such as ", {"scheme": "Node", "value": "/nodes/vop/furrows", "type": "link", "text": ["Furrows"], "fullpath": "/nodes/vop/furrows.html"}, ". If you need to access the\nglobal variables directly, they are available from the ", {"scheme": "Node", "value": "/nodes/vop/global", "type": "link", "text": ["Global Variables"], "fullpath": "/nodes/vop/global.html"}, "\noperator."], "extent": [883, 1404]}, {"level": 1, "id": "related", "container": true, "type": "related_section", "indent": 0, "role": "section", "extent": [1404, 1413], "body": [{"type": "bullet_group", "body": [{"blevel": 6, "type": "bullet", "indent": 4, "text": [{"scheme": "Node", "value": "/nodes/vop/eggshell", "type": "link", "text": "", "fullpath": "/nodes/vop/eggshell.html"}], "extent": [1413, 1439]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": [{"scheme": "Node", "value": "/nodes/vop/furrows", "type": "link", "text": "", "fullpath": "/nodes/vop/furrows.html"}], "extent": [1439, 1464]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": [{"scheme": "Node", "value": "/nodes/vop/global", "type": "link", "text": "", "fullpath": "/nodes/vop/global.html"}], "extent": [1464, 1488]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": [{"scheme": "Node", "value": "/nodes/vop/stonewall", "type": "link", "text": "", "fullpath": "/nodes/vop/stonewall.html"}], "extent": [1488, 1515]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": [{"scheme": "Node", "value": "/nodes/vop/wood", "type": "link", "text": "", "fullpath": "/nodes/vop/wood.html"}], "extent": [1515, 1538]}], "container": true}], "text": "Related"}], "title": ["Cardboard"], "summary": ["Simulates a rough, anti-aliased cardboard surface."]}