{"type": "root", "attrs": {"type": "node", "context": "vop", "internal": "stonewall", "icon": "VOP/stonewall", "version": null, "namespace": null}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["Stone Wall"], "extent": [69, 84]}, {"type": "summary", "indent": 0, "text": ["Simulates an anti-aliased stone wall."], "extent": [84, 130]}, {"type": "para", "indent": 0, "text": ["This operator simulates an anti-aliased stone wall."], "extent": [130, 183]}, {"type": "para", "indent": 0, "text": ["The number of stones is roughly determined by the Cell Frequency (", {"type": "code", "text": ["cfreq"]}, ")\ninput. The shape of each piece of stone is controlled by the Shape\nFrequency (", {"type": "code", "text": ["sfreq"]}, ") and Shape Amplitude (", {"type": "code", "text": ["samp"]}, ") inputs. The higher either\nvalue, the more distorted the shape."], "extent": [183, 438]}, {"type": "para", "indent": 0, "text": ["The stone displacement consists of noisy bumps and cavities, whose\nrandomness is controlled by Bump Frequency (", {"type": "code", "text": ["bfreq"]}, "), Bump Amplitude\n(", {"type": "code", "text": ["bamp"]}, ") and Bump Roughness (", {"type": "code", "text": ["brough"]}, "). The amount of cavity chipping is\ndetermined by the Chip Amount (", {"type": "code", "text": ["chip"]}, ") input. By increasing the ", {"type": "code", "text": ["chip"]}, "\namount, you can make the stone look more porous."], "extent": [438, 768]}, {"type": "para", "indent": 0, "text": ["The ", {"type": "q", "text": ["Pepper"]}, " inputs refer to the additional color noise that is\n", {"type": "q", "text": ["peppered"]}, " over the stone surface to make it look more realistic. The\nlook of the pepper noise is controlled by three inputs: Pepper Amplitude\n(", {"type": "code", "text": ["pamp"]}, "), Pepper Roughness (", {"type": "code", "text": ["prough"]}, "), and Bump Frequency (", {"type": "code", "text": ["bfreq"]}, "). The\nPepper Color (", {"type": "code", "text": ["peppercolor"]}, ") specifies its color."], "extent": [768, 1099]}, {"type": "para", "indent": 0, "text": ["Finally, the grooves between the stones come with size (", {"type": "code", "text": ["gwidth"]}, "),\nsoftness (", {"type": "code", "text": ["gsoft"]}, ") and grout (", {"type": "code", "text": ["groutcolor"]}, ", ", {"type": "code", "text": ["gfreq"]}, ", ", {"type": "code", "text": ["gamp"]}, ") controls."], "extent": [1099, 1238]}, {"type": "para", "indent": 0, "text": ["If the Position (", {"type": "code", "text": ["P"]}, "), Normal (", {"type": "code", "text": ["N"]}, ") and texture coordinate (", {"type": "code", "text": ["s"]}, " ", {"type": "code", "text": ["t"]}, ") inputs are\nnot connected, the global variables by the same names will be used\ninstead. Typically, you will use ", {"scheme": "Node", "value": "/nodes/vop/restpos", "type": "link", "text": ["Rest Position"], "fullpath": "/nodes/vop/restpos.html"}, " or ", {"scheme": "Node", "value": "/nodes/vop/uvspacechg", "type": "link", "text": ["UV Space Change"], "fullpath": "/nodes/vop/uvspacechg.html"}, " as\ninputs for ", {"type": "code", "text": ["P"]}, ", and Shading Layer Parameter as the input for ", {"type": "code", "text": ["s"]}, " and\n", {"type": "code", "text": ["t"]}, ". You will not touch ", {"type": "code", "text": ["N"]}, " unless you want to apply additional\ndisplacement to the stone wall using an operator such as ", {"scheme": "Node", "value": "/nodes/vop/bumpmap", "type": "link", "text": ["Bump Map"], "fullpath": "/nodes/vop/bumpmap.html"}, " or ", {"scheme": "Node", "value": "/nodes/vop/furrows", "type": "link", "text": ["Furrows"], "fullpath": "/nodes/vop/furrows.html"}, ". If you need to access the global variables directly, they are\navailable from the ", {"scheme": "Node", "value": "/nodes/vop/global", "type": "link", "text": ["Global Variables"], "fullpath": "/nodes/vop/global.html"}, " operator."], "extent": [1238, 1873]}, {"level": 1, "id": "related", "container": true, "type": "related_section", "indent": 0, "role": "section", "extent": [1873, 1882], "body": [{"type": "bullet_group", "body": [{"blevel": 6, "type": "bullet", "indent": 4, "text": [{"scheme": "Node", "value": "/nodes/vop/bricks", "type": "link", "text": "", "fullpath": "/nodes/vop/bricks.html"}], "extent": [1882, 1906]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": [{"scheme": "Node", "value": "/nodes/vop/bumpmap", "type": "link", "text": "", "fullpath": "/nodes/vop/bumpmap.html"}], "extent": [1906, 1931]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": [{"scheme": "Node", "value": "/nodes/vop/global", "type": "link", "text": "", "fullpath": "/nodes/vop/global.html"}], "extent": [1931, 1955]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": [{"scheme": "Node", "value": "/nodes/vop/restpos", "type": "link", "text": "", "fullpath": "/nodes/vop/restpos.html"}], "extent": [1955, 1980]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": [{"scheme": "Node", "value": "/nodes/vop/stone", "type": "link", "text": "", "fullpath": "/nodes/vop/stone.html"}], "extent": [1980, 2004]}], "container": true}], "text": "Related"}], "title": ["Stone Wall"], "summary": ["Simulates an anti-aliased stone wall."]}