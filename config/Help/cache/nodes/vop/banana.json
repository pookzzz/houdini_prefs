{"type": "root", "attrs": {"type": "node", "context": "vop", "internal": "banana", "icon": "VOP/banana", "version": null, "namespace": null}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["Banana Skin"], "extent": [63, 79]}, {"type": "summary", "indent": 0, "text": ["Generates a material that simulates banana skin."], "extent": [79, 136]}, {"type": "para", "indent": 0, "text": ["This operator generates a material that simulates banana skin."], "extent": [136, 200]}, {"type": "para", "indent": 0, "text": ["The amount of ripeness (or age) determines the color of the banana and\nthe amount of brown blemish, and ranges between zero and one."], "extent": [200, 334]}, {"type": "para", "indent": 0, "text": ["If the Normal (", {"type": "code", "text": ["N"]}, ") input and the texture coordinate (", {"type": "code", "text": ["s"]}, " and ", {"type": "code", "text": ["t"]}, ") inputs are\nnot connected, the global variables by the same names will be used\ninstead. Typically, you will leave ", {"type": "code", "text": ["N"]}, " alone unless you want to displace\nthe surface before the final color calculation (see ", {"scheme": "Node", "value": "/nodes/vop/bumpnoise", "type": "link", "text": ["Bump Noise"], "fullpath": "/nodes/vop/bumpnoise.html"}, "). You\nwill likely use the Shading Layer Parameter as the input for ", {"type": "code", "text": ["s"]}, " and\n", {"type": "code", "text": ["t"]}, ". If you need to access the global variables directly, they are\navailable from the ", {"scheme": "Node", "value": "/nodes/vop/global", "type": "link", "text": ["Global Variables"], "fullpath": "/nodes/vop/global.html"}, " operator."], "extent": [334, 845]}, {"level": 1, "id": "related", "container": true, "type": "related_section", "indent": 0, "role": "section", "extent": [845, 854], "body": [{"type": "bullet_group", "body": [{"blevel": 6, "type": "bullet", "indent": 4, "text": [{"scheme": "Node", "value": "/nodes/vop/eggshell", "type": "link", "text": "", "fullpath": "/nodes/vop/eggshell.html"}], "extent": [854, 880]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": [{"scheme": "Node", "value": "/nodes/vop/mold", "type": "link", "text": "", "fullpath": "/nodes/vop/mold.html"}], "extent": [880, 902]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": [{"scheme": "Node", "value": "/nodes/vop/shadinglayer", "type": "link", "text": "", "fullpath": "/nodes/vop/shadinglayer.html"}], "extent": [902, 932]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": [{"scheme": "Node", "value": "/nodes/vop/skin", "type": "link", "text": "", "fullpath": "/nodes/vop/skin.html"}], "extent": [932, 955]}], "container": true}], "text": "Related"}], "title": ["Banana Skin"], "summary": ["Generates a material that simulates banana skin."]}