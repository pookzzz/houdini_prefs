{"type": "root", "attrs": {"type": "node", "context": "out", "internal": "labs::niagara_rop", "icon": "DOP/particlefluidemitter", "tags": "sidefxlabs, vfx, niagara", "version": null, "namespace": "labs"}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["Labs Niagara ROP"], "extent": [0, 21]}, {"type": "summary", "indent": 0, "text": [" Export point caches to be used with Unreal\u2019s Niagara particle system. "], "extent": [142, 221]}, {"type": "para", "indent": 0, "text": ["The Niagara ROP exports static or animated point caches to a custom json format that can be read by the Houdini Niagara plugin for Unreal. This could be used for driving particle emitters in Niagara, or creating complex simulations in Houdini that can be run in realtime through Niagara."], "extent": [221, 510]}, {"level": 2, "id": "requirements", "container": true, "type": "h", "indent": 0, "text": ["Requirements"], "extent": [510, 546], "body": [{"type": "para", "indent": 0, "text": ["The Niagara ROP works with the latest version of the Houdini Niagara plugin for Unreal 4.25 and onwards."], "extent": [546, 652]}, {"type": "para", "indent": 0, "text": [{"type": "strong", "text": ["To install the plugin"]}, " please refer to the ", {"scheme": null, "value": "https://github.com/sideeffects/HoudiniNiagara", "type": "link", "text": ["Houdini Niagara GitHub"], "exists": true}, " page."], "extent": [652, 774]}, {"type": "para", "indent": 0, "text": ["You can find the latest information and ", {"type": "strong", "text": ["links to sample files"]}, " on the ", {"scheme": null, "value": "https://www.sidefx.com/forum/topic/73075/#post-309029", "type": "link", "text": ["Houdini Niagara Updates"], "exists": true}, " forum thread."], "extent": [774, 940]}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Houdini to Niagara Workflow"], "extent": [940, 976], "body": [{"type": "vimeo_group", "body": [{"ext": null, "type": "vimeo", "indent": 0, "text": [" Houdini Niagara Workflow"], "role": "item", "extent": [976, 1009], "body": [], "container": true, "attrs": {"id": "412724042"}}], "container": true, "role": "item_group"}]}, {"level": 1, "id": "parameters", "container": true, "type": "parameters_section", "indent": 0, "role": "section", "extent": [1028, 1040], "body": [{"level": 2, "id": null, "container": true, "type": "h", "indent": 4, "text": ["General"], "extent": [1040, 1058], "body": [{"level": 3, "id": null, "container": true, "type": "h", "indent": 4, "text": ["ROP Settings"], "extent": [1058, 1083], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 4, "text": ["Frame Range / Time Mode"], "extent": [1083, 1112], "body": [{"type": "para", "indent": 8, "text": ["Controls whether this render node outputs the current frame (", {"type": "ui", "text": ["Render any frame"]}, ") or the image sequence specified in the ", {"type": "ui", "text": ["Start/End/Inc"]}, " parameters (", {"type": "ui", "text": ["Render Frame Range"]}, ")."], "extent": [1112, 1298]}, {"type": "para", "indent": 8, "text": [{"type": "ui", "text": ["Render Frame Range (strict)"]}, " will render frames START to END when it is rendered, but will not allow frames outside this range to be rendered at all. ", {"type": "ui", "text": ["Render Frame Range"]}, " will allow outside frames to be rendered. This is used in conjunction with render dependencies. It also affects the behavior of the 'Override Frame Range' in the Render Control dialog."], "extent": [1298, 1668]}, {"type": "para", "indent": 8, "text": ["Two possible cases where you'd want the strict behavior:"], "extent": [1668, 1742]}, {"type": "bullet_group", "body": [{"blevel": 10, "type": "bullet", "indent": 8, "text": ["A 60 frame walk cycle written out to a geo, but part of a larger ROP net to render out a larger frame range."], "extent": [1742, 1862]}, {"blevel": 10, "type": "bullet", "indent": 8, "text": ["A texture loop from 1-20."], "extent": [1862, 1899]}], "container": true}, {"type": "para", "indent": 8, "text": ["Otherwise, you will usually set this to non-strict."], "extent": [1899, 1960]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 8, "text": ["Render Current Frame"], "extent": [1960, 1991], "body": [{"type": "para", "indent": 12, "text": ["Renders a single frame, based on the value in the playbar or the frame that is requested by a connected output render node."], "extent": [1991, 2128]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Render Frame Range"], "extent": [2128, 2156], "body": [{"type": "para", "indent": 12, "text": ["Renders a sequence of frames. If an output render node is connected, this range is generally ignored in favor of frames requested by the output render node."], "extent": [2156, 2334]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Render Frame Range (Strict)"], "extent": [2334, 2371], "body": [{"type": "para", "indent": 12, "text": ["Renders a sequence of frames. If an output render node is connected, this range restricts its requested frames to this frame range."], "extent": [2371, 2516]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Single Frame With 'time' Attribute"], "extent": [2516, 2560], "body": [{"type": "para", "indent": 12, "text": ["Renders a single frame, with the time attribute set to 0 be default. Ideal for use with point clouds that represent impact points from rbd simulations."], "extent": [2560, 2725]}], "container": true}], "container": true}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Start/End/Inc"], "extent": [2725, 2744], "body": [{"type": "para", "indent": 8, "text": ["Specifies the range of frames to render (start frame, end frame, and increment). All values may be floating point values. The range is inclusive. "], "extent": [2744, 2900]}, {"type": "para", "indent": 8, "text": ["These parameters determine the values of the local variables for the output driver."], "extent": [2900, 2992], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 12, "text": [{"type": "code", "text": ["$NRENDER"]}], "extent": [2992, 3016], "body": [{"type": "para", "indent": 16, "text": ["The number of frames to be rendered by the output driver."], "extent": [3016, 3090]}], "container": true}, {"type": "dt", "indent": 12, "text": [{"type": "code", "text": ["$N"]}], "extent": [3090, 3108], "body": [{"type": "para", "indent": 16, "text": ["The current frame being rendered (starting at 1 and going to ", {"type": "code", "text": ["$NRENDER"]}, ")."], "extent": [3108, 3207]}], "container": true}], "container": true}], "container": true}, {"type": "para", "indent": 8, "text": ["For example, if the parameters are set to:"], "extent": [3207, 3267]}, {"type": "table", "thead": [{"type": "row", "body": [{"type": "cell", "indent": 8, "text": ["Start "], "role": "th", "extent": [3267, 3284], "container": true}, {"type": "cell", "indent": 12, "text": ["End "], "role": "th", "extent": [3284, 3303], "container": true}, {"type": "cell", "indent": 16, "text": ["Inc "], "role": "th", "extent": [3303, 3326]}], "divider": false}], "body": [{"type": "row", "body": [{"type": "cell", "indent": 8, "text": ["10.5 "], "role": "td", "extent": [3326, 3341], "container": true}, {"type": "cell", "indent": 12, "text": ["12 "], "role": "td", "extent": [3341, 3358], "container": true}, {"type": "cell", "role": "td", "body": [{"type": "para", "indent": 16, "text": ["0.5 |"], "extent": [3358, 3381]}]}], "divider": false}]}, {"type": "para", "indent": 8, "text": ["\u2026there will be 4 frames rendered (10.5, 11, 11.5, and 12), so ", {"type": "code", "text": ["$NRENDER"]}, " will have a value of 4. ", {"type": "code", "text": ["$N"]}, " will have the following values at each frame:"], "extent": [3381, 3548]}, {"type": "table", "thead": [{"type": "row", "body": [{"type": "cell", "indent": 8, "text": ["Frame "], "role": "th", "extent": [3548, 3565], "container": true}, {"type": "cell", "indent": 12, "text": [{"type": "code", "text": ["$N"]}, " "], "role": "th", "extent": [3565, 3585]}], "divider": false}], "body": [{"type": "row", "body": [{"type": "cell", "indent": 8, "text": ["10.5 "], "role": "td", "extent": [3585, 3600], "container": true}, {"type": "cell", "role": "td", "body": [{"type": "para", "indent": 12, "text": ["1"], "extent": [3600, 3614]}]}], "divider": false}, {"type": "row", "body": [{"type": "cell", "indent": 8, "text": ["11 "], "role": "td", "extent": [3614, 3627], "container": true}, {"type": "cell", "role": "td", "body": [{"type": "para", "indent": 12, "text": ["2"], "extent": [3627, 3641]}]}], "divider": false}, {"type": "row", "body": [{"type": "cell", "indent": 8, "text": ["11.5 "], "role": "td", "extent": [3641, 3656], "container": true}, {"type": "cell", "role": "td", "body": [{"type": "para", "indent": 12, "text": ["3"], "extent": [3656, 3670]}]}], "divider": false}, {"type": "row", "body": [{"type": "cell", "indent": 8, "text": ["12 "], "role": "td", "extent": [3670, 3683], "container": true}, {"type": "cell", "role": "td", "body": [{"type": "para", "indent": 12, "text": ["4"], "extent": [3683, 3697]}]}], "divider": false}]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Render with Take"], "extent": [3697, 3719], "body": [{"type": "para", "indent": 8, "text": ["The output driver will switch to this take before rendering and then restore the current take when rendering is done."], "extent": [3719, 3846]}, {"type": "tip_group", "body": [{"type": "tip", "indent": 8, "role": "item", "extent": [3846, 3859], "body": [{"type": "para", "indent": 12, "text": ["use ", {"type": "code", "text": ["chs(\"take\")"]}, " to use this value in other parameters. See the ", {"scheme": "Exp", "value": "/expressions/chs", "type": "link", "text": "", "fallback_text": "chs()", "fullpath": "/expressions/chs.html"}, " expression function for more information."], "extent": [3859, 3988]}], "container": true}], "container": true, "role": "item_group"}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Output Path"], "extent": [3988, 4005], "body": [{"type": "para", "indent": 8, "text": ["The output file should be of the type, ", {"type": "strong", "text": [".hbsjon"]}, ", ", {"type": "strong", "text": [".hjson"]}, " or ", {"type": "strong", "text": [".hcsv"]}, " (this format has been deprecated). "], "extent": [4005, 4120]}, {"type": "para", "indent": 8, "text": [{"type": "strong", "text": ["hbjson"]}, " - is a binary JSON file format. Ideal for faster export and import, and smaller file sizes."], "extent": [4120, 4230]}, {"type": "para", "indent": 8, "text": [{"type": "strong", "text": ["hjson"]}, " - an ascii JSON file format. Ideal for debugging the results."], "extent": [4230, 4308]}], "container": true, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 3, "id": null, "container": true, "type": "h", "indent": 4, "text": ["Attributes"], "extent": [4308, 4331], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 4, "text": ["Number of Renames"], "extent": [4331, 4354], "body": [{"type": "para", "indent": 8, "text": ["Rename any point attribute to match naming conventions in Unreal."], "extent": [4354, 4428]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Overwrite Existing Attributes"], "extent": [4428, 4463], "body": [{"type": "para", "indent": 8, "text": ["If the specified destination attribute already exists, it is deleted and replaced by the source attribute."], "extent": [4463, 4578]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Keep Attributes"], "extent": [4578, 4599], "body": [{"type": "para", "indent": 8, "text": ["A space separated list of the attributes that will be written out."], "extent": [4599, 4674]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Cast Attributes"], "extent": [4674, 4695], "body": [{"type": "para", "indent": 8, "text": ["If necessary, you can cast an attribute to a type that matches the compatible types in Unreal."], "extent": [4695, 4798]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Clamp Attributes That Are Outside Type Range"], "extent": [4798, 4848], "body": [{"type": "para", "indent": 8, "text": ["When an attribute is cast to a different type the value might be outside of the range of the target type. If this option is selected, the value will be clamped to the type range. If this option is not selected and an out of range value is encountered, an exception will be raised while writing out the file. Only applicable to binary format output (.hbjson)"], "extent": [4848, 5214]}], "container": true, "role": "item"}], "container": true, "role": "item_group"}]}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 4, "text": ["Advanced"], "extent": [5214, 5233], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 4, "text": ["Export Current Frame As time == 0"], "extent": [5233, 5272], "body": [{"type": "para", "indent": 8, "text": ["Overrides the time attribute to always equal 0. Disabling this will create an age attribute for the points that is relative to the current time in the playbar."], "extent": [5272, 5440]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Export Start Frame As time == 0"], "extent": [5440, 5477], "body": [{"type": "para", "indent": 8, "text": ["Off by default. If the start frame of your frame range is not 1, but rather something like 1001, turn this on to use your start frame as time == 0."], "extent": [5477, 5632]}], "container": true, "role": "item"}], "container": true, "role": "item_group"}]}], "text": "Parameters"}], "title": ["Labs Niagara ROP"], "summary": [" Export point caches to be used with Unreal\u2019s Niagara particle system. "]}