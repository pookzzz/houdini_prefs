{"type": "root", "attrs": {"type": "include"}, "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 0, "text": ["Extra Image Planes"], "extent": [16, 36], "body": [{"type": "para", "indent": 4, "text": ["Any number of extra image planes may be generated simultaneously. If the primary output image format supports multiple image planes, the plane name will be used to define the name of the deep raster plane. If the primary output device does not support multiple image planes, each image plane will be output to an individual file, with the name of the plane defining the file name. The formats that support multiple image planes are OpenEXR and Houdini .pic (including the ", {"type": "q", "text": ["ip"]}, " device)."], "extent": [36, 531]}], "container": true}, {"type": "dt", "indent": 0, "text": ["Image Plane"], "extent": [531, 544], "body": [{"type": "para", "indent": 8, "text": ["The name of the plane."], "extent": [544, 576]}], "container": true}, {"type": "dt", "indent": 0, "text": ["VEX Variable"], "extent": [576, 590], "body": [{"type": "para", "indent": 8, "text": ["The VEX variable to be output to the image plane. The variable must be either a global variable, or an exported parameter. "], "extent": [590, 723]}, {"type": "para", "indent": 8, "text": ["When the N variable is output, its value may not be normalized resulting in either very small or very large values."], "extent": [723, 848]}], "container": true}, {"type": "dt", "indent": 0, "text": ["VEX Type"], "extent": [848, 858], "body": [{"type": "para", "indent": 8, "text": ["The correct type of the variable must also be specified."], "extent": [858, 924]}], "container": true}, {"type": "dt", "indent": 0, "text": ["Channel Name"], "extent": [924, 938], "body": [{"type": "para", "indent": 8, "text": ["Name of the channel to write the variable data to in the output file (if the file format supports multiple named channels). Leave this field blank to use the ", {"type": "ui", "text": ["VEX variable"]}, " name as the channel name."], "extent": [938, 1148]}], "container": true}, {"type": "dt", "indent": 0, "text": ["Different File"], "extent": [1148, 1164], "body": [{"type": "para", "indent": 8, "text": ["Turn on the checkbox next to this field to write the variable data to an output file other than the rendered image."], "extent": [1164, 1289]}, {"type": "note_group", "body": [{"type": "note", "indent": 8, "role": "item", "extent": [1289, 1303], "body": [{"type": "para", "indent": 12, "text": ["You can specify the same ", {"type": "q", "text": ["Different file"]}, " for multiple extra image planes with different channel names (if the file format supports multiple named channels)."], "extent": [1303, 1474]}], "container": true}], "container": true, "role": "item_group"}], "container": true}, {"type": "dt", "indent": 0, "text": ["Quantize"], "extent": [1474, 1485], "body": [{"type": "para", "indent": 8, "text": ["The storage type for the output. "], "extent": [1485, 1528]}], "container": true}, {"type": "dt", "indent": 0, "text": ["Sample Filter"], "extent": [1528, 1543], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 8, "text": ["Opacity Filtering"], "extent": [1543, 1570], "body": [{"type": "para", "indent": 12, "text": ["Transparent surfaces will be composited using Of."], "extent": [1570, 1641]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Closest Surface"], "extent": [1641, 1666], "body": [{"type": "para", "indent": 12, "text": ["Only the value of the closest surface will be output, regardless of the opacity of the surface."], "extent": [1666, 1779]}], "container": true}], "container": true}], "container": true}, {"type": "dt", "indent": 0, "text": ["Pixel Filter"], "extent": [1779, 1793], "body": [{"type": "para", "indent": 8, "text": ["Specifies the pixel filter used to combine sub-pixel samples to generate the value for the single pixel."], "extent": [1793, 1907]}], "container": true}, {"type": "dt", "indent": 0, "text": ["Gamma"], "extent": [1907, 1914], "body": [{"type": "para", "indent": 8, "text": ["Specifies the gamma correction for the image."], "extent": [1914, 1969]}], "container": true}, {"type": "dt", "indent": 0, "text": ["Gain"], "extent": [1969, 1975], "body": [{"type": "para", "indent": 8, "text": ["Each color value is multiplied by the gain prior to being quantized."], "extent": [1975, 2053]}], "container": true}, {"type": "dt", "indent": 0, "text": ["Dither"], "extent": [2053, 2061], "body": [{"type": "para", "indent": 8, "text": ["The dither amount to be applied. The dither is specified as a fraction of the quantization step (i.e. 0.5 will be one half of a quantization step). The option is ignored for floating point output."], "extent": [2061, 2267]}], "container": true}, {"type": "dt", "indent": 0, "text": ["White Point"], "extent": [2267, 2280], "body": [{"type": "para", "indent": 8, "text": ["The white-point of the image used during quantization."], "extent": [2280, 2344]}], "container": true}, {"type": "dt", "indent": 0, "text": ["Export variable for each component"], "extent": [2344, 2380], "body": [{"type": "para", "indent": 8, "text": ["Enable per-component export planes for variables that support this feature.  When enabled, multiple export planes will be produced - one for each of the ", {"type": "code", "text": ["vm_components"]}, " specified on the ROP.  Per-component exports may be combined with per-light exports to split up lighting components on a per-component and per-light basis."], "extent": [2380, 2714]}], "container": true}, {"type": "dt", "indent": 0, "text": ["Light Exports"], "extent": [2714, 2729], "body": [{"type": "para", "indent": 8, "text": ["Controls whether light exports are produced."], "extent": [2729, 2783]}], "container": true}, {"type": "dt", "indent": 0, "text": ["Export variable for each light"], "extent": [2783, 2815], "body": [{"type": "para", "indent": 8, "text": ["Creates a separate deep raster plane for each light that matches the criteria defined by the ", {"type": "ui", "text": ["Light Mask"]}, " and the ", {"type": "ui", "text": ["Light Selection"]}, "."], "extent": [2815, 2961]}], "container": true}, {"type": "dt", "indent": 0, "text": ["Merge all lights into single channel"], "extent": [2961, 2999], "body": [{"type": "para", "indent": 8, "text": ["Creates a single deep raster plane storing the sum of the export variable for all lights that match the criteria defined by the ", {"type": "ui", "text": ["Light Mask"]}, " and the ", {"type": "ui", "text": ["Light Selection"]}, "."], "extent": [2999, 3180]}], "container": true}, {"type": "dt", "indent": 0, "text": ["Light Mask"], "extent": [3180, 3192], "body": [{"type": "para", "indent": 8, "text": ["A list of light objects by name/bundle."], "extent": [3192, 3241]}], "container": true}, {"type": "dt", "indent": 0, "text": ["Light Selection"], "extent": [3241, 3258], "body": [{"type": "para", "indent": 8, "text": ["A list of light objects by category tags (see the ", {"type": "ui", "text": ["Categories"]}, " parameter on the light)."], "extent": [3258, 3357]}, {"type": "note_group", "body": [{"type": "note", "indent": 8, "role": "item", "extent": [3357, 3371], "body": [{"type": "para", "indent": 16, "text": ["For each light the deep raster plane name is prefixed with a mangled version of the path to the light. This can be specified manually by adding the rendering parameter ", {"type": "ui", "text": ["Export Plane Prefix"]}, " to the light sources. You can set the export prefix to an empty string on the output driver if you are generating deep rasters for a single light source in all cases. This will eliminate the prefix for all light sources."], "extent": [3371, 3800]}], "container": true}], "container": true, "role": "item_group"}], "container": true}], "container": true}]}