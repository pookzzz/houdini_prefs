{"type": "root", "attrs": {"type": "node", "context": "dop", "internal": "sandobject", "icon": "DOP/sandobject", "version": null, "namespace": null}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["Sand Object"], "extent": [71, 87]}, {"type": "summary", "indent": 0, "text": ["Attaches the appropriate data for Sand Objects to an object."], "extent": [87, 156]}, {"type": "para", "indent": 0, "text": ["The Sand Object DOP creates a Sand Object inside a DOP simulation. It\ncreates a new object and attaches the data which is needed for it to be\nused as a Sand Object."], "extent": [156, 323]}, {"level": 1, "id": "parameters", "container": true, "type": "parameters_section", "indent": 0, "role": "section", "extent": [323, 335], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Creation Frame Specifies Simulation Frame"], "extent": [16, 59], "body": [{"type": "para", "indent": 4, "text": ["Determines if the creation frame refers to global Houdini\n    frames (", {"type": "code", "text": ["$F"]}, ") or to simulation specific frames (", {"type": "code", "text": ["$SF"]}, ").  The\n    latter is affected by the offset time and scale time at the\n    DOP network level."], "extent": [59, 278]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Creation Frame"], "extent": [278, 294], "body": [{"type": "para", "indent": 4, "text": ["The frame number on which the object will be created. The\n    object is created only when the current frame number is equal to\n    this parameter value. This means the DOP Network must evaluate a\n    timestep at the specified frame, or the object will not be\n    created. "], "extent": [294, 576]}, {"type": "para", "indent": 4, "text": ["For example, if this value is set to 3.5, the\n    ", {"type": "ui", "text": ["Timestep"]}, " parameter of the DOP Network must be changed to\n    ", {"type": "code", "text": ["1/(2*$FPS)"]}, " to ensure the DOP Network has a timestep at frame\n    3.5."], "extent": [576, 772]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Number of Objects"], "extent": [772, 791], "body": [{"type": "para", "indent": 4, "text": ["Instead of making a single object, you can create a number of\n    identical objects. You can set each object\u2019s parameters\n    individually by using the ", {"type": "code", "text": ["$OBJID"]}, " expression."], "extent": [791, 973]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Object Name"], "extent": [973, 986], "body": [{"type": "para", "indent": 4, "text": ["The name for the created object. This is the name that shows up\n    in the details view, and is used to reference this object externally. "], "extent": [1007, 1155]}, {"type": "note_group", "body": [{"type": "note", "indent": 4, "role": "item", "extent": [1155, 1165], "body": [{"type": "para", "indent": 8, "text": ["It is possible to have many objects with the same name, but this complicates writing references, so it is recommended to use something like ", {"type": "code", "text": ["$OBJID"]}, " in the name."], "extent": [1165, 1336]}], "container": true}], "container": true, "role": "item_group"}], "container": true, "attrs": {"id": "object_name"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Solve On Creation Frame"], "extent": [1336, 1361], "body": [{"type": "para", "indent": 4, "text": ["When turned on, newly created objects are solved by the solver on\n    the timestep in which it was created. "], "extent": [1386, 1500]}, {"type": "para", "indent": 4, "text": ["This parameter is usually turned on if this node is creating objects in the middle of a simulation rather than creating objects for the initial state of the simulation."], "extent": [1500, 1674]}], "container": true, "attrs": {"id": "solvefirstframe"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Allow Caching"], "extent": [1674, 1689], "body": [{"type": "para", "indent": 4, "text": ["By preventing a large object from being cached, you can ensure\n    there is enough room in the cache for the previous frames of its\n    collision geometry."], "extent": [1689, 1850]}, {"type": "para", "indent": 4, "text": ["This option should only be set when you are working with a very large sim.\n    It is much better just to use a larger memory cache if possible."], "extent": [1850, 1998]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Two Dimensional"], "extent": [16, 33], "body": [{"type": "para", "indent": 4, "text": ["One of the divisions of the voxel grid will be forced to one to\n    create a two dimensional field."], "extent": [33, 137]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Plane"], "extent": [137, 144], "body": [{"type": "para", "indent": 4, "text": ["If set to two dimensional, this plane determines which axes remain\n    unaffected."], "extent": [144, 231]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Division Method"], "extent": [231, 248], "body": [{"type": "para", "indent": 4, "text": ["If non square, the specified size is divided into the given number\n    of divisions of voxels.  The sides of these voxels may not be\n    equal, however, possibly leading to distorted simulations."], "extent": [248, 449]}, {"type": "para", "indent": 4, "text": ["When an axis is specified, that axis is considered authoritative\n    for determining the number of divisions.  The chosen axis' size\n    will be divided by the uniform divisions to yield the voxel\n    size.  The divisions for the other axes will then be adjusted to\n    the closest integer multiple that fits in the required size."], "extent": [449, 789]}, {"type": "para", "indent": 4, "text": ["Finally, the size along non-chosen axes will be changed to\n    represent uniform voxel sizes.  If the ", {"type": "ui", "text": ["Max Axis"]}, " option is chosen,\n    the maximum sized axis is used."], "extent": [789, 963]}, {"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["By Size"]}, " is specified, the ", {"type": "ui", "text": ["Division Size"]}, " will be used to\n    compute the number of voxels that fit in the given sized box."], "extent": [963, 1102]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Uniform Divisions"], "extent": [1102, 1121], "body": [{"type": "para", "indent": 4, "text": ["The resolution of the key axis on the voxel grid.  This allows one\n    to control the overall resolution with one parameter and still\n    preserve uniform voxels.  The ", {"type": "ui", "text": ["Uniform Voxels"]}, " option specifies\n    which axis should be used as the reference - it is usually safest\n    to use the maximum axis."], "extent": [1121, 1428]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Divisions"], "extent": [1428, 1439], "body": [{"type": "para", "indent": 4, "text": ["The resolution of the voxel grid that will be used to calculate\n    the smoke object. Higher resolutions allow for finer detail in\n    both the appearance and in the resulting motion. However, doubling the\n    divisions requires eight times the memory. "], "extent": [1439, 1702]}, {"type": "para", "indent": 4, "text": ["Since the substepping should be proportional to the voxel size,\n    doubling the divisions may require double the substepping, resulting in sixteen times the simulation time."], "extent": [1702, 1881]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Division Size"], "extent": [1881, 1896], "body": [{"type": "para", "indent": 4, "text": ["The explicit size of the voxels.  The number of voxels will be\n    computed by fitting an integer number of voxels of this size into\n    the given bounds."], "extent": [1896, 2055]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Size"], "extent": [2055, 2061], "body": [{"type": "para", "indent": 4, "text": ["The size of the voxel grid. The size of each voxel will be this\n    divided by the divisions."], "extent": [2061, 2159]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Center"], "extent": [2159, 2167], "body": [{"type": "para", "indent": 4, "text": ["The position in world space of the center of the voxel grid."], "extent": [2167, 2232]}], "container": true, "role": "item"}], "container": true}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 4, "text": ["Initial Data"], "extent": [409, 432], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 8, "text": ["SOP Path"], "extent": [432, 451], "body": [{"type": "para", "indent": 12, "text": ["This is a path to the SOP that will be used to initialize\n            the surface of the fluid. It should be a volume primitive\n            which stores the signed distance to the fluid, such as that\n            generated by the ", {"scheme": "Node", "value": "/nodes/sop/isooffset", "type": "link", "text": ["Iso Offset SOP"], "fullpath": "/nodes/sop/isooffset.html"}, " with the ", {"type": "ui", "text": ["Output SDF Volume"]}, " option."], "extent": [451, 768]}, {"type": "para", "indent": 12, "text": ["This SOP is assigned to the origsurface scalar field that\n            is then deleted after the creation frame."], "extent": [768, 893]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Closed Boundaries"], "extent": [893, 920], "body": [{"type": "para", "indent": 12, "text": ["The velocity field can be clamped to prevent any fluid from\n            entering or leaving the box. If closed boundaries is not\n            set, the velocity on the boundary will be allowed to vary,\n            allowing fluid to leave the box."], "extent": [920, 1186]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 12, "text": ["X, Y, Z"], "extent": [1186, 1207], "body": [{"type": "para", "indent": 16, "text": ["When closed boundaries is set, these select which\n                sides will be closed."], "extent": [1207, 1312]}], "container": true}], "container": true}], "container": true, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 4, "text": ["Guides"], "extent": [1312, 1329], "body": [{"type": "para", "indent": 8, "text": ["Each of the fields that define the fluid simulation can be\n        visualized in a number of ways.  The help for the Scalar Field\n        Visualization or Vector Field Visualization provides more\n        details about how these work."], "extent": [1329, 1573]}]}], "text": "Parameters"}, {"level": 1, "id": "outputs", "container": true, "type": "outputs_section", "indent": 0, "role": "section", "extent": [1573, 1582], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["First"], "extent": [1582, 1593], "body": [{"type": "para", "indent": 8, "text": ["The Sand object created by this node is sent through the\n        single output."], "extent": [1593, 1681]}], "container": true}], "container": true}], "text": "Outputs"}, {"level": 1, "id": "locals", "container": true, "type": "locals_section", "indent": 0, "role": "section", "extent": [1681, 1689], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 0, "text": ["ST"], "extent": [16, 20], "body": [{"type": "para", "indent": 4, "text": ["The simulation time for which the node is being evaluated. "], "extent": [20, 89]}, {"type": "para", "indent": 4, "text": ["Depending on the settings of the ", {"scheme": "Node", "value": "/nodes/obj/dopnet", "type": "link", "text": ["DOP Network"], "fullpath": "/nodes/obj/dopnet.html"}, " \n    ", {"type": "ui", "text": ["Offset Time"]}, " and ", {"type": "ui", "text": ["Scale Time"]}, " parameters, \n    this value may not be equal to the current Houdini time\n    represented by the variable T. "], "extent": [89, 310]}, {"type": "para", "indent": 4, "text": ["ST is guaranteed to have a value of zero at the\n    start of a simulation, so when testing for the first timestep of a\n    simulation, it is best to use a test like ", {"type": "code", "text": ["$ST == 0"]}, ", rather than\n    ", {"type": "code", "text": ["$T == 0"]}, " or ", {"type": "code", "text": ["$FF == 1"]}, "."], "extent": [310, 533]}], "container": true}, {"type": "dt", "indent": 0, "text": ["SF"], "extent": [533, 537], "body": [{"type": "para", "indent": 4, "text": ["The simulation frame (or more accurately, the \n    simulation time step number) for which the node is being evaluated."], "extent": [537, 665]}, {"type": "para", "indent": 4, "text": ["Depending on the settings of the ", {"scheme": "Node", "value": "/nodes/obj/dopnet", "type": "link", "text": ["DOP Network"], "fullpath": "/nodes/obj/dopnet.html"}, " parameters, \n    this value may not be equal to the current Houdini frame number\n    represented by the variable F. Instead, it is equal to\n    the simulation time (ST) divided by the simulation timestep size \n    (TIMESTEP)."], "extent": [665, 959]}], "container": true}, {"type": "dt", "indent": 0, "text": ["TIMESTEP"], "extent": [959, 969], "body": [{"type": "para", "indent": 4, "text": ["The size of a simulation timestep. This value is\n    useful for scaling values that are expressed in units per second, but\n    are applied on each timestep."], "extent": [969, 1131]}], "container": true}, {"type": "dt", "indent": 0, "text": ["SFPS"], "extent": [1131, 1137], "body": [{"type": "para", "indent": 4, "text": ["The inverse of the TIMESTEP value. It is the number\n    of timesteps per second of simulation time."], "extent": [1137, 1242]}], "container": true}, {"type": "dt", "indent": 0, "text": ["SNOBJ"], "extent": [1242, 1249], "body": [{"type": "para", "indent": 4, "text": ["The number of objects in the simulation. For nodes that\n    create objects such as the ", {"scheme": "Node", "value": "/nodes/dop/emptyobject", "type": "link", "text": ["Empty Object DOP"], "fullpath": "/nodes/dop/emptyobject.html"}, ",\n    SNOBJ increases for each object that is evaluated. "], "extent": [1249, 1442]}, {"type": "para", "indent": 4, "text": ["A good way to guarantee unique object names is to use an expression\n    like ", {"type": "code", "text": ["object_$SNOBJ"]}, "."], "extent": [1442, 1541]}], "container": true}, {"type": "dt", "indent": 0, "text": ["NOBJ"], "extent": [1541, 1547], "body": [{"type": "para", "indent": 4, "text": ["The number of objects that are evaluated by the\n    current node during this timestep. This value is often \n    different from SNOBJ, as many nodes do not process all the objects\n    in a simulation. "], "extent": [1547, 1757]}, {"type": "para", "indent": 4, "text": ["NOBJ may return 0 if the node does not\n    process each object sequentially (such as the ", {"scheme": "Node", "value": "/nodes/dop/group", "type": "link", "text": ["Group\n    DOP"], "fullpath": "/nodes/dop/group.html"}, ")."], "extent": [1757, 1884]}], "container": true}, {"type": "dt", "indent": 0, "text": ["OBJ"], "extent": [1884, 1889], "body": [{"type": "para", "indent": 4, "text": ["The index of the specific object being processed by\n    the node. This value always runs from zero to NOBJ-1 in a given\n    timestep. It does not identify the current object within the\n    simulation like OBJID or OBJNAME; it only identifies the object\u2019s \n    position in the current order of processing. "], "extent": [1889, 2204]}, {"type": "para", "indent": 4, "text": ["This value is useful for generating a\n    random number for each object, or simply splitting the objects into\n    two or more groups to be processed in different ways. This value\n    is -1 if the node does not process objects sequentially (such\n    as the ", {"scheme": "Node", "value": "/nodes/dop/group", "type": "link", "text": ["Group DOP"], "fullpath": "/nodes/dop/group.html"}, ")."], "extent": [2204, 2494]}], "container": true}, {"type": "dt", "indent": 0, "text": ["OBJID"], "extent": [2494, 2501], "body": [{"type": "para", "indent": 4, "text": ["The unique identifier for the object being\n    processed. Every object is assigned an integer value that is unique\n    among all objects in the simulation for all time. Even if an object\n    is deleted, its identifier is never reused. This is very useful in\n    situations where each object needs to be treated differently, for \n    example, to produce a unique random number for each object. "], "extent": [2501, 2900]}, {"type": "para", "indent": 4, "text": ["This value is also the best way to look up information on an object using the dopfield expression function. "], "extent": [2900, 3014]}, {"type": "para", "indent": 4, "text": ["OBJID is -1 if the node does not process objects\n    sequentially (such as the ", {"scheme": "Node", "value": "/nodes/dop/group", "type": "link", "text": ["Group DOP"], "fullpath": "/nodes/dop/group.html"}, ")."], "extent": [3014, 3127]}], "container": true}, {"type": "dt", "indent": 0, "text": ["ALLOBJIDS"], "extent": [3127, 3138], "body": [{"type": "para", "indent": 4, "text": ["This string contains a space-separated list of the unique object\n    identifiers for every object being processed by the current node."], "extent": [3138, 3278]}], "container": true}, {"type": "dt", "indent": 0, "text": ["ALLOBJNAMES"], "extent": [3278, 3291], "body": [{"type": "para", "indent": 4, "text": ["This string contains a space-separated list of the names of every\n    object being processed by the current node."], "extent": [3291, 3410]}], "container": true}, {"type": "dt", "indent": 0, "text": ["OBJCT"], "extent": [3410, 3417], "body": [{"type": "para", "indent": 4, "text": ["The simulation time (see variable ST) at which the\n    current object was created. "], "extent": [3417, 3510]}, {"type": "para", "indent": 4, "text": ["To check if an object was created\n    on the current timestep, the expression ", {"type": "code", "text": ["$ST == $OBJCT"]}, " should\n    always be used. "], "extent": [3510, 3637]}, {"type": "para", "indent": 4, "text": ["This value is zero if the node does not process\n    objects sequentially (such as the ", {"scheme": "Node", "value": "/nodes/dop/group", "type": "link", "text": ["Group DOP"], "fullpath": "/nodes/dop/group.html"}, ")."], "extent": [3637, 3757]}], "container": true}, {"type": "dt", "indent": 0, "text": ["OBJCF"], "extent": [3757, 3764], "body": [{"type": "para", "indent": 4, "text": ["The simulation frame (see variable SF) at which the \n    current object was created. It is equivalent to using the \n    dopsttoframe expression on the OBJCT variable. "], "extent": [3764, 3937]}, {"type": "para", "indent": 4, "text": ["This value is zero if the node does not process objects \n    sequentially (such as the ", {"scheme": "Node", "value": "/nodes/dop/group", "type": "link", "text": ["Group DOP"], "fullpath": "/nodes/dop/group.html"}, ")."], "extent": [3937, 4058]}], "container": true}, {"type": "dt", "indent": 0, "text": ["OBJNAME"], "extent": [4058, 4067], "body": [{"type": "para", "indent": 4, "text": ["A string value containing the name of the object being\n    processed. "], "extent": [4067, 4147]}, {"type": "para", "indent": 4, "text": ["Object names are not guaranteed to be unique within a\n    simulation. However, if you name your objects carefully so that they\n    are unique, the object name can be a much easier way to identify an\n    object than the unique object identifier, OBJID. "], "extent": [4147, 4409]}, {"type": "para", "indent": 4, "text": ["The object name can\n    also be used to treat a number of similar objects (with the same\n    name) as a virtual group. If there are 20 objects named ", {"type": "q", "text": ["myobject"]}, ",\n    specifying ", {"type": "code", "text": ["strcmp($OBJNAME, \"myobject\") == 0"]}, " in the activation field\n    of a DOP will cause that DOP to operate on only those 20 objects. "], "extent": [4409, 4721]}, {"type": "para", "indent": 4, "text": ["This value is the empty string if the node does not process objects\n    sequentially (such as the ", {"scheme": "Node", "value": "/nodes/dop/group", "type": "link", "text": ["Group DOP"], "fullpath": "/nodes/dop/group.html"}, ")."], "extent": [4721, 4853]}], "container": true}, {"type": "dt", "indent": 0, "text": ["DOPNET"], "extent": [4853, 4861], "body": [{"type": "para", "indent": 4, "text": ["A string value containing the full path of the current DOP\n    network. This value is most useful in DOP subnet digital assets\n    where you want to know the path to the DOP network that contains the\n    node."], "extent": [4861, 5076]}], "container": true}], "container": true}, {"type": "note_group", "body": [{"type": "note", "indent": 0, "role": "item", "extent": [5076, 5082], "body": [{"type": "para", "indent": 4, "text": ["Most dynamics nodes have local variables with the same names as the\n    node\u2019s parameters. For example, in a ", {"scheme": "Node", "value": "/nodes/dop/position", "type": "link", "text": ["Position DOP"], "fullpath": "/nodes/dop/position.html"}, ",\n    you could write the expression:"], "extent": [5082, 5270]}, {"lang": null, "type": "pre", "indent": 4, "text": ["\n    $tx + 0.1\n    "], "extent": [5270, 5300]}, {"type": "para", "indent": 4, "text": ["\u2026to make the object move 0.1 units along the X axis at each timestep."], "extent": [5300, 5380]}], "container": true}], "container": true, "role": "item_group"}], "text": "Locals"}, {"level": 1, "id": "related", "container": true, "type": "related_section", "indent": 0, "role": "section", "extent": [1721, 1730], "body": [{"type": "bullet_group", "body": [{"blevel": 6, "type": "bullet", "indent": 4, "text": [{"scheme": "Node", "value": "/nodes/dop/sandconfigureobject", "type": "link", "text": "", "fullpath": "/nodes/dop/sandconfigureobject.html"}], "extent": [1730, 1767]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": [{"scheme": "Node", "value": "/nodes/dop/sandsolver", "type": "link", "text": "", "fullpath": "/nodes/dop/sandsolver.html"}], "extent": [1767, 1795]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": [{"scheme": "Node", "value": "/nodes/dop/scalarfieldvisualization", "type": "link", "text": "", "fullpath": "/nodes/dop/scalarfieldvisualization.html"}], "extent": [1795, 1837]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": [{"scheme": "Node", "value": "/nodes/dop/vectorfieldvisualization", "type": "link", "text": "", "fullpath": "/nodes/dop/vectorfieldvisualization.html"}], "extent": [1837, 1881]}], "container": true}], "text": "Related"}], "title": ["Sand Object"], "summary": ["Attaches the appropriate data for Sand Objects to an object."], "included": ["/nodes/dop/standard_gas_divisions", "/nodes/dop/standard_locals", "/nodes/dop/standard_objcreation"]}