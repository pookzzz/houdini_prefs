{"type": "root", "attrs": {"type": "node", "context": "dop", "internal": "gasresizefluid", "icon": "DOP/gas", "version": null, "namespace": null}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["Gas Resize Fluid"], "extent": [68, 89]}, {"type": "summary", "indent": 0, "text": ["A microsolver that resizes a fluid to match another object."], "extent": [89, 157]}, {"type": "para", "indent": 0, "text": ["The Gas Resize Fluid DOP is a microsolver used in building larger fluid\nsimulations. The ", {"scheme": "Node", "value": "/nodes/dop/fluidsolver", "type": "link", "text": ["Fluid Solver"], "fullpath": "/nodes/dop/fluidsolver.html"}, " and ", {"scheme": "Node", "value": "/nodes/dop/smokesolver", "type": "link", "text": ["Smoke Solver"], "fullpath": "/nodes/dop/smokesolver.html"}, " DOPs that allow\nmicrosolvers to be added before or after the main solver step to extend\nor tweak the simulation. Alternatively, enterprising people may attempt\nto build an entire new solver out of microsolvers."], "extent": [157, 534]}, {"type": "para", "indent": 0, "text": ["The Gas Resize Fluid DOP will resize the fields required for different\ntypes of fluid simulations according to a reference size.  This\nresizing is done with the Gas Resize Field DOP so does not affect the\nactual voxel sampling, just the total number of voxels.  This can be\nused have the fluid box track a moving object."], "extent": [534, 856]}, {"level": 1, "id": "parameters", "container": true, "type": "parameters_section", "indent": 0, "role": "section", "extent": [856, 868], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Fluid Type"], "extent": [868, 880], "body": [{"type": "para", "indent": 4, "text": ["The type of fluid controls what sort of fields need to be resized."], "extent": [880, 952]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["DSD Fire"], "extent": [952, 966], "body": [{"type": "para", "indent": 8, "text": ["The following fields are resized in ", {"type": "ui", "text": ["DSD Fire"]}, " mode: ", {"type": "code", "text": ["heat"]}, ", ", {"type": "code", "text": ["burn"]}, ", ", {"type": "code", "text": ["collision"]}, ", ", {"type": "code", "text": ["collisionvel"]}, ", ", {"type": "code", "text": ["confinement"]}, ", ", {"type": "code", "text": ["d"]}, ", ", {"type": "code", "text": ["ddot"]}, ", ", {"type": "code", "text": ["density"]}, ", ", {"type": "code", "text": ["divergence"]}, ", ", {"type": "code", "text": ["dt"]}, ", ", {"type": "code", "text": ["flamefront"]}, ", ", {"type": "code", "text": ["fuel"]}, ", ", {"type": "code", "text": ["fuelvolume"]}, ", ", {"type": "code", "text": ["kappa"]}, ", ", {"type": "code", "text": ["kappastar"]}, ", ", {"type": "code", "text": ["pressure"]}, ", ", {"type": "code", "text": ["pump"]}, ", ", {"type": "code", "text": ["pumpindex"]}, ", ", {"type": "code", "text": ["rest"]}, ", ", {"type": "code", "text": ["sink"]}, ", ", {"type": "code", "text": ["source"]}, ", ", {"type": "code", "text": ["sourceindex"]}, ", ", {"type": "code", "text": ["temperature"]}, ", and ", {"type": "code", "text": ["vel"]}, "."], "extent": [966, 1292]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Smoke and Pyro"], "extent": [1292, 1312], "body": [{"type": "para", "indent": 8, "text": ["The following fields are resized in ", {"type": "ui", "text": ["Smoke and Pyro"]}, " mode: ", {"type": "code", "text": ["collision"]}, ", ", {"type": "code", "text": ["collisionvel"]}, ", ", {"type": "code", "text": ["density"]}, ", ", {"type": "code", "text": ["divergence"]}, ", ", {"type": "code", "text": ["pressure"]}, ", ", {"type": "code", "text": ["pump"]}, ", ", {"type": "code", "text": ["pumpindex"]}, ", ", {"type": "code", "text": ["rest"]}, ", ", {"type": "code", "text": ["rest2"]}, ", ", {"type": "code", "text": ["sink"]}, ", ", {"type": "code", "text": ["source"]}, ", ", {"type": "code", "text": ["sourceindex"]}, ", ", {"type": "code", "text": ["temperature"]}, ", ", {"type": "code", "text": ["vel"]}, ", ", {"type": "code", "text": ["burn"]}, ", ", {"type": "code", "text": ["fuel"]}, ", and ", {"type": "code", "text": ["heat"]}, "."], "extent": [1312, 1569]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Fluid"], "extent": [1569, 1580], "body": [{"type": "para", "indent": 8, "text": ["The following fields are resized in ", {"type": "ui", "text": ["Fluid"]}, " mode: ", {"type": "code", "text": ["collision"]}, ", ", {"type": "code", "text": ["collisionvel"]}, ", ", {"type": "code", "text": ["surface"]}, ", ", {"type": "code", "text": ["pressure"]}, ", ", {"type": "code", "text": ["pump"]}, ", ", {"type": "code", "text": ["pumpindex"]}, ", ", {"type": "code", "text": ["rest"]}, ", ", {"type": "code", "text": ["sink"]}, ", ", {"type": "code", "text": ["source"]}, ", ", {"type": "code", "text": ["sourceindex"]}, ", ", {"type": "code", "text": ["temperature"]}, ", and ", {"type": "code", "text": ["vel"]}, "."], "extent": [1580, 1781]}], "container": true}], "container": true}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Extra Fields"], "extent": [1781, 1795], "body": [{"type": "para", "indent": 4, "text": ["Any additional fields, such as those you have added with a ", {"scheme": "Node", "value": "/nodes/dop/scalarfield", "type": "link", "text": ["Scalar Field DOP"], "fullpath": "/nodes/dop/scalarfield.html"}, ", can be listed here to ensure they are also resized."], "extent": [1795, 1956]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Reference Object"], "extent": [1956, 1974], "body": [{"type": "para", "indent": 4, "text": ["An object node.  The geometry of the object will be imported in and a bounding box calculated and used as the fluid bounds."], "extent": [1974, 2107]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Dynamic Object"], "extent": [2107, 2123], "body": [{"type": "para", "indent": 4, "text": ["A DOP object in the same simulation as this object.  Its geometry will be used to compute a bounding box. This is used if ", {"type": "ui", "text": ["Reference Object"]}, " is specified."], "extent": [2123, 2284]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["My Data"], "extent": [2284, 2293], "body": [{"type": "para", "indent": 4, "text": ["Geometry data attached to this object can be used as the source for the bounding box size. This is used if ", {"type": "ui", "text": ["Dynamic Object"]}, " or ", {"type": "ui", "text": ["Reference Object"]}, " specified."], "extent": [2293, 2463]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Size, Center"], "extent": [2463, 2477], "body": [{"type": "para", "indent": 4, "text": ["An explicit bounding box to resize to.  This can be animated to have a changing bounding box over time.  Not used if any of the other methods are specified."], "extent": [2477, 2643]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Lower/Upper Bound"], "extent": [2643, 2662], "body": [{"type": "para", "indent": 4, "text": ["The bounding box is expanded by this amount.  The amount is positive for expansion, so a 1 in lower bound will increase the size of the bounding box in the negative direction by one."], "extent": [2662, 2850]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Voxels"], "extent": [2850, 2858], "body": [{"type": "para", "indent": 4, "text": ["The number of voxels to grow the bounding box by.  This is dependent on the resolution of the underlying fields."], "extent": [2858, 2976]}], "container": true, "role": "item"}], "container": true, "role": "item_group"}], "text": "Parameters"}, {"level": 1, "id": "inputs", "container": true, "type": "inputs_section", "indent": 0, "role": "section", "extent": [2976, 2984], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 0, "text": ["All Inputs"], "extent": [15, 27], "body": [{"type": "para", "indent": 4, "text": ["Any microsolvers wired into these inputs will be executed prior to this node executing.  The chain of nodes will thus be processed in a top-down manner."], "extent": [27, 184]}], "container": true}], "container": true}], "text": "Inputs"}, {"level": 1, "id": "outputs", "container": true, "type": "outputs_section", "indent": 0, "role": "section", "extent": [3027, 3036], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 0, "text": ["First Output"], "extent": [15, 29], "body": [{"type": "para", "indent": 4, "text": ["The operation of this output depends on what inputs are connected\n    to this node. If an object stream is input to this node, the output\n    is also an object stream containing the same objects as the input\n    (but with the data from this node attached). "], "extent": [29, 296]}, {"type": "para", "indent": 4, "text": ["If no object stream is\n    connected to this node, the output is a data output. This data\n    output can be connected to an ", {"scheme": "Node", "value": "/nodes/dop/applydata", "type": "link", "text": ["Apply Data DOP"], "fullpath": "/nodes/dop/applydata.html"}, ",\n    or connected directly to a data input of another data node, to\n    attach the data from this node to an object or another piece of\n    data."], "extent": [296, 606]}], "container": true}], "container": true}], "text": "Outputs"}, {"level": 1, "id": "locals", "container": true, "type": "locals_section", "indent": 0, "role": "section", "extent": [3073, 3081], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 0, "text": ["channelname"], "extent": [16, 29], "body": [{"type": "para", "indent": 4, "text": ["This DOP node defines a local variable for each channel and\n    parameter on the Data Options page, with the same name as the\n    channel. So for example, the node may have channels for Position\n    (positionx, positiony, positionz) and a parameter for an object name\n    (objectname). "], "extent": [29, 325]}, {"type": "para", "indent": 4, "text": ["Then there will also be local variables with the names\n    positionx, positiony, positionz, and objectname. These variables\n    will evaluate to the previous value for that parameter. "], "extent": [325, 519]}, {"type": "para", "indent": 4, "text": ["This previous value is always stored as part of the data attached to the\n    object being processed. This is essentially a shortcut for a\n    dopfield expression like:"], "extent": [519, 692]}, {"lang": null, "type": "pre", "indent": 4, "text": ["\n    dopfield($DOPNET, $OBJID, dataName, \"Options\", 0, channelname)\n    "], "extent": [692, 775]}, {"type": "para", "indent": 4, "text": ["If the data does not already exist, then a value of zero or an\n    empty string will be returned."], "extent": [775, 883]}], "container": true}, {"type": "dt", "indent": 0, "text": ["DATACT"], "extent": [883, 891], "body": [{"type": "para", "indent": 4, "text": ["This value is the simulation time (see variable ST) at which the\n    current data was created. This value may not be the same as the\n    current simulation time if this node is modifying existing data,\n    rather than creating new data."], "extent": [891, 1132]}], "container": true}, {"type": "dt", "indent": 0, "text": ["DATACF"], "extent": [1132, 1140], "body": [{"type": "para", "indent": 4, "text": ["This value is the simulation frame (see variable SF) at which the\n    current data was created. This value may not be the same as the\n    current simulation frame if this node is modifying existing data,\n    rather than creating new data."], "extent": [1140, 1383]}], "container": true}, {"type": "dt", "indent": 0, "text": ["RELNAME"], "extent": [1383, 1392], "body": [{"type": "para", "indent": 4, "text": ["This value will be set only when data is being attached to a relationship\n    (such as when Constraint Anchor DOP is connected to the second, third, of\n    fourth inputs of a Constraint DOP). "], "extent": [1392, 1594]}, {"type": "para", "indent": 4, "text": ["In this case, this value is set to the\n    name of the relationship to which the data is being attached."], "extent": [1594, 1703]}], "container": true}, {"type": "dt", "indent": 0, "text": ["RELOBJIDS"], "extent": [1703, 1714], "body": [{"type": "para", "indent": 4, "text": ["This value will be set only when data is being attached to a relationship\n    (such as when Constraint Anchor DOP is connected to the second, third, of\n    fourth inputs of a Constraint DOP). "], "extent": [1714, 1916]}, {"type": "para", "indent": 4, "text": ["In this case, this value is set to a\n    string that is a space separated list of the object identifiers for all\n    the Affected Objects of the relationship to which the data is being\n    attached."], "extent": [1916, 2119]}], "container": true}, {"type": "dt", "indent": 0, "text": ["RELOBJNAMES"], "extent": [2119, 2132], "body": [{"type": "para", "indent": 4, "text": ["This value will be set only when data is being attached to a relationship\n    (such as when Constraint Anchor DOP is connected to the second, third, of\n    fourth inputs of a Constraint DOP). "], "extent": [2132, 2334]}, {"type": "para", "indent": 4, "text": ["In this case, this value is set to a\n    string that is a space separated list of the names of all the Affected\n    Objects of the relationship to which the data is being attached."], "extent": [2334, 2519]}], "container": true}, {"type": "dt", "indent": 0, "text": ["RELAFFOBJIDS"], "extent": [2519, 2533], "body": [{"type": "para", "indent": 4, "text": ["This value will be set only when data is being attached to a relationship\n    (such as when Constraint Anchor DOP is connected to the second, third, of\n    fourth inputs of a Constraint DOP). "], "extent": [2533, 2735]}, {"type": "para", "indent": 4, "text": ["In this case, this value is set to a\n    string that is a space separated list of the object identifiers for all\n    the Affector Objects of the relationship to which the data is being\n    attached."], "extent": [2735, 2938]}], "container": true}, {"type": "dt", "indent": 0, "text": ["RELAFFOBJNAMES"], "extent": [2938, 2954], "body": [{"type": "para", "indent": 4, "text": ["This value will be set only when data is being attached to a relationship\n    (such as when Constraint Anchor DOP is connected to the second, third, of\n    fourth inputs of a Constraint DOP). "], "extent": [2954, 3156]}, {"type": "para", "indent": 4, "text": ["In this case, this value is set to a\n    string that is a space separated list of the names of all the Affector\n    Objects of the relationship to which the data is being attached."], "extent": [3156, 3341]}], "container": true}, {"type": "dt", "indent": 0, "text": ["ST"], "extent": [16, 20], "body": [{"type": "para", "indent": 4, "text": ["The simulation time for which the node is being evaluated. "], "extent": [20, 89]}, {"type": "para", "indent": 4, "text": ["Depending on the settings of the ", {"scheme": "Node", "value": "/nodes/obj/dopnet", "type": "link", "text": ["DOP Network"], "fullpath": "/nodes/obj/dopnet.html"}, " \n    ", {"type": "ui", "text": ["Offset Time"]}, " and ", {"type": "ui", "text": ["Scale Time"]}, " parameters, \n    this value may not be equal to the current Houdini time\n    represented by the variable T. "], "extent": [89, 310]}, {"type": "para", "indent": 4, "text": ["ST is guaranteed to have a value of zero at the\n    start of a simulation, so when testing for the first timestep of a\n    simulation, it is best to use a test like ", {"type": "code", "text": ["$ST == 0"]}, ", rather than\n    ", {"type": "code", "text": ["$T == 0"]}, " or ", {"type": "code", "text": ["$FF == 1"]}, "."], "extent": [310, 533]}], "container": true}, {"type": "dt", "indent": 0, "text": ["SF"], "extent": [533, 537], "body": [{"type": "para", "indent": 4, "text": ["The simulation frame (or more accurately, the \n    simulation time step number) for which the node is being evaluated."], "extent": [537, 665]}, {"type": "para", "indent": 4, "text": ["Depending on the settings of the ", {"scheme": "Node", "value": "/nodes/obj/dopnet", "type": "link", "text": ["DOP Network"], "fullpath": "/nodes/obj/dopnet.html"}, " parameters, \n    this value may not be equal to the current Houdini frame number\n    represented by the variable F. Instead, it is equal to\n    the simulation time (ST) divided by the simulation timestep size \n    (TIMESTEP)."], "extent": [665, 959]}], "container": true}, {"type": "dt", "indent": 0, "text": ["TIMESTEP"], "extent": [959, 969], "body": [{"type": "para", "indent": 4, "text": ["The size of a simulation timestep. This value is\n    useful for scaling values that are expressed in units per second, but\n    are applied on each timestep."], "extent": [969, 1131]}], "container": true}, {"type": "dt", "indent": 0, "text": ["SFPS"], "extent": [1131, 1137], "body": [{"type": "para", "indent": 4, "text": ["The inverse of the TIMESTEP value. It is the number\n    of timesteps per second of simulation time."], "extent": [1137, 1242]}], "container": true}, {"type": "dt", "indent": 0, "text": ["SNOBJ"], "extent": [1242, 1249], "body": [{"type": "para", "indent": 4, "text": ["The number of objects in the simulation. For nodes that\n    create objects such as the ", {"scheme": "Node", "value": "/nodes/dop/emptyobject", "type": "link", "text": ["Empty Object DOP"], "fullpath": "/nodes/dop/emptyobject.html"}, ",\n    SNOBJ increases for each object that is evaluated. "], "extent": [1249, 1442]}, {"type": "para", "indent": 4, "text": ["A good way to guarantee unique object names is to use an expression\n    like ", {"type": "code", "text": ["object_$SNOBJ"]}, "."], "extent": [1442, 1541]}], "container": true}, {"type": "dt", "indent": 0, "text": ["NOBJ"], "extent": [1541, 1547], "body": [{"type": "para", "indent": 4, "text": ["The number of objects that are evaluated by the\n    current node during this timestep. This value is often \n    different from SNOBJ, as many nodes do not process all the objects\n    in a simulation. "], "extent": [1547, 1757]}, {"type": "para", "indent": 4, "text": ["NOBJ may return 0 if the node does not\n    process each object sequentially (such as the ", {"scheme": "Node", "value": "/nodes/dop/group", "type": "link", "text": ["Group\n    DOP"], "fullpath": "/nodes/dop/group.html"}, ")."], "extent": [1757, 1884]}], "container": true}, {"type": "dt", "indent": 0, "text": ["OBJ"], "extent": [1884, 1889], "body": [{"type": "para", "indent": 4, "text": ["The index of the specific object being processed by\n    the node. This value always runs from zero to NOBJ-1 in a given\n    timestep. It does not identify the current object within the\n    simulation like OBJID or OBJNAME; it only identifies the object\u2019s \n    position in the current order of processing. "], "extent": [1889, 2204]}, {"type": "para", "indent": 4, "text": ["This value is useful for generating a\n    random number for each object, or simply splitting the objects into\n    two or more groups to be processed in different ways. This value\n    is -1 if the node does not process objects sequentially (such\n    as the ", {"scheme": "Node", "value": "/nodes/dop/group", "type": "link", "text": ["Group DOP"], "fullpath": "/nodes/dop/group.html"}, ")."], "extent": [2204, 2494]}], "container": true}, {"type": "dt", "indent": 0, "text": ["OBJID"], "extent": [2494, 2501], "body": [{"type": "para", "indent": 4, "text": ["The unique identifier for the object being\n    processed. Every object is assigned an integer value that is unique\n    among all objects in the simulation for all time. Even if an object\n    is deleted, its identifier is never reused. This is very useful in\n    situations where each object needs to be treated differently, for \n    example, to produce a unique random number for each object. "], "extent": [2501, 2900]}, {"type": "para", "indent": 4, "text": ["This value is also the best way to look up information on an object using the dopfield expression function. "], "extent": [2900, 3014]}, {"type": "para", "indent": 4, "text": ["OBJID is -1 if the node does not process objects\n    sequentially (such as the ", {"scheme": "Node", "value": "/nodes/dop/group", "type": "link", "text": ["Group DOP"], "fullpath": "/nodes/dop/group.html"}, ")."], "extent": [3014, 3127]}], "container": true}, {"type": "dt", "indent": 0, "text": ["ALLOBJIDS"], "extent": [3127, 3138], "body": [{"type": "para", "indent": 4, "text": ["This string contains a space-separated list of the unique object\n    identifiers for every object being processed by the current node."], "extent": [3138, 3278]}], "container": true}, {"type": "dt", "indent": 0, "text": ["ALLOBJNAMES"], "extent": [3278, 3291], "body": [{"type": "para", "indent": 4, "text": ["This string contains a space-separated list of the names of every\n    object being processed by the current node."], "extent": [3291, 3410]}], "container": true}, {"type": "dt", "indent": 0, "text": ["OBJCT"], "extent": [3410, 3417], "body": [{"type": "para", "indent": 4, "text": ["The simulation time (see variable ST) at which the\n    current object was created. "], "extent": [3417, 3510]}, {"type": "para", "indent": 4, "text": ["To check if an object was created\n    on the current timestep, the expression ", {"type": "code", "text": ["$ST == $OBJCT"]}, " should\n    always be used. "], "extent": [3510, 3637]}, {"type": "para", "indent": 4, "text": ["This value is zero if the node does not process\n    objects sequentially (such as the ", {"scheme": "Node", "value": "/nodes/dop/group", "type": "link", "text": ["Group DOP"], "fullpath": "/nodes/dop/group.html"}, ")."], "extent": [3637, 3757]}], "container": true}, {"type": "dt", "indent": 0, "text": ["OBJCF"], "extent": [3757, 3764], "body": [{"type": "para", "indent": 4, "text": ["The simulation frame (see variable SF) at which the \n    current object was created. It is equivalent to using the \n    dopsttoframe expression on the OBJCT variable. "], "extent": [3764, 3937]}, {"type": "para", "indent": 4, "text": ["This value is zero if the node does not process objects \n    sequentially (such as the ", {"scheme": "Node", "value": "/nodes/dop/group", "type": "link", "text": ["Group DOP"], "fullpath": "/nodes/dop/group.html"}, ")."], "extent": [3937, 4058]}], "container": true}, {"type": "dt", "indent": 0, "text": ["OBJNAME"], "extent": [4058, 4067], "body": [{"type": "para", "indent": 4, "text": ["A string value containing the name of the object being\n    processed. "], "extent": [4067, 4147]}, {"type": "para", "indent": 4, "text": ["Object names are not guaranteed to be unique within a\n    simulation. However, if you name your objects carefully so that they\n    are unique, the object name can be a much easier way to identify an\n    object than the unique object identifier, OBJID. "], "extent": [4147, 4409]}, {"type": "para", "indent": 4, "text": ["The object name can\n    also be used to treat a number of similar objects (with the same\n    name) as a virtual group. If there are 20 objects named ", {"type": "q", "text": ["myobject"]}, ",\n    specifying ", {"type": "code", "text": ["strcmp($OBJNAME, \"myobject\") == 0"]}, " in the activation field\n    of a DOP will cause that DOP to operate on only those 20 objects. "], "extent": [4409, 4721]}, {"type": "para", "indent": 4, "text": ["This value is the empty string if the node does not process objects\n    sequentially (such as the ", {"scheme": "Node", "value": "/nodes/dop/group", "type": "link", "text": ["Group DOP"], "fullpath": "/nodes/dop/group.html"}, ")."], "extent": [4721, 4853]}], "container": true}, {"type": "dt", "indent": 0, "text": ["DOPNET"], "extent": [4853, 4861], "body": [{"type": "para", "indent": 4, "text": ["A string value containing the full path of the current DOP\n    network. This value is most useful in DOP subnet digital assets\n    where you want to know the path to the DOP network that contains the\n    node."], "extent": [4861, 5076]}], "container": true}], "container": true}, {"type": "note_group", "body": [{"type": "note", "indent": 0, "role": "item", "extent": [5076, 5082], "body": [{"type": "para", "indent": 4, "text": ["Most dynamics nodes have local variables with the same names as the\n    node\u2019s parameters. For example, in a ", {"scheme": "Node", "value": "/nodes/dop/position", "type": "link", "text": ["Position DOP"], "fullpath": "/nodes/dop/position.html"}, ",\n    you could write the expression:"], "extent": [5082, 5270]}, {"lang": null, "type": "pre", "indent": 4, "text": ["\n    $tx + 0.1\n    "], "extent": [5270, 5300]}, {"type": "para", "indent": 4, "text": ["\u2026to make the object move 0.1 units along the X axis at each timestep."], "extent": [5300, 5380]}], "container": true}], "container": true, "role": "item_group"}], "text": "Locals"}, {"level": 1, "id": "related", "container": true, "type": "related_section", "indent": 0, "role": "section", "extent": [3148, 3157], "body": [{"type": "bullet_group", "body": [{"blevel": 6, "type": "bullet", "indent": 4, "text": [{"scheme": "Node", "value": "/nodes/dop/gasresizefield", "type": "link", "text": "", "fullpath": "/nodes/dop/gasresizefield.html"}], "extent": [3157, 3189]}], "container": true}], "text": "Related"}], "title": ["Gas Resize Fluid"], "summary": ["A microsolver that resizes a fluid to match another object."], "included": ["/nodes/dop/standard_data_locals", "/nodes/dop/standard_data_outputs", "/nodes/dop/standard_locals", "/nodes/dop/standard_microsolver_inputs"]}