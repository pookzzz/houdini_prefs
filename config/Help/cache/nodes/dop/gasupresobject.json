{"type": "root", "attrs": {"type": "node", "context": "dop", "internal": "gasupresobject", "icon": "DOP/gas", "since": "10.0", "version": null, "namespace": null}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["Gas Upres Object"], "extent": [81, 102]}, {"type": "summary", "indent": 0, "text": ["Creates an Gas Upres Object from a low resolution fluid sim."], "extent": [102, 171]}, {"type": "para", "indent": 0, "text": ["The Gas Upres Object DOP creates an Gas Upres Object inside the DOP simulation.\nIt creates a new object and attaches the subdata required for it to be a\nproperly conforming Gas Upres Object.  It is usually created with a\ncorresponding low resolution fluid object."], "extent": [171, 436]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Tips"], "extent": [436, 447], "body": [{"type": "bullet_group", "body": [{"blevel": 2, "type": "bullet", "indent": 0, "text": ["The initial parameters of the smoke object need to also be initial parameters on the upres object. "], "extent": [447, 550]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": ["Any microsolvers that adjust temperature/density/fuel/burn need to be wired into both the upres object and the smoke solver"], "extent": [550, 676]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": ["Any sources/sinks need to apply to both the upres and the smoke solver."], "extent": [676, 750]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": ["Pump forces and micro solvers that deal with velocity do not need to be wired into the upres solver."], "extent": [750, 853]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": ["If you have a Position data on the upres object and are sourcing the low\n  res simulation from disk or SOPs, you need to save out the low res simulation\n  without the position transform.  Turn off the ", {"type": "ui", "text": ["Transform Geometry With\n  Position Data"]}, " on your import node to do this."], "extent": [853, 1134]}], "container": true}]}, {"level": 1, "id": "parameters", "container": true, "type": "parameters_section", "indent": 0, "role": "section", "extent": [1134, 1146], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Creation Frame Specifies Simulation Frame"], "extent": [16, 59], "body": [{"type": "para", "indent": 4, "text": ["Determines if the creation frame refers to global Houdini\n    frames (", {"type": "code", "text": ["$F"]}, ") or to simulation specific frames (", {"type": "code", "text": ["$SF"]}, ").  The\n    latter is affected by the offset time and scale time at the\n    DOP network level."], "extent": [59, 278]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Creation Frame"], "extent": [278, 294], "body": [{"type": "para", "indent": 4, "text": ["The frame number on which the object will be created. The\n    object is created only when the current frame number is equal to\n    this parameter value. This means the DOP Network must evaluate a\n    timestep at the specified frame, or the object will not be\n    created. "], "extent": [294, 576]}, {"type": "para", "indent": 4, "text": ["For example, if this value is set to 3.5, the\n    ", {"type": "ui", "text": ["Timestep"]}, " parameter of the DOP Network must be changed to\n    ", {"type": "code", "text": ["1/(2*$FPS)"]}, " to ensure the DOP Network has a timestep at frame\n    3.5."], "extent": [576, 772]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Number of Objects"], "extent": [772, 791], "body": [{"type": "para", "indent": 4, "text": ["Instead of making a single object, you can create a number of\n    identical objects. You can set each object\u2019s parameters\n    individually by using the ", {"type": "code", "text": ["$OBJID"]}, " expression."], "extent": [791, 973]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Object Name"], "extent": [973, 986], "body": [{"type": "para", "indent": 4, "text": ["The name for the created object. This is the name that shows up\n    in the details view, and is used to reference this object externally. "], "extent": [1007, 1155]}, {"type": "note_group", "body": [{"type": "note", "indent": 4, "role": "item", "extent": [1155, 1165], "body": [{"type": "para", "indent": 8, "text": ["It is possible to have many objects with the same name, but this complicates writing references, so it is recommended to use something like ", {"type": "code", "text": ["$OBJID"]}, " in the name."], "extent": [1165, 1336]}], "container": true}], "container": true, "role": "item_group"}], "container": true, "attrs": {"id": "object_name"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Solve On Creation Frame"], "extent": [1336, 1361], "body": [{"type": "para", "indent": 4, "text": ["When turned on, newly created objects are solved by the solver on\n    the timestep in which it was created. "], "extent": [1386, 1500]}, {"type": "para", "indent": 4, "text": ["This parameter is usually turned on if this node is creating objects in the middle of a simulation rather than creating objects for the initial state of the simulation."], "extent": [1500, 1674]}], "container": true, "attrs": {"id": "solvefirstframe"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Allow Caching"], "extent": [1674, 1689], "body": [{"type": "para", "indent": 4, "text": ["By preventing a large object from being cached, you can ensure\n    there is enough room in the cache for the previous frames of its\n    collision geometry."], "extent": [1689, 1850]}, {"type": "para", "indent": 4, "text": ["This option should only be set when you are working with a very large sim.\n    It is much better just to use a larger memory cache if possible."], "extent": [1850, 1998]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Hide Linked UI"], "extent": [1182, 1202], "body": [{"type": "para", "indent": 8, "text": ["Because this object is usually linked to a base simulation,\n        this button will hide the linked parameters to provide a\n        cleaner interface."], "extent": [1202, 1363]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Two Dimensional"], "extent": [16, 33], "body": [{"type": "para", "indent": 4, "text": ["One of the divisions of the voxel grid will be forced to one to\n    create a two dimensional field."], "extent": [33, 137]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Plane"], "extent": [137, 144], "body": [{"type": "para", "indent": 4, "text": ["If set to two dimensional, this plane determines which axes remain\n    unaffected."], "extent": [144, 231]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Division Method"], "extent": [231, 248], "body": [{"type": "para", "indent": 4, "text": ["If non square, the specified size is divided into the given number\n    of divisions of voxels.  The sides of these voxels may not be\n    equal, however, possibly leading to distorted simulations."], "extent": [248, 449]}, {"type": "para", "indent": 4, "text": ["When an axis is specified, that axis is considered authoritative\n    for determining the number of divisions.  The chosen axis' size\n    will be divided by the uniform divisions to yield the voxel\n    size.  The divisions for the other axes will then be adjusted to\n    the closest integer multiple that fits in the required size."], "extent": [449, 789]}, {"type": "para", "indent": 4, "text": ["Finally, the size along non-chosen axes will be changed to\n    represent uniform voxel sizes.  If the ", {"type": "ui", "text": ["Max Axis"]}, " option is chosen,\n    the maximum sized axis is used."], "extent": [789, 963]}, {"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["By Size"]}, " is specified, the ", {"type": "ui", "text": ["Division Size"]}, " will be used to\n    compute the number of voxels that fit in the given sized box."], "extent": [963, 1102]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Uniform Divisions"], "extent": [1102, 1121], "body": [{"type": "para", "indent": 4, "text": ["The resolution of the key axis on the voxel grid.  This allows one\n    to control the overall resolution with one parameter and still\n    preserve uniform voxels.  The ", {"type": "ui", "text": ["Uniform Voxels"]}, " option specifies\n    which axis should be used as the reference - it is usually safest\n    to use the maximum axis."], "extent": [1121, 1428]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Divisions"], "extent": [1428, 1439], "body": [{"type": "para", "indent": 4, "text": ["The resolution of the voxel grid that will be used to calculate\n    the smoke object. Higher resolutions allow for finer detail in\n    both the appearance and in the resulting motion. However, doubling the\n    divisions requires eight times the memory. "], "extent": [1439, 1702]}, {"type": "para", "indent": 4, "text": ["Since the substepping should be proportional to the voxel size,\n    doubling the divisions may require double the substepping, resulting in sixteen times the simulation time."], "extent": [1702, 1881]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Division Size"], "extent": [1881, 1896], "body": [{"type": "para", "indent": 4, "text": ["The explicit size of the voxels.  The number of voxels will be\n    computed by fitting an integer number of voxels of this size into\n    the given bounds."], "extent": [1896, 2055]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Size"], "extent": [2055, 2061], "body": [{"type": "para", "indent": 4, "text": ["The size of the voxel grid. The size of each voxel will be this\n    divided by the divisions."], "extent": [2061, 2159]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Center"], "extent": [2159, 2167], "body": [{"type": "para", "indent": 4, "text": ["The position in world space of the center of the voxel grid."], "extent": [2167, 2232]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Import Density"], "extent": [1401, 1421], "body": [{"type": "para", "indent": 8, "text": ["If set, and if the fluid type is pyro, it will import the\n        density field as lowresdensity to allow scale by density to\n        work."], "extent": [1421, 1570]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Do Not Import Rest"], "extent": [1570, 1594], "body": [{"type": "para", "indent": 8, "text": ["If the upres solver will be generating its own rest field, it\n        does not need to be imported from the base simulation."], "extent": [1594, 1728]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Accurate Smoke Model"], "extent": [1728, 1754], "body": [{"type": "para", "indent": 8, "text": ["If the upres solver is in pyro mode and accurate smoke model\n        is set, the fuel field needs to be imported from the base sim.\n        Otherwise the burn field is imported."], "extent": [1754, 1941]}], "container": true, "role": "item"}], "container": true}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 4, "text": ["Guides"], "extent": [1941, 1958], "body": [{"type": "para", "indent": 8, "text": ["Each of the fields that define the upres simulation can be\n        visualized in a number of ways.  The help for the ", {"scheme": "Node", "value": "/nodes/dop/scalarfieldvisualization", "type": "link", "text": ["Scalar Field\n        Visualization"], "fullpath": "/nodes/dop/scalarfieldvisualization.html"}, " or ", {"scheme": "Node", "value": "/nodes/dop/vectorfieldvisualization", "type": "link", "text": ["Vector Field Visualization"], "fullpath": "/nodes/dop/vectorfieldvisualization.html"}, " provides more\n        details about how these work."], "extent": [1958, 2274]}, {"type": "para", "indent": 8, "text": ["Of especial note is the Turbulence Field which is useful for\n        understanding where the Gas Upres solver will add more detail\n        to the simulation."], "extent": [2274, 2441]}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 4, "text": ["Initial Data"], "extent": [2441, 2464], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 8, "text": ["Fluid Type"], "extent": [2464, 2485], "body": [{"type": "para", "indent": 12, "text": ["Controls which fields will be imported from the base\n            simulation.  This should match the fluid type of the Gas\n            Upres solver."], "extent": [2485, 2646]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Source"], "extent": [2646, 2662], "body": [{"type": "para", "indent": 12, "text": ["Where the object looks to find the base simulation.  It\n            can be a live DOP Object inside this simulation, a live\n            DOP Object inside another simulation (separate DOP\n            Network), a collection of named volumes in a SOP Path, or\n            read directly from a .bgeo sequence."], "extent": [2662, 2981]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Use 16bit Float"], "extent": [2981, 3006], "body": [{"type": "para", "indent": 12, "text": ["Uses lower precision 16 bit floats to store the fields.\n            This uses half the memory but at the cost of slower\n            performance (<10%)."], "extent": [3006, 3171]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Density, Temperature, Heat SOP Path"], "extent": [3171, 3216], "body": [{"type": "para", "indent": 12, "text": ["These paths specify the initial conditions of the upres\n            object."], "extent": [3216, 3305]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Position Data Path"], "extent": [16, 36], "body": [{"type": "para", "indent": 4, "text": ["The optional relative path for Position data.  This will be used to\n    transform the fluid box, allowing for non-axis aligned fluid sims.  A value\n    of ", {"type": "code", "text": ["../Position"]}, " will allow you to attach a ", {"scheme": "Node", "value": "/nodes/dop/position", "type": "link", "text": ["Position DOP"], "fullpath": "/nodes/dop/position.html"}, " to your fluid object and thus reorient the fluid."], "extent": [36, 319]}], "container": true, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 4, "text": ["Slice"], "extent": [3351, 3367], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Slice"], "extent": [16, 23], "body": [{"type": "para", "indent": 4, "text": ["Which slice to use.  Should be a number between 0 and the number of slices - 1."], "extent": [23, 107]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Slice Divisions"], "extent": [107, 124], "body": [{"type": "para", "indent": 4, "text": ["Number of pieces to cut the volume into along each axis.  The\n    total number of pieces, or slices, created will be the product of\n    these numbers.  i.e., 2, 3, 4 will create 24 slices."], "extent": [124, 317]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Overlap Voxels Negative, Positive"], "extent": [317, 352], "body": [{"type": "para", "indent": 4, "text": ["Adds a padding on the lower/upper side of the slices.  The slices\n    start by dividing space evenly, but then this overlap will cause\n    them to overlap with their neighbors.  The field exchange nodes\n    use this overlap to determine what is communicated."], "extent": [352, 615]}], "container": true, "role": "item"}], "container": true}]}], "text": "Parameters"}, {"level": 1, "id": "outputs", "container": true, "type": "outputs_section", "indent": 0, "role": "section", "extent": [3405, 3414], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["First"], "extent": [3414, 3425], "body": [{"type": "para", "indent": 8, "text": ["The Gas Upres object created by this node is sent through the\n        single output."], "extent": [3425, 3518]}], "container": true}], "container": true}], "text": "Outputs"}, {"level": 1, "id": "locals", "container": true, "type": "locals_section", "indent": 0, "role": "section", "extent": [3518, 3526], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 0, "text": ["ST"], "extent": [16, 20], "body": [{"type": "para", "indent": 4, "text": ["The simulation time for which the node is being evaluated. "], "extent": [20, 89]}, {"type": "para", "indent": 4, "text": ["Depending on the settings of the ", {"scheme": "Node", "value": "/nodes/obj/dopnet", "type": "link", "text": ["DOP Network"], "fullpath": "/nodes/obj/dopnet.html"}, " \n    ", {"type": "ui", "text": ["Offset Time"]}, " and ", {"type": "ui", "text": ["Scale Time"]}, " parameters, \n    this value may not be equal to the current Houdini time\n    represented by the variable T. "], "extent": [89, 310]}, {"type": "para", "indent": 4, "text": ["ST is guaranteed to have a value of zero at the\n    start of a simulation, so when testing for the first timestep of a\n    simulation, it is best to use a test like ", {"type": "code", "text": ["$ST == 0"]}, ", rather than\n    ", {"type": "code", "text": ["$T == 0"]}, " or ", {"type": "code", "text": ["$FF == 1"]}, "."], "extent": [310, 533]}], "container": true}, {"type": "dt", "indent": 0, "text": ["SF"], "extent": [533, 537], "body": [{"type": "para", "indent": 4, "text": ["The simulation frame (or more accurately, the \n    simulation time step number) for which the node is being evaluated."], "extent": [537, 665]}, {"type": "para", "indent": 4, "text": ["Depending on the settings of the ", {"scheme": "Node", "value": "/nodes/obj/dopnet", "type": "link", "text": ["DOP Network"], "fullpath": "/nodes/obj/dopnet.html"}, " parameters, \n    this value may not be equal to the current Houdini frame number\n    represented by the variable F. Instead, it is equal to\n    the simulation time (ST) divided by the simulation timestep size \n    (TIMESTEP)."], "extent": [665, 959]}], "container": true}, {"type": "dt", "indent": 0, "text": ["TIMESTEP"], "extent": [959, 969], "body": [{"type": "para", "indent": 4, "text": ["The size of a simulation timestep. This value is\n    useful for scaling values that are expressed in units per second, but\n    are applied on each timestep."], "extent": [969, 1131]}], "container": true}, {"type": "dt", "indent": 0, "text": ["SFPS"], "extent": [1131, 1137], "body": [{"type": "para", "indent": 4, "text": ["The inverse of the TIMESTEP value. It is the number\n    of timesteps per second of simulation time."], "extent": [1137, 1242]}], "container": true}, {"type": "dt", "indent": 0, "text": ["SNOBJ"], "extent": [1242, 1249], "body": [{"type": "para", "indent": 4, "text": ["The number of objects in the simulation. For nodes that\n    create objects such as the ", {"scheme": "Node", "value": "/nodes/dop/emptyobject", "type": "link", "text": ["Empty Object DOP"], "fullpath": "/nodes/dop/emptyobject.html"}, ",\n    SNOBJ increases for each object that is evaluated. "], "extent": [1249, 1442]}, {"type": "para", "indent": 4, "text": ["A good way to guarantee unique object names is to use an expression\n    like ", {"type": "code", "text": ["object_$SNOBJ"]}, "."], "extent": [1442, 1541]}], "container": true}, {"type": "dt", "indent": 0, "text": ["NOBJ"], "extent": [1541, 1547], "body": [{"type": "para", "indent": 4, "text": ["The number of objects that are evaluated by the\n    current node during this timestep. This value is often \n    different from SNOBJ, as many nodes do not process all the objects\n    in a simulation. "], "extent": [1547, 1757]}, {"type": "para", "indent": 4, "text": ["NOBJ may return 0 if the node does not\n    process each object sequentially (such as the ", {"scheme": "Node", "value": "/nodes/dop/group", "type": "link", "text": ["Group\n    DOP"], "fullpath": "/nodes/dop/group.html"}, ")."], "extent": [1757, 1884]}], "container": true}, {"type": "dt", "indent": 0, "text": ["OBJ"], "extent": [1884, 1889], "body": [{"type": "para", "indent": 4, "text": ["The index of the specific object being processed by\n    the node. This value always runs from zero to NOBJ-1 in a given\n    timestep. It does not identify the current object within the\n    simulation like OBJID or OBJNAME; it only identifies the object\u2019s \n    position in the current order of processing. "], "extent": [1889, 2204]}, {"type": "para", "indent": 4, "text": ["This value is useful for generating a\n    random number for each object, or simply splitting the objects into\n    two or more groups to be processed in different ways. This value\n    is -1 if the node does not process objects sequentially (such\n    as the ", {"scheme": "Node", "value": "/nodes/dop/group", "type": "link", "text": ["Group DOP"], "fullpath": "/nodes/dop/group.html"}, ")."], "extent": [2204, 2494]}], "container": true}, {"type": "dt", "indent": 0, "text": ["OBJID"], "extent": [2494, 2501], "body": [{"type": "para", "indent": 4, "text": ["The unique identifier for the object being\n    processed. Every object is assigned an integer value that is unique\n    among all objects in the simulation for all time. Even if an object\n    is deleted, its identifier is never reused. This is very useful in\n    situations where each object needs to be treated differently, for \n    example, to produce a unique random number for each object. "], "extent": [2501, 2900]}, {"type": "para", "indent": 4, "text": ["This value is also the best way to look up information on an object using the dopfield expression function. "], "extent": [2900, 3014]}, {"type": "para", "indent": 4, "text": ["OBJID is -1 if the node does not process objects\n    sequentially (such as the ", {"scheme": "Node", "value": "/nodes/dop/group", "type": "link", "text": ["Group DOP"], "fullpath": "/nodes/dop/group.html"}, ")."], "extent": [3014, 3127]}], "container": true}, {"type": "dt", "indent": 0, "text": ["ALLOBJIDS"], "extent": [3127, 3138], "body": [{"type": "para", "indent": 4, "text": ["This string contains a space-separated list of the unique object\n    identifiers for every object being processed by the current node."], "extent": [3138, 3278]}], "container": true}, {"type": "dt", "indent": 0, "text": ["ALLOBJNAMES"], "extent": [3278, 3291], "body": [{"type": "para", "indent": 4, "text": ["This string contains a space-separated list of the names of every\n    object being processed by the current node."], "extent": [3291, 3410]}], "container": true}, {"type": "dt", "indent": 0, "text": ["OBJCT"], "extent": [3410, 3417], "body": [{"type": "para", "indent": 4, "text": ["The simulation time (see variable ST) at which the\n    current object was created. "], "extent": [3417, 3510]}, {"type": "para", "indent": 4, "text": ["To check if an object was created\n    on the current timestep, the expression ", {"type": "code", "text": ["$ST == $OBJCT"]}, " should\n    always be used. "], "extent": [3510, 3637]}, {"type": "para", "indent": 4, "text": ["This value is zero if the node does not process\n    objects sequentially (such as the ", {"scheme": "Node", "value": "/nodes/dop/group", "type": "link", "text": ["Group DOP"], "fullpath": "/nodes/dop/group.html"}, ")."], "extent": [3637, 3757]}], "container": true}, {"type": "dt", "indent": 0, "text": ["OBJCF"], "extent": [3757, 3764], "body": [{"type": "para", "indent": 4, "text": ["The simulation frame (see variable SF) at which the \n    current object was created. It is equivalent to using the \n    dopsttoframe expression on the OBJCT variable. "], "extent": [3764, 3937]}, {"type": "para", "indent": 4, "text": ["This value is zero if the node does not process objects \n    sequentially (such as the ", {"scheme": "Node", "value": "/nodes/dop/group", "type": "link", "text": ["Group DOP"], "fullpath": "/nodes/dop/group.html"}, ")."], "extent": [3937, 4058]}], "container": true}, {"type": "dt", "indent": 0, "text": ["OBJNAME"], "extent": [4058, 4067], "body": [{"type": "para", "indent": 4, "text": ["A string value containing the name of the object being\n    processed. "], "extent": [4067, 4147]}, {"type": "para", "indent": 4, "text": ["Object names are not guaranteed to be unique within a\n    simulation. However, if you name your objects carefully so that they\n    are unique, the object name can be a much easier way to identify an\n    object than the unique object identifier, OBJID. "], "extent": [4147, 4409]}, {"type": "para", "indent": 4, "text": ["The object name can\n    also be used to treat a number of similar objects (with the same\n    name) as a virtual group. If there are 20 objects named ", {"type": "q", "text": ["myobject"]}, ",\n    specifying ", {"type": "code", "text": ["strcmp($OBJNAME, \"myobject\") == 0"]}, " in the activation field\n    of a DOP will cause that DOP to operate on only those 20 objects. "], "extent": [4409, 4721]}, {"type": "para", "indent": 4, "text": ["This value is the empty string if the node does not process objects\n    sequentially (such as the ", {"scheme": "Node", "value": "/nodes/dop/group", "type": "link", "text": ["Group DOP"], "fullpath": "/nodes/dop/group.html"}, ")."], "extent": [4721, 4853]}], "container": true}, {"type": "dt", "indent": 0, "text": ["DOPNET"], "extent": [4853, 4861], "body": [{"type": "para", "indent": 4, "text": ["A string value containing the full path of the current DOP\n    network. This value is most useful in DOP subnet digital assets\n    where you want to know the path to the DOP network that contains the\n    node."], "extent": [4861, 5076]}], "container": true}], "container": true}, {"type": "note_group", "body": [{"type": "note", "indent": 0, "role": "item", "extent": [5076, 5082], "body": [{"type": "para", "indent": 4, "text": ["Most dynamics nodes have local variables with the same names as the\n    node\u2019s parameters. For example, in a ", {"scheme": "Node", "value": "/nodes/dop/position", "type": "link", "text": ["Position DOP"], "fullpath": "/nodes/dop/position.html"}, ",\n    you could write the expression:"], "extent": [5082, 5270]}, {"lang": null, "type": "pre", "indent": 4, "text": ["\n    $tx + 0.1\n    "], "extent": [5270, 5300]}, {"type": "para", "indent": 4, "text": ["\u2026to make the object move 0.1 units along the X axis at each timestep."], "extent": [5300, 5380]}], "container": true}], "container": true, "role": "item_group"}], "text": "Locals"}], "title": ["Gas Upres Object"], "summary": ["Creates an Gas Upres Object from a low resolution fluid sim."], "included": ["/nodes/dop/standard_fluidpositionpath", "/nodes/dop/standard_gas_divisions", "/nodes/dop/standard_gas_slice", "/nodes/dop/standard_locals", "/nodes/dop/standard_objcreation"]}