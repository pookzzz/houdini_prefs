{"type": "root", "attrs": {"type": "node", "context": "dop", "internal": "crowdsolver", "icon": "CROWDS/crowdsolver", "tags": "crowds", "version": "3.0", "since": "15.5", "namespace": null}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["Crowd Solver"], "extent": [117, 134]}, {"type": "summary", "indent": 0, "text": ["Updates agents according to their steer forces and animation clips."], "extent": [134, 210]}, {"level": 1, "id": "parameters", "container": true, "type": "parameters_section", "indent": 0, "role": "section", "extent": [210, 222], "body": [{"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Particle Motion"], "extent": [222, 245], "body": [{"level": 3, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Velocity"], "extent": [245, 263], "body": [{"type": "para", "indent": 0, "text": ["Controls how the agent\u2019s velocity can be manipulated by the solver."], "extent": [263, 333]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Max Force"], "extent": [333, 344], "body": [{"type": "para", "indent": 4, "text": ["Specifies the maximum force that can be applied to the agent.\n    This parameter can be overridden by a ", {"type": "code", "text": ["maxforce"]}, " point attribute."], "extent": [344, 481]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Drag"], "extent": [481, 487], "body": [{"type": "para", "indent": 4, "text": ["Specifies the strength of a ", {"scheme": "Node", "value": "/nodes/dop/popdrag", "type": "link", "text": ["drag"], "fullpath": "/nodes/dop/popdrag.html"}, " that is applied to the agent\u2019s velocity."], "extent": [487, 585]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Constrain by Max Turn Rate"], "extent": [585, 613], "body": [{"type": "para", "indent": 4, "text": ["When turned on, the ", {"type": "ui", "text": ["Max Turn Rate"]}, " and ", {"type": "ui", "text": ["Min Speed"]}, " parameters will be used to limit how quickly the agent\u2019s velocity can change direction.\n    This can prevent agents from sliding sideways or backwards when a strong force is applied."], "extent": [613, 857]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Project Forces"], "extent": [857, 873], "body": [{"type": "para", "indent": 4, "text": ["When turned on, forces will be projected onto the plane defined by the agent\u2019s ", {"type": "code", "text": ["up"]}, " vector.\n    This can be used to prevent 3D forces from causing agents to move vertically."], "extent": [873, 1052]}], "container": true, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 3, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Orientation Update"], "extent": [1052, 1079], "body": [{"type": "para", "indent": 0, "text": ["Controls how the agent\u2019s orientation is updated based on its ", {"type": "code", "text": ["v"]}, " and ", {"type": "code", "text": ["up"]}, " vectors."], "extent": [1079, 1164]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Min Speed"], "extent": [1164, 1175], "body": [{"type": "para", "indent": 4, "text": ["Specifies the agent\u2019s minimum speed before its orientation can change. This can prevent agents from spinning around while at a low speed."], "extent": [1175, 1318]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Max Turn Rate"], "extent": [1318, 1333], "body": [{"type": "para", "indent": 4, "text": ["Specifies how quickly the agent can change its orientation (in degrees per second) by rotating about its up axis.\n    This parameter can be overridden by a ", {"type": "code", "text": ["maxturnrate"]}, " point attribute."], "extent": [1354, 1546]}], "container": true, "attrs": {"id": "maxturnrate"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Constrain Turn Acceleration"], "extent": [1546, 1575], "body": [{"type": "para", "indent": 4, "text": ["When turned on, the agent\u2019s turning will follow a damped angular spring, where its acceleration varies based on the angle from the target direction and the current turn rate.\n    This prevents sharp changes to the agent\u2019s orientation or turn rate, while still allowing the agent to adjust quickly to large changes in its target direction.\n    The ", {"type": "ui", "text": ["Max Turn Rate"]}, " and ", {"type": "ui", "text": ["Max Acceleration"]}, " parameters provide upper limits for the angular velocity and acceleration, respectively."], "extent": [1603, 2087]}], "container": true, "attrs": {"id": "constrainturnaccel"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Turn Stiffness"], "extent": [2087, 2103], "body": [{"type": "para", "indent": 4, "text": ["Controls how quickly the agent accelerates based on the angle from its target direction."], "extent": [2126, 2220]}, {"type": "para", "indent": 4, "text": ["This parameter is only available when ", {"type": "ui", "text": ["Constrain Turn Acceleration"]}, " is turned on."], "extent": [2220, 2309]}], "container": true, "attrs": {"id": "turnstiffness"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Turn Damping"], "extent": [2309, 2323], "body": [{"type": "para", "indent": 4, "text": ["Specifies the damping for the angular spring. Larger values will avoid oscillation."], "extent": [2344, 2433]}, {"type": "para", "indent": 4, "text": ["This parameter is only available when ", {"type": "ui", "text": ["Constrain Turn Acceleration"]}, " is turned on."], "extent": [2433, 2522]}], "container": true, "attrs": {"id": "turndamping"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Max Acceleration"], "extent": [2522, 2540], "body": [{"type": "para", "indent": 4, "text": ["Specifies the maximum angular acceleration of the agent when turning."], "extent": [2562, 2637]}], "container": true, "attrs": {"id": "turnaccelmax"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Max Tilt Rate"], "extent": [2637, 2652], "body": [{"type": "para", "indent": 4, "text": ["Specifies how quickly the agent\u2019s up vector can rotate (in degrees per second).\n    This parameter can be overridden by a ", {"type": "code", "text": ["maxtiltrate"]}, " point attribute."], "extent": [2673, 2831]}], "container": true, "attrs": {"id": "maxtiltrate"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Constrain Tilt Acceleration"], "extent": [2831, 2860], "body": [{"type": "para", "indent": 4, "text": ["When turned on, the agent\u2019s tilting will follow a damped angular spring, where its acceleration varies based on the angle from the target up vector and the current tilt rate.\n    This can produce significantly smoother motion when, for example, adjusting the agent\u2019s up vector to follow the terrain normal."], "extent": [2888, 3200]}], "container": true, "attrs": {"id": "constraintiltaccel"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Tilt Stiffness"], "extent": [3200, 3216], "body": [{"type": "para", "indent": 4, "text": ["Controls how quickly the agent accelerates based on the angle from its target up vector."], "extent": [3239, 3333]}, {"type": "para", "indent": 4, "text": ["This parameter is only available when ", {"type": "ui", "text": ["Constrain Tilt Acceleration"]}, " is turned on."], "extent": [3333, 3422]}], "container": true, "attrs": {"id": "tiltstiffness"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Tilt Damping"], "extent": [3422, 3436], "body": [{"type": "para", "indent": 4, "text": ["Specifies the damping for the angular spring. Larger values will avoid oscillation."], "extent": [3457, 3546]}, {"type": "para", "indent": 4, "text": ["This parameter is only available when ", {"type": "ui", "text": ["Constrain Tilt Acceleration"]}, " is turned on."], "extent": [3546, 3635]}], "container": true, "attrs": {"id": "tiltdamping"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Max Acceleration"], "extent": [3635, 3653], "body": [{"type": "para", "indent": 4, "text": ["Specifies the maximum angular acceleration of the agent when tilting."], "extent": [3675, 3750]}], "container": true, "attrs": {"id": "tiltaccelmax"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Adjust Up Vector"], "extent": [3750, 3768], "body": [{"type": "para", "indent": 4, "text": ["Specifies how the solver should adjust the agent\u2019s up vector during the simulation."], "extent": [3768, 3857]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Unchanged"], "extent": [3857, 3872], "body": [{"type": "para", "indent": 8, "text": ["The solver will not modify the agent\u2019s ", {"type": "code", "text": ["up"]}, " point attribute."], "extent": [3872, 3942]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Set Perpendicular to Velocity"], "extent": [3942, 3977], "body": [{"type": "para", "indent": 8, "text": ["Updates the up vector to remain perpendicular to the velocity vector.\n        This may be useful for situations such as birds flying around in space."], "extent": [3977, 4136]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Set to Terrain Normal"], "extent": [4136, 4163], "body": [{"type": "para", "indent": 8, "text": ["Updates the up vector to match the terrain normal. This requires that ", {"type": "ui", "text": ["Enable Terrain Projection"]}, " is turned on.\n        This may be useful for situations such as insects crawling on walls."], "extent": [4163, 4363]}], "container": true}], "container": true}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Reference Direction"], "extent": [4363, 4384], "body": [{"type": "para", "indent": 4, "text": ["The agent\u2019s axis, aligned to follow the velocity vector. For example, setting this to ", {"type": "code", "text": ["1,0,0"]}, " will align the agent\u2019s X-axis with its velocity."], "extent": [4400, 4548]}], "container": true, "attrs": {"id": "refdir"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Reference Up"], "extent": [4548, 4562], "body": [{"type": "para", "indent": 4, "text": ["The original up vector of the agent. This parameter is used with ", {"type": "ui", "text": ["Reference Direction"]}, " when updating the agent\u2019s orientation."], "extent": [4577, 4710]}], "container": true, "attrs": {"id": "refup"}, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 3, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Locomotion Constraint"], "extent": [4710, 4740], "body": [{"type": "para", "indent": 0, "text": ["Provides advanced controls for how agents with a locomotive animation clip follow the motion specified by the clip\u2019s locomotion channel."], "extent": [4740, 4879]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Strength"], "extent": [4879, 4889], "body": [{"type": "para", "indent": 4, "text": ["Specifies how strong of an influence the locomotion channel\u2019s target velocity has on the particle\u2019s velocity (equivalent to the ", {"type": "ui", "text": ["Air Resistance"]}, " of a ", {"scheme": "Node", "value": "/nodes/dop/popdrag", "type": "link", "text": ["drag force"], "fullpath": "/nodes/dop/popdrag.html"}, ")."], "extent": [4889, 5078]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Sim Influence"], "extent": [5078, 5093], "body": [{"type": "para", "indent": 4, "text": ["Reduces the effect of other forces in the crowd simulation on locomotive agents."], "extent": [5093, 5179]}], "container": true, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 3, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Particle Update"], "extent": [5179, 5203], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Update Particles"], "extent": [5203, 5222], "body": [{"type": "para", "indent": 4, "text": ["Specifies whether the embedded POP solver is turned on. This should be turned off when using this solver as a microsolver."], "extent": [5222, 5350]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Age Particles"], "extent": [2672, 2687], "body": [{"type": "para", "indent": 4, "text": ["The ", {"type": "code", "text": ["age"]}, " attribute will be updated for each time step and the particles flagged for deletion if they exceed their ", {"type": "code", "text": ["life"]}, " attribute."], "extent": [2702, 2840]}], "container": true, "attrs": {"id": "doage"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Reap Particles"], "extent": [3532, 3548], "body": [{"type": "para", "indent": 4, "text": ["All particles with the ", {"type": "code", "text": ["dead"]}, " attribute set to 1 will be deleted."], "extent": [3573, 3644]}], "container": true, "attrs": {"id": "doreapparticles"}, "role": "item"}], "container": true, "role": "item_group"}]}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Avoidance"], "extent": [5436, 5452], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Enable Avoidance Force"], "extent": [5452, 5477], "body": [{"type": "para", "indent": 4, "text": ["When turned on, enables a force that causes the agents to avoid each other based on their anticipated time to collision."], "extent": [5477, 5603]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Guide"], "extent": [1278, 1289], "body": [{"type": "para", "indent": 8, "text": ["If turned on, shows the guide geometry for this node. "], "extent": [1289, 1361]}, {"type": "note_group", "body": [{"type": "note", "indent": 8, "role": "item", "extent": [1361, 1375], "body": [{"type": "para", "indent": 12, "text": ["Even if the guide geometry is turned on here, it can be turned off by using the ", {"type": "ui", "text": ["Hidden"]}, " flag on the DOP node."], "extent": [1375, 1501]}], "container": true}], "container": true, "role": "item_group"}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Agent Group"], "extent": [5645, 5658], "body": [{"type": "para", "indent": 4, "text": ["Specifies a subgroup of agents that are affected by the avoidance force."], "extent": [5658, 5736]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Weight"], "extent": [5736, 5744], "body": [{"type": "para", "indent": 4, "text": ["Specifies the ", {"scheme": null, "value": "/crowds/weights", "type": "link", "text": ["weight"], "fullpath": "/crowds/weights.html"}, " of the avoidance force. Higher values will cause the avoidance force to take precedence over other forces."], "extent": [5744, 5895]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Particle Scale Multiplier"], "extent": [1047, 1074], "body": [{"type": "para", "indent": 4, "text": ["The node uses ", {"type": "code", "text": ["pscale"]}, " as the size of each agent/particle when calculating potential collisions.\n    You can use this parameter to scale the value of ", {"type": "code", "text": ["pscale"]}, " in the calculation, allowing agents/particles to be more or less tightly packed.\n    This parameter can be overridden by a ", {"type": "code", "text": ["pscalemultiplier"]}, " point attribute."], "extent": [1097, 1420]}], "container": true, "attrs": {"id": "particlescale"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Force Scale"], "extent": [1420, 1433], "body": [{"type": "para", "indent": 4, "text": ["Scaling factor for the strength of the avoidance force."], "extent": [1453, 1514]}], "container": true, "attrs": {"id": "forcescale"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Anticipation Time"], "extent": [1514, 1533], "body": [{"type": "para", "indent": 4, "text": ["How far into the future an agent will look for possible collisions (this uses the current velocity to project the possible distance). The maximum distance that an agent considers another agent as a neighbor is the minimum of:"], "extent": [1556, 1787]}, {"type": "bullet_group", "body": [{"blevel": 6, "type": "bullet", "indent": 4, "text": ["Agent\u2019s current speed multiplied by the ", {"type": "ui", "text": ["Anticipation Time"]}], "extent": [1787, 1855]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": [{"type": "ui", "text": ["Neighbor Distance"]}], "extent": [1855, 1884]}], "container": true}], "container": true, "attrs": {"id": "lookaheadtime"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Neighbor Distance"], "extent": [2019, 2038], "body": [{"type": "para", "indent": 4, "text": ["Maximum distance an agent searches for nearby agents."], "extent": [2053, 2112]}], "container": true, "attrs": {"id": "ndist"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Max Neighbors"], "extent": [2112, 2127], "body": [{"type": "para", "indent": 4, "text": ["Maximum number of nearest agent neighbors to consider when computing the agent avoidance force."], "extent": [2149, 2250]}], "container": true, "attrs": {"id": "maxneighbors"}, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Look At"], "extent": [6133, 6147], "body": [{"type": "para", "indent": 0, "text": ["Controls how agents' heads are adjusted to look at targets created by ", {"scheme": "Node", "value": "/nodes/dop/agentlookat", "type": "link", "text": ["Agent Look At"], "fullpath": "/nodes/dop/agentlookat.html"}, " nodes."], "extent": [6147, 6263]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Apply Look Ats"], "extent": [6263, 6279], "body": [{"type": "para", "indent": 4, "text": ["When turned on, enables the skeleton adjustment for look ats."], "extent": [6279, 6346]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Look At Solver"], "extent": [6346, 6362], "body": [{"type": "para", "indent": 4, "text": ["Specifies which solver is used to select a look at target and adjust the agent\u2019s skeleton. This option is provided for compatibility with existing scenes."], "extent": [6362, 6522]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Simple (Deprecated)"], "extent": [6522, 6547], "body": [{"type": "para", "indent": 8, "text": [{"scheme": "Node", "value": "/nodes/dop/agentlookatapply-2.0", "type": "link", "text": ["Agent Look At Apply 2.0"], "fullpath": "/nodes/dop/agentlookatapply-2.0.html"}], "extent": [6547, 6612]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Advanced"], "extent": [6612, 6626], "body": [{"type": "para", "indent": 8, "text": [{"scheme": "Node", "value": "/nodes/dop/agentlookatapply", "type": "link", "text": ["Agent Look At Apply 3.0"], "fullpath": "/nodes/dop/agentlookatapply.html"}], "extent": [6626, 6687]}], "container": true}], "container": true}, {"type": "para", "indent": 4, "text": ["The above versions of Agent Look At Apply must be used in combination with the corresponding versions of ", {"scheme": "Node", "value": "/nodes/dop/agentlookat", "type": "link", "text": ["Agent Look At"], "fullpath": "/nodes/dop/agentlookat.html"}, "."], "extent": [6687, 6835]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Agent Group"], "extent": [6835, 6848], "body": [{"type": "para", "indent": 4, "text": ["Specifies a subgroup of agents that are affected."], "extent": [6848, 6903]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Guide"], "extent": [786, 793], "body": [{"type": "para", "indent": 4, "text": ["When turned on, displays the guide geometry indicating each agent\u2019s current target."], "extent": [808, 897]}], "container": true, "attrs": {"id": "guide"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Minimum Target Score"], "extent": [897, 919], "body": [{"type": "para", "indent": 4, "text": ["When an agent needs to select a look at target, it selects the target with the highest interest score.\n    The target scores are calculated according to the ", {"type": "ui", "text": ["Target Score"]}, " parameters on ", {"scheme": "Node", "value": "/nodes/dop/agentlookat", "type": "link", "text": ["Agent Look At"], "fullpath": "/nodes/dop/agentlookat.html"}, ".\n    If the highest target score is below the ", {"type": "ui", "text": ["Minimum Target Score"]}, ", the agent will not select a look at target.\n    This ensures that only important targets grab the agents' attention, or that targets that are about to become ineligible (for example, leaving the agent\u2019s field of view) will not be selected."], "extent": [943, 1485]}, {"type": "para", "indent": 4, "text": ["Choose one of the options on this parameter to specify how to determine the minimum target score for each agent:"], "extent": [1485, 1603]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Set Value"], "extent": [1603, 1618], "body": [{"type": "para", "indent": 8, "text": ["Use the ", {"type": "ui", "text": ["Minimum Target Score"]}, " value."], "extent": [1618, 1667]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Set from Attribute"], "extent": [1667, 1691], "body": [{"type": "para", "indent": 8, "text": ["Overrides the ", {"type": "ui", "text": ["Minimum Target Score"]}, " with the value of the point attribute, ", {"type": "ui", "text": ["Minimum Target Score Attribute"]}, "."], "extent": [1691, 1814]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Scale by Attribute"], "extent": [1814, 1838], "body": [{"type": "para", "indent": 8, "text": ["Multiplies the ", {"type": "ui", "text": ["Minimum Target Score"]}, " with the value of the point attribute, ", {"type": "ui", "text": ["Minimum Target Score Attribute"]}, "."], "extent": [1838, 1962]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "mintargetscore"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Minimum Target Score Attribute"], "extent": [1962, 1994], "body": [{"type": "para", "indent": 4, "text": ["The point attribute on the agent. "], "extent": [2024, 2064]}, {"type": "para", "indent": 4, "text": ["This parameter is only available when the ", {"type": "ui", "text": ["Minimum Target Score"]}, " mode is set to ", {"type": "ui", "text": ["Set from Attribute"]}, " or ", {"type": "ui", "text": ["Scale by Attribute"]}, "."], "extent": [2064, 2201]}], "container": true, "attrs": {"id": "mintargetscoreattrib"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Number of Joints"], "extent": [2201, 2219], "body": [{"type": "para", "indent": 4, "text": ["Limits the number of joints you can adjust in the IK chain. This number includes the head joint.\n    When turned off, the default behaviour is to include all of the joints between the ", {"type": "ui", "text": ["Lower Back"]}, " and ", {"type": "ui", "text": ["Head"]}, " joints defined with ", {"scheme": "Node", "value": "/nodes/sop/agentprep", "type": "link", "text": ["Agent Prep"], "fullpath": "/nodes/sop/agentprep.html"}, "."], "extent": [2238, 2508]}], "container": true, "attrs": {"id": "numjoints"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Head Turn Stiffness"], "extent": [2508, 2529], "body": [{"type": "para", "indent": 4, "text": ["Controls how quickly the head adjusts to match the look at direction.\n    This behaves like the stiffness of a damped angular spring."], "extent": [2556, 2695]}], "container": true, "attrs": {"id": "headturnstiffness"}, "role": "item"}], "container": true, "role": "item_group"}, {"level": 3, "type": "sep", "indent": 0, "text": [" Head Rotation Weight "], "extent": [2695, 2724], "body": [{"type": "para", "indent": 4, "text": ["Controls how much the head joint rotates relative to other joints in the IK chain, based on the angle to the target.\n    For example, reducing the head joint\u2019s weight as the target angle increases allows the rest of the spine to be more involved for larger rotations."], "extent": [2753, 3026]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 4, "text": ["Angle Range"], "extent": [3026, 3043], "body": [{"type": "para", "indent": 8, "text": ["Specifies the angles that match the start and end of the ", {"type": "ui", "text": ["Weight Ramp"]}, ".\n        Outside this angle range, the ramp extends the first and last values."], "extent": [3077, 3238]}], "container": true, "attrs": {"id": "headweightanglerange"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Weight Scale"], "extent": [3238, 3256], "body": [{"type": "para", "indent": 8, "text": ["Scales the value of the ", {"type": "ui", "text": ["Weight Ramp"]}, "."], "extent": [3285, 3335]}], "container": true, "attrs": {"id": "headweightscale"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Weight Ramp"], "extent": [3335, 3352], "body": [{"type": "para", "indent": 8, "text": ["Sets the head joint\u2019s rotation weight based on the angle to the target, multiplied by the ", {"type": "ui", "text": ["Weight Scale"]}, ".\n        The ", {"type": "ui", "text": ["Angle Range"]}, " defines the ramp\u2019s range (outside this range, the first and last values are extended)."], "extent": [3380, 3612]}], "container": true, "attrs": {"id": "headweightramp"}, "role": "item"}], "container": true, "role": "item_group"}], "container": true, "attrs": {"id": "headrotationweight"}}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Eye Turn Stiffness"], "extent": [3612, 3632], "body": [{"type": "para", "indent": 4, "text": ["Controls how quickly the eye joints adjust to match the look at direction.\n    This behaves like the stiffness of a damped angular spring."], "extent": [3658, 3802]}], "container": true, "attrs": {"id": "eyeturnstiffness"}, "role": "item"}], "container": true, "role": "item_group"}, {"level": 3, "type": "sep", "indent": 0, "text": [" Eye Rotation Weight "], "extent": [3802, 3830], "body": [{"type": "para", "indent": 4, "text": ["Controls how much the eye joints rotate relative to other joints in the IK chain, based on the angle to the target.\n    For example, reducing the eye joints' weights as the target angle increases allows the head and spine to rotate more."], "extent": [3858, 4101]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 4, "text": ["Angle Range"], "extent": [4101, 4118], "body": [{"type": "para", "indent": 8, "text": ["Specifies the angles that match the start and end of the ", {"type": "ui", "text": ["Weight Ramp"]}, ".\n        Outside this angle range, the ramp extends the first and last values."], "extent": [4151, 4312]}], "container": true, "attrs": {"id": "eyeweightanglerange"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Weight Scale"], "extent": [4312, 4330], "body": [{"type": "para", "indent": 8, "text": ["Scales the value of the ", {"type": "ui", "text": ["Weight Ramp"]}, "."], "extent": [4358, 4408]}], "container": true, "attrs": {"id": "eyeweightscale"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Weight Ramp"], "extent": [4408, 4425], "body": [{"type": "para", "indent": 8, "text": ["Sets the eye joints' rotation weights based on the angle to the target, multiplied by the ", {"type": "ui", "text": ["Weight Scale"]}, ".\n        The ", {"type": "ui", "text": ["Angle Range"]}, " defines the ramp\u2019s range (outside this range, the first and last values are extended)."], "extent": [4452, 4684]}], "container": true, "attrs": {"id": "eyeweightramp"}, "role": "item"}], "container": true, "role": "item_group"}], "container": true, "attrs": {"id": "eyerotationweight"}}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Adjust Immediately on Initial Frame"], "extent": [4684, 4721], "body": [{"type": "para", "indent": 4, "text": ["When turned on, adjusts the head immediately on the initial frame (if necessary), instead of being limited by the maximum turn rate."], "extent": [4746, 4884]}], "container": true, "attrs": {"id": "immediateadjust"}, "role": "item"}], "container": true, "role": "item_group"}, {"type": "include_group", "body": [{"ext": "/nodes/dop/agentlookatapply-2.0#eyeoffset", "type": "include", "indent": 0, "role": "item", "extent": [7394, 7447]}, {"ext": "/nodes/dop/agentlookatapply-2.0#limitheadturn", "type": "include", "indent": 0, "role": "item", "extent": [7447, 7504]}, {"ext": "/nodes/dop/agentlookatapply-2.0#headturnangle", "type": "include", "indent": 0, "role": "item", "extent": [7504, 7561]}], "container": true, "role": "item_group"}, {"level": 3, "type": "sep", "indent": 0, "text": [" Output Attributes "], "extent": [5224, 5250], "body": [{"type": "para", "indent": 4, "text": ["Outputs additional attributes with information about the agent\u2019s current target (if the agent has ", {"scheme": "Node", "value": "/nodes/sop/agentprep", "type": "link", "text": ["multiple head joints"], "fullpath": "/nodes/sop/agentprep.html"}, ", only the first joint is considered).\n    These attributes can be convenient for controlling forces or other behaviors based on the agent\u2019s current target."], "extent": [5274, 5575]}, {"type": "tip_group", "body": [{"type": "tip", "indent": 4, "role": "item", "extent": [5575, 5584], "body": [{"type": "para", "indent": 8, "text": ["You can use the ", {"scheme": "Node", "value": "/nodes/dop/crowdtrigger", "type": "link", "text": ["Crowd Trigger DOP"], "fullpath": "/nodes/dop/crowdtrigger.html"}, " to transition between states based on the agent\u2019s current target."], "extent": [5584, 5717]}], "container": true}], "container": true, "role": "item_group"}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 4, "text": ["Target Name"], "extent": [5717, 5734], "body": [{"type": "para", "indent": 8, "text": ["When turned on, creates a string point attribute containing the name of the agent\u2019s current target.\n        This value is empty if the agent does not have a current target."], "extent": [5764, 5946]}], "container": true, "attrs": {"id": "targetnameattrib"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Target Position"], "extent": [5946, 5967], "body": [{"type": "para", "indent": 8, "text": ["When turned on, creates a vector point attribute containing the position of the agent\u2019s current target."], "extent": [5996, 6109]}], "container": true, "attrs": {"id": "targetposattrib"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Target Score"], "extent": [6109, 6127], "body": [{"type": "para", "indent": 8, "text": ["When turned on, creates a float point attribute containing the interest score of the agent\u2019s current target."], "extent": [6158, 6276]}], "container": true, "attrs": {"id": "targetscoreattrib"}, "role": "item"}], "container": true, "role": "item_group"}], "container": true, "attrs": {"id": "outputattribs"}}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Terrain"], "extent": [7614, 7628], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Show Guide Geometry"], "extent": [3722, 3744], "body": [{"type": "para", "indent": 4, "text": ["When turned on, displays guide geometry indicating the positions of the lower limb joints and whether the feet are locked."], "extent": [3763, 3891]}], "container": true, "attrs": {"id": "showguide"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Scale"], "extent": [3891, 3898], "body": [{"type": "para", "indent": 4, "text": ["Adjusts the size of the guide geometry."], "extent": [3918, 3963]}], "container": true, "attrs": {"id": "guidescale"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Locked Scale"], "extent": [3963, 3977], "body": [{"type": "para", "indent": 4, "text": ["Adjusts the ", {"type": "ui", "text": ["Scale"]}, " to indicate when the foot is locked."], "extent": [3998, 4062]}], "container": true, "attrs": {"id": "lockedscale"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Color"], "extent": [4062, 4069], "body": [{"type": "para", "indent": 4, "text": ["Specifies the color of the guide geometry.\n    When ", {"type": "ui", "text": ["Enable Foot Locking"]}, " is turned on, the color ramp indicates when the ankle and toe joints are locked or blending out of the locked position."], "extent": [4089, 4290]}], "container": true, "attrs": {"id": "guidecolor"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Enable Foot Locking"], "extent": [810, 832], "body": [{"type": "para", "indent": 4, "text": ["When turned on, prevents the ankle and toe from sliding when the foot should be planted.\n    The channels specified on the ", {"scheme": "Node", "value": "/nodes/sop/agentprep", "type": "link", "text": ["Agent Prep SOP"], "fullpath": "/nodes/sop/agentprep.html"}, " are used to determine when the foot should be planted during the animation clip, as well as how to blend out of the locked position.\n    This option also improves terrain adaptation for situations where the unadjusted foot position is above the terrain, since the solver can distinguish between when the foot should be planted and when the foot is actually supposed to be above the ground.\n    This option may still be used if no terrain object is specified."], "extent": [859, 1482]}, {"type": "para", "indent": 4, "text": ["The optional ", {"type": "code", "text": ["agentterrainadaptation_footdown"]}, " float array point attribute can be used to override the foot down values computed from the agent\u2019s animation clips.\n    The attribute is expected to contain a replacement foot down value for each entry in the ", {"type": "code", "text": ["agentrig_footchannels"]}, " point attribute.\n    This may be useful when applying terrain adaptation to cached agents."], "extent": [1482, 1858]}], "container": true, "attrs": {"id": "enablefootlocking"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Adjust Hips"], "extent": [1858, 1871], "body": [{"type": "para", "indent": 4, "text": ["When turned on, adjusts the position of the hips to ensure that the legs are not over-stretched when planting the feet on uneven terrain."], "extent": [1891, 2034]}], "container": true, "attrs": {"id": "adjusthips"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Hip Offset"], "extent": [2034, 2046], "body": [{"type": "para", "indent": 4, "text": ["Specifies an additional offset to shift the hips up or down."], "extent": [2065, 2131]}], "container": true, "attrs": {"id": "hipoffset"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Hip Shift Per Frame"], "extent": [2131, 2152], "body": [{"type": "para", "indent": 4, "text": ["When turned on, specifies how much the hips can be shifted by in a single frame. This can reduce sudden hip motion on uneven terrain."], "extent": [2178, 2317]}], "container": true, "attrs": {"id": "hipshiftperframe"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Knee Damping Threshold (%)"], "extent": [2317, 2345], "body": [{"type": "para", "indent": 4, "text": ["When the distance from the upper leg to the target ankle position is greater than this percentage of the maximum leg length, the knee angle will be damped so that it smoothly approaches a 180 degree angle as the target ankle position is extended.\n    This can prevent the knee from popping when the leg is almost fully extended."], "extent": [2375, 2709]}, {"type": "note_group", "body": [{"type": "note", "indent": 4, "role": "item", "extent": [2709, 2719], "body": [{"type": "para", "indent": 8, "text": ["This can allow the leg to stretch slightly, as keeping the foot planted on the terrain is a higher priority."], "extent": [2719, 2837]}], "container": true}], "container": true, "role": "item_group"}], "container": true, "attrs": {"id": "kneedampingthreshold"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Enable Terrain Projection"], "extent": [8155, 8182], "body": [{"type": "para", "indent": 4, "text": ["When turned on, projects the agent particles on the given terrain."], "extent": [8215, 8287]}], "container": true, "attrs": {"id": "enableterrainprojection"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Agent Group"], "extent": [8287, 8300], "body": [{"type": "para", "indent": 4, "text": ["Specifies a subgroup of agents to apply the terrain projection to."], "extent": [8300, 8372]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Source"], "extent": [8372, 8380], "body": [{"type": "para", "indent": 4, "text": ["Source for the terrain object (SOP path or DOP object)."], "extent": [8380, 8441]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["SOP"], "extent": [8441, 8450], "body": [{"type": "para", "indent": 8, "text": ["Use the SOP specified in the ", {"type": "ui", "text": ["SOP Path"]}, " parameter."], "extent": [8450, 8512]}], "container": true}, {"type": "dt", "indent": 4, "text": ["DOP Data"], "extent": [8512, 8526], "body": [{"type": "para", "indent": 8, "text": ["Use the DOP specified in the ", {"type": "ui", "text": ["DOP Object"]}, " parameter."], "extent": [8526, 8590]}], "container": true}, {"type": "dt", "indent": 4, "text": ["First Context Geometry"], "extent": [8590, 8618], "body": [{"type": "para", "indent": 8, "text": ["Use the SOP connected to the DOP network\u2019s first input."], "extent": [8618, 8683]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Second Context Geometry"], "extent": [8683, 8712], "body": [{"type": "para", "indent": 8, "text": ["Use the SOP connected to the DOP network\u2019s second input."], "extent": [8712, 8778]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Third Context Geometry"], "extent": [8778, 8806], "body": [{"type": "para", "indent": 8, "text": ["Use the SOP connected to the DOP network\u2019s third input."], "extent": [8806, 8871]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Fourth Context Geometry"], "extent": [8871, 8900], "body": [{"type": "para", "indent": 8, "text": ["Use the SOP connected to the DOP network\u2019s fourth input."], "extent": [8900, 8966]}], "container": true}], "container": true}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["SOP Path"], "extent": [1078, 1088], "body": [{"type": "para", "indent": 4, "text": ["The path to the SOP (when the terrain source is set to ", {"type": "ui", "text": ["SOP"]}, ")."], "extent": [1112, 1182]}], "container": true, "attrs": {"id": "terrainsoppath"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["DOP Object"], "extent": [9026, 9038], "body": [{"type": "para", "indent": 4, "text": ["The DOP object to use as the terrain geometry (when the terrain source is set to ", {"type": "ui", "text": ["DOP Data"]}, ")."], "extent": [9038, 9139]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["DOP Data"], "extent": [9139, 9149], "body": [{"type": "para", "indent": 4, "text": ["The data attached to the ", {"type": "ui", "text": ["DOP Object"]}, " (when the terrain source is set to ", {"type": "ui", "text": ["DOP Data"]}, ")."], "extent": [9149, 9244]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Terrain Group"], "extent": [1501, 1516], "body": [{"type": "para", "indent": 4, "text": ["The primitives in the terrain geometry to be used for ray intersections."], "extent": [1538, 1616]}], "container": true, "attrs": {"id": "terraingroup"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Mode"], "extent": [9302, 9308], "body": [{"type": "para", "indent": 4, "text": ["Controls the direction of the agent projection."], "extent": [9308, 9361]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Direction Vector"], "extent": [9361, 9383], "body": [{"type": "para", "indent": 8, "text": ["Use the vector specified by the ", {"type": "ui", "text": ["Direction"]}, " parameter."], "extent": [9383, 9449]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Up Attribute"], "extent": [9449, 9467], "body": [{"type": "para", "indent": 8, "text": ["Use the agent\u2019s ", {"type": "code", "text": ["up"]}, " attribute."], "extent": [9467, 9508]}], "container": true}], "container": true}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Direction"], "extent": [9508, 9519], "body": [{"type": "para", "indent": 4, "text": ["Direction of the agent projection when ", {"type": "ui", "text": ["Mode"]}, " is set to ", {"type": "ui", "text": ["Direction Vector"]}, "."], "extent": [9519, 9604]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Sampling Method"], "extent": [1926, 1943], "body": [{"type": "para", "indent": 4, "text": ["Specifies whether to cast a single ray from the agent\u2019s point (", {"type": "ui", "text": ["Particle"]}, "), or cast a ray from each of the agent\u2019s legs (", {"type": "ui", "text": ["Foot"]}, ")."], "extent": [1967, 2106]}], "container": true, "attrs": {"id": "samplingmethod"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Sample From Agent\u2019s Plane"], "extent": [2106, 2133], "body": [{"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["Sampling Method"]}, " is set to ", {"type": "ui", "text": ["Foot"]}, ", projects the foot positions onto the plane defined by the agent\u2019s position and the ", {"type": "ui", "text": ["Direction"]}, " vector before casting rays.\n    This produces results that are consistent with the ", {"type": "ui", "text": ["Particle"]}, " sampling method if the agent is on flat terrain.\n    If this option is turned off, the agent will be lowered by the average distance of each foot from the terrain."], "extent": [2157, 2564]}], "container": true, "attrs": {"id": "projectsamples"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Offset"], "extent": [2564, 2572], "body": [{"type": "para", "indent": 4, "text": ["Additional offset that will shift all the agents up or down."], "extent": [2588, 2654]}], "container": true, "attrs": {"id": "offset"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Stick to Deforming Geometry"], "extent": [9776, 9805], "body": [{"type": "para", "indent": 4, "text": ["When turned on, records the primitive number and UVW coordinates where the agent was projected onto the terrain.\n    If the terrain geometry is deforming, this allows the solver to move the agent to the corresponding position on the deformed geometry at the start of the next frame."], "extent": [9805, 10093]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Enable Terrain Adaptation"], "extent": [2837, 2864], "body": [{"type": "para", "indent": 4, "text": ["When turned on, adjusts the agents' legs to conform to the terrain."], "extent": [2897, 2970]}], "container": true, "attrs": {"id": "enableterrainadaptation"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Agent Group"], "extent": [10162, 10175], "body": [{"type": "para", "indent": 4, "text": ["Specifies a subgroup of agents to apply terrain adaptation to."], "extent": [10175, 10243]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Lean Angle Per Frame"], "extent": [2970, 2992], "body": [{"type": "para", "indent": 4, "text": ["When navigating uneven terrain, the agent can lean forward or backward. When turned on, this parameter specifies the maximum angle (in degrees) that the agent can tilt in a single frame."], "extent": [3011, 3203]}], "container": true, "attrs": {"id": "leanangle"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Backward Lean"], "extent": [3203, 3218], "body": [{"type": "para", "indent": 4, "text": ["Specifies how far (in degrees) the agent can lean backward."], "extent": [3240, 3305]}], "container": true, "attrs": {"id": "backwardlean"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Forward Lean"], "extent": [3305, 3319], "body": [{"type": "para", "indent": 4, "text": ["Specifies how far (in degrees) the agent can lean forward."], "extent": [3340, 3404]}], "container": true, "attrs": {"id": "forwardlean"}, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Attributes"], "extent": [10413, 10430], "body": [{"type": "para", "indent": 0, "text": ["Provides options for creating attributes that may be useful when debugging a simulation."], "extent": [10430, 10521]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Agent Speed"], "extent": [10521, 10534], "body": [{"type": "para", "indent": 4, "text": ["When turned on, creates an ", {"type": "code", "text": ["agentspeed"]}, " point attribute that contains the agent\u2019s current speed."], "extent": [10534, 10636]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Agent Angular Speed"], "extent": [10636, 10657], "body": [{"type": "para", "indent": 4, "text": ["When turned on, creates an ", {"type": "code", "text": ["agentangularspeed"]}, " point attribute that contains the agent\u2019s current angular speed."], "extent": [10657, 10774]}], "container": true, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Substeps"], "extent": [10774, 10789], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Time Scale"], "extent": [900, 913], "body": [{"type": "para", "indent": 4, "text": ["An overall scale applied to the actual timestep. This parameter can be animated."], "extent": [933, 1019]}], "container": true, "attrs": {"id": "timescale"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Min Substeps"], "extent": [1019, 1033], "body": [{"type": "para", "indent": 4, "text": ["The POP solver will always enforce this minimum number of substeps."], "extent": [1059, 1132]}, {"type": "para", "indent": 4, "text": ["This should rarely need to be changed."], "extent": [1132, 1176]}], "container": true, "attrs": {"id": "minimumsubsteps"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Max Substeps"], "extent": [1176, 1190], "body": [{"type": "para", "indent": 4, "text": ["The POP solver will not break the simulation down to more\n    substeps than this value."], "extent": [1209, 1302]}], "container": true, "attrs": {"id": "substeps"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["CFL Condition"], "extent": [1302, 1317], "body": [{"type": "para", "indent": 4, "text": [{"type": "ui", "text": ["CFL Condition"]}, " is a factor used to automatically determine the \n    substep size that the scene requires. The idea is to control the distance\n    that a particle can travel in a given substep."], "extent": [1335, 1536]}, {"type": "para", "indent": 4, "text": ["For example, when ", {"type": "ui", "text": ["CFL Condition"]}, " is set to ", {"type": "code", "text": ["0.5"]}, ", the solver will set\n    the length of each substep such that no particle travels more than\n    50% of the size of the smallest particle in a substep."], "extent": [1536, 1744]}], "container": true, "attrs": {"id": "cflcond"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Quantize to Max Substeps"], "extent": [3625, 3655], "body": [{"type": "para", "indent": 12, "text": ["When turned on, use substeps that divide up the frame by ", {"type": "ui", "text": ["Max Substeps"]}, " so that the time always lands on a multiple of 1/", {"type": "ui", "text": ["Max Substeps"]}, ". "], "extent": [3682, 3837]}, {"type": "para", "indent": 12, "text": ["For example, if ", {"type": "ui", "text": ["Max Substeps"]}, " is set to 4, but the ", {"type": "ui", "text": ["CFL Condition"]}, " only requires 3 substeps, the solver will divide up the frame into 3 substeps, with the substeps located at multiples of 1/", {"type": "ui", "text": ["Max Substeps"]}, ". One combination of the substep lengths could be 0.25, 0.5, and 0.25, with the frame divided up from 0-0.25, 0.25-0.75, and 0.75-1. The solver also takes into account the current state of the particles (particle size and velocity) when dividing the frame into substeps."], "extent": [3837, 4332]}, {"type": "para", "indent": 12, "text": ["This option can be useful for re-using input geometry that has been cached to file at increments of 1/", {"type": "ui", "text": ["Max Substeps"]}, ". For example, if your geometry is cached on disk at 4 substeps per frame, then you may want your simulation\u2019s substeps to always land on a multiple of 0.25 so that you don\u2019t have to interpolate the geometry. "], "extent": [4332, 4673]}], "container": true, "attrs": {"id": "quantize"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Frames Before Solve"], "extent": [11003, 11024], "body": [{"type": "para", "indent": 4, "text": ["Delays the actual simulation for a specified number of frames after object creation.\n    Steps such as terrain adaptation will still occur during these frames."], "extent": [11024, 11189]}], "container": true, "role": "item"}], "container": true, "role": "item_group"}]}], "text": "Parameters"}, {"level": 1, "id": "related", "container": true, "type": "related_section", "indent": 0, "role": "section", "extent": [11189, 11198], "body": [{"type": "bullet_group", "body": [{"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/sop/agentprep", "type": "link", "text": "", "fullpath": "/nodes/sop/agentprep.html"}], "extent": [11198, 11221]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/dop/crowdstate", "type": "link", "text": "", "fullpath": "/nodes/dop/crowdstate.html"}], "extent": [11221, 11245]}], "container": true}], "text": "Related"}], "title": ["Crowd Solver"], "summary": ["Updates agents according to their steer forces and animation clips."], "included": ["/nodes/dop/agentlookatapply", "/nodes/dop/agentlookatapply-", "/nodes/dop/agentlookatapply-2.0", "/nodes/dop/agentterrainadaptation", "/nodes/dop/agentterrainprojection", "/nodes/dop/crowd_steer_parms", "/nodes/dop/gassubstep", "/nodes/dop/popsolver", "/nodes/dop/popsteeravoid", "/nodes/dop/standard_data_locals", "/nodes/dop/standard_data_outputs", "/nodes/dop/standard_datagroup_parms", "/nodes/dop/standard_dataname_parms", "/nodes/dop/standard_dataop_parms", "/nodes/dop/standard_distribution", "/nodes/dop/standard_locals", "/nodes/dop/standard_microsolver_inputs", "/nodes/dop/standard_pop_parms", "/nodes/dop/standard_solver_mutualparms", "/nodes/dop/standard_solver_parms"]}