{"type": "root", "attrs": {"type": "node", "context": "dop", "internal": "popsolver", "icon": "DOP/popsolver", "index": "no", "version": "", "namespace": null}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["POP Solver"], "extent": [80, 95]}, {"type": "para", "indent": 0, "text": ["The POP Solver DOP sets objects to use a POP Solver. A POP Solver uses\na POP Network to process the positions of points stored in the Geometry\ndata of the object. The POP Network can use any POP Nodes, including\nCollision POPs. "], "extent": [95, 326]}, {"type": "para", "indent": 0, "text": ["However, better results can often be achieved by doing\nthe collision detection in DOPS using the POP Solver. This is done by\nhaving the objects to collide against imported into the simulation,\noften as RBD Objects. By allowing the POP Solver to perform the\ncollision detection, it is also possible to have the other objects be\naffected by their collisions with the particles."], "extent": [326, 703]}, {"type": "tip_group", "body": [{"type": "tip", "indent": 0, "role": "item", "extent": [703, 708], "body": [{"type": "para", "indent": 4, "text": ["Set the ", {"type": "ui", "text": ["Solver Mode"]}, " to ", {"type": "ui", "text": ["Velocity Update"]}, " when using FLIP and to ", {"type": "ui", "text": ["Force Update"]}, " when using SPH."], "extent": [708, 817]}], "container": true}], "container": true, "role": "item_group"}, {"level": 1, "id": "parameters", "container": true, "type": "parameters_section", "indent": 0, "role": "section", "extent": [817, 829], "body": [{"level": 2, "id": null, "container": true, "type": "h", "indent": 4, "text": ["POP Network"], "extent": [829, 852], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 8, "text": ["Use External POP"], "extent": [852, 879], "body": [{"type": "para", "indent": 12, "text": ["Since the POP Solver is itself a POP network, if this\n            toggle is not set, it is the contained POP network that is\n            used for solving."], "extent": [879, 1047]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["POP Path"], "extent": [1047, 1065], "body": [{"type": "para", "indent": 12, "text": ["Points to the POP Network which is used to process the\n            points in the object\u2019s Geometry data at each timestep."], "extent": [1098, 1233]}], "container": true, "attrs": {"channels": "/poppath"}, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Rehome Particles"], "extent": [1233, 1259], "body": [{"type": "para", "indent": 12, "text": ["Each particle belongs to a particle primitive.  Each particle\n            primitive has string attribute called ", {"type": "q", "text": ["generator"]}, " which stores\n            which node, relative to the POP Network, that particle primitive is\n            owned by.  At the start of each POP Cook pass the particles will\n            return to their home node, as specified by this generator value.\n            If no POP Node in the network matches the name, the particles\n            aren\u2019t cooked by any of the nodes in the network."], "extent": [1259, 1779]}, {"type": "para", "indent": 12, "text": ["Rehoming the particles will temporarily set all the particles to\n            point to the same node.  This way you can ensure your particles are\n            processed regardless of what the name of the generator particle\n            was."], "extent": [1779, 2030]}, {"type": "para", "indent": 12, "text": ["Left-most Generator follows the POP path up the left-most input\n            until a root POP node is reached.  That node is then used as the\n            home.  Specific POP allows one to specify a precise POP to become\n            the new home."], "extent": [2030, 2288]}], "container": true, "role": "item"}], "container": true, "role": "item_group"}, {"level": 3, "id": null, "container": true, "type": "h", "indent": 8, "text": ["Standard"], "extent": [2288, 2311], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 12, "text": ["Initial State"], "extent": [2311, 2339], "body": [{"type": "para", "indent": 16, "text": ["Geometry file on disk to use as initial state of the\n                POP simulation."], "extent": [2381, 2482]}], "container": true, "attrs": {"channels": "/initialstate"}, "role": "item"}, {"type": "parameters_item", "indent": 12, "text": ["Random Seed"], "extent": [2482, 2507], "body": [{"type": "para", "indent": 16, "text": ["Provides a seed value for all random number generation\n                performed by the POP Network."], "extent": [2541, 2658]}], "container": true, "attrs": {"channels": "/seed"}, "role": "item"}, {"type": "parameters_item", "indent": 12, "text": ["Oversampling"], "extent": [2658, 2684], "body": [{"type": "para", "indent": 16, "text": ["How many times to cook the POP Network for each DOP\n                simulation timestep."], "extent": [2724, 2829]}], "container": true, "attrs": {"channels": "/oversample"}, "role": "item"}, {"type": "parameters_item", "indent": 12, "text": ["Max # of Particles"], "extent": [2829, 2861], "body": [{"type": "para", "indent": 16, "text": ["Controls the maximum number of particles that can exist\n                in the POP simulation at any given moment. A value of 0\n                means particles can always be birthed."], "extent": [2903, 3102]}], "container": true, "attrs": {"channels": "/maxparticles"}, "role": "item"}, {"type": "parameters_item", "indent": 12, "text": ["Remove Unused Points"], "extent": [3102, 3136], "body": [{"type": "para", "indent": 16, "text": ["Remove unused (killed) points from the object\u2019s\n                geometry."], "extent": [3136, 3227]}], "container": true, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 3, "id": null, "container": true, "type": "h", "indent": 8, "text": ["New Particles"], "extent": [3227, 3255], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 12, "text": ["Ensure All Points Are Particles"], "extent": [3255, 3301], "body": [{"type": "para", "indent": 16, "text": ["Tells the solver to check the object\u2019s geometry to ensure\n                that all points are part of particle primitives. "], "extent": [3301, 3442]}, {"type": "para", "indent": 16, "text": ["POP Nodes\n                will only process points that are part of particle\n                primitives. Any points that are not part of particle\n                primitives are added to a new particle primitive with\n                various attributes set according to the following parameter\n                values."], "extent": [3442, 3774]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 12, "text": ["Inherit Velocity"], "extent": [3774, 3804], "body": [{"type": "para", "indent": 16, "text": ["Turning on this option causes the solver to not only look\n                at the velocity attribute data on the object\u2019s geometry to\n                determine its velocity. It also looks at the Position data\n                on the object, and adds any velocity and angular velocity\n                components to the velocity of each point. "], "extent": [3804, 4162]}, {"type": "para", "indent": 16, "text": ["This option is\n                very useful to ensure continuity when handing off an object\n                to the POP Solver from another solver (such as RBD)."], "extent": [4162, 4338]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 12, "text": ["New Particle Generator"], "extent": [4338, 4374], "body": [{"type": "para", "indent": 16, "text": ["If a new particle primitive is created due to the Ensure\n                All Points Are Particles parameter, the generator attribute\n                of the new parameters is set to this value. "], "extent": [4413, 4624]}, {"type": "para", "indent": 16, "text": ["POPs use the\n                generator attribute to determine which POP Node was the\n                source for this primitive, and therefore which route through\n                the POP Network the particles will take."], "extent": [4624, 4859]}], "container": true, "attrs": {"channels": "/generator"}, "role": "item"}, {"type": "parameters_item", "indent": 12, "text": ["New Particle Lifespan"], "extent": [4859, 4894], "body": [{"type": "para", "indent": 16, "text": ["If a new particle primitive is created due to the Ensure\n                All Points Are Particles parameter, the lifespan of the\n                particles are set to this value.  This measures how long\n                in seconds that a particle will live before it dies of old\n                age."], "extent": [4932, 5247]}, {"type": "para", "indent": 16, "text": ["A value of -1 will cause the particles to never die of old\n                age."], "extent": [5247, 5344]}], "container": true, "attrs": {"channels": "/lifespan"}, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 3, "id": null, "container": true, "type": "h", "indent": 8, "text": ["Context SOPs"], "extent": [5344, 5371], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 12, "text": ["SOP 1, 2, 3, and 4"], "extent": [5371, 5404], "body": [{"type": "para", "indent": 16, "text": ["Path to a SOP to use as the First, Second, Third, and Fourth\n                Context Geometry."], "extent": [5404, 5516]}], "container": true, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 3, "id": null, "container": true, "type": "h", "indent": 8, "text": ["Context Data"], "extent": [5516, 5543], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 12, "text": ["Data Path 1, 2, 3, and 4"], "extent": [5543, 5582], "body": [{"type": "para", "indent": 16, "text": ["Path to DOP Data to use as the First, Second, Third, and Fourth\n                Context Geometry.  The referenced path should be of type\n                SIM_Geometry, ie, from a Geometry DOP or SOP Geometry DOP.  The\n                path is relative to the POP Solver node so a value of\n                ", {"type": "q", "text": ["Geometry"]}, " will refer to the geometry attached to the solver,\n                not the geometry at the root of the object.  The path\n                ", {"type": "q", "text": ["/Geometry"]}, " will get data from the root of the object."], "extent": [5582, 6105]}], "container": true, "role": "item"}], "container": true, "role": "item_group"}]}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 4, "text": ["Collisions"], "extent": [6105, 6126], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 8, "text": ["Handle Collisions"], "extent": [6126, 6154], "body": [{"type": "para", "indent": 12, "text": ["Enable particles to collide with other objects in the scene. Leave this on."], "extent": [6154, 6243]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Stop Particles"], "extent": [6243, 6267], "body": [{"type": "para", "indent": 12, "text": ["The parameters in this tab provide filters to apply to all\n            DOP objects which are affectors of the POP Object. Any\n            objects which match this filter cause particles to stop when\n            involved in a collision. "], "extent": [6304, 6554]}, {"type": "para", "indent": 12, "text": ["The filters in this tab are applied\n            in order, so the first filter which matches a given object\n            determines the behavior of that object."], "extent": [6554, 6725]}], "container": true, "attrs": {"channels": "/collidestop"}, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Kill Particles"], "extent": [6725, 6749], "body": [{"type": "para", "indent": 12, "text": ["Any objects which match this filter cause particles to be\n            killed when involved in a collision."], "extent": [6786, 6905]}], "container": true, "attrs": {"channels": "/collidekill"}, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Continue Particles"], "extent": [6905, 6933], "body": [{"type": "para", "indent": 12, "text": ["Any objects which match this filter cause particles to\n            continue unaffected when involved in a collision."], "extent": [6974, 7103]}], "container": true, "attrs": {"channels": "/collidecontinue"}, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Stick Particles"], "extent": [7103, 7128], "body": [{"type": "para", "indent": 12, "text": ["Any objects which match this filter cause particles to\n            stick to them when involved in a collision. Sticking the\n            particles to the object is achieved using constraints."], "extent": [7166, 7369]}], "container": true, "attrs": {"channels": "/collidestick"}, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Bounce Particles"], "extent": [7369, 7395], "body": [{"type": "para", "indent": 12, "text": ["Any objects which match this filter cause particles to\n            bounce off them when involved in a collision. The bounce\n            attribute of the particle is used to determine the amount of\n            energy preserved in the collision."], "extent": [7434, 7691]}], "container": true, "attrs": {"channels": "/collidebounce"}, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 4, "text": ["Solver"], "extent": [7691, 7708], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 8, "text": ["Geometry Name"], "extent": [7708, 7732], "body": [{"type": "para", "indent": 12, "text": ["This specifies which geometry data will be used as the\n            particle system by the POP Solver. Usually this will be\n            Geometry as that represents the standard geometry of a node."], "extent": [7732, 7953]}, {"type": "para", "indent": 12, "text": ["However, any other data of GeometryCopy type may be\n            specified and manipulated by the particle network. One can\n            thus update marker particles in a fluid simulation or\n            vorticle particles by using the appropriately named geometry\n            data."], "extent": [7953, 8246]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Solver Mode"], "extent": [8246, 8267], "body": [{"type": "para", "indent": 12, "text": ["The POP Solver can be used in several different ways in a DOP\n            Network.  The solver mode provides a quick way to setup the ", {"type": "ui", "text": ["Update\n            Stages"]}, " and ", {"type": "ui", "text": ["Suppression Rules"]}, " to reflect these different rules."], "extent": [8267, 8504]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 12, "text": ["Custom"], "extent": [8504, 8524], "body": [{"type": "para", "indent": 16, "text": ["Each stage can be enabled by hand.  The default parameters are\n                for the ", {"type": "ui", "text": ["Stand Alone"]}, " mode."], "extent": [8524, 8650]}], "container": true}, {"type": "dt", "indent": 12, "text": ["Stand Alone"], "extent": [8650, 8675], "body": [{"type": "para", "indent": 16, "text": ["The POP Solver acts like a standalone pop network.  It will\n                integrate all the particles, apply any DOP forces, etc."], "extent": [8675, 8824]}], "container": true}, {"type": "dt", "indent": 12, "text": ["Velocity Update"], "extent": [8824, 8853], "body": [{"type": "para", "indent": 16, "text": ["This setup is useful for when a pop solver is used in the\n                velocity update stage of a FLIP Solver or ", {"scheme": "Node", "value": "/nodes/dop/particlefluidsolver", "type": "link", "text": ["Particle Fluid\n                Solver"], "fullpath": "/nodes/dop/particlefluidsolver.html"}, ".  It updates the\n                velocity according to the acceleration,\n                but does not update position, leaving that for another\n                microsolver to integrate."], "extent": [8853, 9241]}], "container": true}, {"type": "dt", "indent": 12, "text": ["Force Update"], "extent": [9241, 9267], "body": [{"type": "para", "indent": 16, "text": ["This setup is useful for when a POP Solver is used in the force\n                update stage of a ", {"scheme": "Node", "value": "/nodes/dop/particlefluidsolver", "type": "link", "text": ["Particle Fluid\n                Solver"], "fullpath": "/nodes/dop/particlefluidsolver.html"}, ".  It turns off\n                all of the integration and the reaping of dead particles.  \n                It also turns on the conversion of the accel attribute\n                into a force attribute, as expected by the particle\n                fluid solver."], "extent": [9267, 9711]}], "container": true}], "container": true}], "container": true, "role": "item"}], "container": true, "role": "item_group"}, {"level": 3, "id": null, "container": true, "type": "h", "indent": 8, "text": ["Update Stages"], "extent": [9711, 9739], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 12, "text": ["Do Cook First"], "extent": [9739, 9775], "body": [{"type": "para", "indent": 16, "text": ["The normal POP order of cooking is Reap, Apply Rules,\n                Prep, and then Cook.  This works for POPs as it allows\n                accelerations to be seen before they are applied.\n                However, when chaining multiple POP networks together it\n                means the suppression rules need to be set on the next\n                network rather than the current one."], "extent": [9775, 10180]}, {"type": "para", "indent": 16, "text": ["Setting Do Cook First changes the cook order to Prep,\n                Cook, Reap, Apply Rules.  Note that since DOP Forces are\n                set outside the cook invocation, setting Do Cook First\n                will disable DOP Forces.  However, in the case of particle\n                fluids, this is likely the desired behavior in any case."], "extent": [10180, 10542]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 12, "text": ["Prep Particles"], "extent": [10542, 10570], "body": [{"type": "para", "indent": 16, "text": ["Before cooking particles they need to be reset from their\n                old values. The Prep Particles stage of the cook process\n                zeros out the accelerations and torques and updates the\n                state flags based on the age of the particles. "], "extent": [10570, 10854]}, {"type": "para", "indent": 16, "text": ["If you want multiple POP solvers to accumulate forces, one must\n                disable the prep in one of the solvers to allow the\n                acceleration to be passed from one solver to the next."], "extent": [10854, 11073]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 12, "text": ["Cook POPs"], "extent": [11073, 11096], "body": [{"type": "para", "indent": 16, "text": ["Determines if the POP network will be executed for the\n                particles. The POP network adjusts particle accelerations\n                according to the POP nodes. Cooking does not update the\n                velocity or position to reflect timestepping, however."], "extent": [11096, 11384]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 12, "text": ["Apply Rules"], "extent": [11384, 11409], "body": [{"type": "para", "indent": 16, "text": ["After the new accelerations and torques have been\n                calculated by the pop network, they need to be integrated\n                over time to calculate the new velocities and positions. The\n                Apply Rules stage does this. It also handles speed limits\n                and up vector adjustments."], "extent": [11409, 11744]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 12, "text": ["Reap Particles"], "extent": [11744, 11772], "body": [{"type": "para", "indent": 16, "text": ["For efficiency particles flagged for deletion are all\n                deleted in a single reap pass. This stage can be enabled\n                with this option. "], "extent": [11772, 11951]}, {"type": "note_group", "body": [{"type": "note", "indent": 16, "role": "item", "extent": [11951, 11973], "body": [{"type": "para", "indent": 20, "text": ["Particles that are marked for deletion are removed from the\n                    simulation, so even if their deletion is disabled, they\n                    will still stop simulating."], "extent": [11973, 12177]}], "container": true}], "container": true, "role": "item_group"}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 12, "text": ["DOP Forces"], "extent": [12177, 12201], "body": [{"type": "para", "indent": 16, "text": ["Enables the processing of DOP level forces.  If one is\n                chaining multiple POP Solvers together, one only wants to\n                apply the forces once to avoid double counting."], "extent": [12201, 12411]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 12, "text": ["Convert Accel to Force"], "extent": [12411, 12447], "body": [{"type": "para", "indent": 16, "text": ["POPs normally work by computing an ", {"type": "code", "text": ["accel"]}, " attribute\n                that stores the change in velocity.  However, it expects forces rather than accelerations when the solver is in force mode. This will convert the\n                ", {"type": "code", "text": ["accel"]}, " attribute into a force value by multiplying by\n                the density.  If a density attribute is not present,\n                it multiplies by mass.  If neither are present, or\n                either mass or force attributes are missing, it does\n                nothing."], "extent": [12447, 12980]}], "container": true, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 3, "id": null, "container": true, "type": "h", "indent": 8, "text": ["Suppression Rules"], "extent": [12980, 13012], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 12, "text": ["Suppress *"], "extent": [13012, 13037], "body": [{"type": "para", "indent": 16, "text": ["These options suppress individual portions of the Rule\n                update.  If ", {"type": "ui", "text": ["Apply Rules"]}, " is off, everything is suppressed.\n                If it is on, one can turn of specific sections."], "extent": [13037, 13250]}], "container": true, "role": "item"}], "container": true, "role": "item_group"}]}]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Parameter Operations"], "extent": [16, 38], "body": [{"type": "para", "indent": 4, "text": ["Each data option parameter has an associated menu which specifies\n    how that parameter operates."], "extent": [38, 142]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Use Default "], "extent": [142, 160], "body": [{"type": "para", "indent": 8, "text": ["Use the value from the Default Operation menu."], "extent": [160, 215]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Set Initial "], "extent": [215, 233], "body": [{"type": "para", "indent": 8, "text": ["Set the value of this parameter only when this data is created.\n        On all subsequent timesteps, the value of this parameter is not\n        altered. This is useful for setting up initial conditions like\n        position and velocity."], "extent": [233, 479]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Set Always "], "extent": [479, 496], "body": [{"type": "para", "indent": 8, "text": ["Always set the value of this parameter. This is useful when\n        specific keyframed values are required over time. This could be\n        used to keyframe the position of an object over time, or to\n        cause the geometry from a SOP to be refetched at each timestep\n        if the geometry is deforming. "], "extent": [496, 823]}, {"type": "para", "indent": 8, "text": ["You can also use this setting in\n        conjunction with the local variables for a parameter value to\n        modify a value over time. For example, in the X Position, an\n        expression like ", {"type": "code", "text": ["$tx + 0.1"]}, " would cause the object to\n        move 0.1 units to the right on each timestep."], "extent": [823, 1119]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Set Never "], "extent": [1119, 1135], "body": [{"type": "para", "indent": 8, "text": ["Do not ever set the value of this parameter. This option is most\n        useful when using this node to modify an existing piece of data\n        connected through the first input. "], "extent": [1135, 1333]}, {"type": "para", "indent": 8, "text": ["For example, an ", {"scheme": "Node", "value": "/nodes/dop/rbdstate", "type": "link", "text": ["RBD State\n        DOP"], "fullpath": "/nodes/dop/rbdstate.html"}, " may want to animate just the mass of an\n        object, and nothing else. The ", {"type": "ui", "text": ["Set Never"]}, " option could be used\n        on all parameters except for ", {"type": "ui", "text": ["Mass"]}, ", which would use ", {"type": "ui", "text": ["Set\n        Always"]}, "."], "extent": [1333, 1608]}], "container": true}], "container": true}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Default Operation"], "extent": [1608, 1627], "body": [{"type": "para", "indent": 4, "text": ["For any parameters with their ", {"type": "ui", "text": ["Operation"]}, " menu set to ", {"type": "ui", "text": ["Use\n    Default"]}, ", this parameter controls what operation is used. "], "extent": [1627, 1762]}, {"type": "para", "indent": 4, "text": ["This\n    parameter has the same menu options and meanings as the ", {"type": "ui", "text": ["Parameter\n    Operations"]}, " menus, but without the ", {"type": "ui", "text": ["Use Default"]}, " choice."], "extent": [1762, 1908]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Make Objects Mutual Affectors"], "extent": [15, 46], "body": [{"type": "para", "indent": 4, "text": ["All objects connected to the first input of this node become mutual\n    affectors. "], "extent": [46, 139]}, {"type": "para", "indent": 4, "text": ["This is equivalent to using an ", {"scheme": "Node", "value": "/nodes/dop/affector", "type": "link", "text": ["Affector\n    DOP"], "fullpath": "/nodes/dop/affector.html"}, " to create an affector relationship between\n    ", {"type": "code", "text": ["*"]}, " and ", {"type": "code", "text": ["*"]}, " before connecting it to this node. This option makes it\n    convenient to have all objects feeding into a solver node affect\n    each other."], "extent": [139, 412]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Group"], "extent": [15, 22], "body": [{"type": "para", "indent": 4, "text": ["When an object connector is attached to the first input of this\n    node, this parameter can be used to choose a subset of those objects\n    to be affected by this node."], "extent": [45, 219]}], "container": true, "attrs": {"channels": "/group"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Data Name"], "extent": [15, 26], "body": [{"type": "para", "indent": 4, "text": ["Indicates the name that should be used to attach the data to an\n    object or other piece of data. If the Data Name contains a ", {"type": "q", "text": ["/"]}, " (or\n    several), that indicates traversing inside subdata. "], "extent": [26, 227]}, {"type": "para", "indent": 4, "text": ["For example, if the ", {"scheme": "Node", "value": "/nodes/dop/fan", "type": "link", "text": ["Fan Force DOP"], "fullpath": "/nodes/dop/fan.html"}, " has the default Data Name\n    ", {"type": "q", "text": ["Forces/Fan"]}, ". This attaches the data with the name ", {"type": "q", "text": ["Fan"]}, " to an\n    existing piece of data named ", {"type": "q", "text": ["Forces"]}, ". If no data named ", {"type": "q", "text": ["Forces"]}, "\n    exists, a simple piece of container data is created to hold the\n    ", {"type": "q", "text": ["Fan"]}, " subdata."], "extent": [227, 530]}, {"type": "para", "indent": 4, "text": ["Different pieces of data have different requirements on what names\n    should be used for them. Except in very rare situations, the default\n    value should be used. Some exceptions are described with particular\n    pieces of data or with solvers that make use of some particular type\n    of data."], "extent": [530, 833]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Unique Data Name"], "extent": [833, 851], "body": [{"type": "para", "indent": 4, "text": ["Turning on this parameter modifies the ", {"type": "ui", "text": ["Data Name"]}, " parameter\n    value to ensure that the data created by this node is attached with\n    a unique name so it will not overwrite any existing data. "], "extent": [851, 1058]}, {"type": "para", "indent": 4, "text": ["With this\n    parameter turned off, attaching two pieces of data with the same\n    name will cause the second one to replace the first. There are\n    situations where each type of behavior is desirable. "], "extent": [1058, 1271]}, {"type": "para", "indent": 4, "text": ["If an object\n    needs to have several ", {"scheme": "Node", "value": "/nodes/dop/fan", "type": "link", "text": ["Fan Forces"], "fullpath": "/nodes/dop/fan.html"}, " blowing on it, it is\n    much easier to use the ", {"type": "ui", "text": ["Unique Data Name"]}, " feature to ensure that\n    each fan does not overwrite a previous fan rather than trying to\n    change the ", {"type": "ui", "text": ["Data Name"]}, " of each fan individually to avoid\n    conflicts. "], "extent": [1271, 1585]}, {"type": "para", "indent": 4, "text": ["On the other hand, if an object is known to have ", {"scheme": "Node", "value": "/nodes/dop/rbdstate", "type": "link", "text": ["RBD\n    State"], "fullpath": "/nodes/dop/rbdstate.html"}, " data already attached to it, leaving this\n    option turned off will allow some new ", {"scheme": "Node", "value": "/nodes/dop/rbdstate", "type": "link", "text": ["RBD State"], "fullpath": "/nodes/dop/rbdstate.html"}, "\n    data to overwrite the existing data."], "extent": [1585, 1827]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Solver Per Object"], "extent": [159, 178], "body": [{"type": "para", "indent": 4, "text": ["The default behavior for solvers is to attach the exact same\n    solver to all of the objects specified in the group.  This allows\n    the objects to be processed in a single pass by the solver, since\n    the parameters are identical for each object.  "], "extent": [178, 440]}, {"type": "para", "indent": 4, "text": ["However, some objects operate more logically on a single object at\n    a time.  In these cases, one may want to use ", {"type": "code", "text": ["$OBJID"]}, " expressions\n    to vary the solver parameters across the objects.  Setting this\n    toggle will create a separate solver per object, allowing ", {"type": "code", "text": ["$OBJID"]}, "\n    to vary as expected."], "extent": [440, 746]}, {"type": "para", "indent": 4, "text": ["Setting this is also required if stamping the parameters with a\n    Copy Data DOP."], "extent": [746, 833]}], "container": true, "role": "item"}], "container": true}], "text": "Parameters"}, {"level": 1, "id": "inputs", "container": true, "type": "inputs_section", "indent": 0, "role": "section", "extent": [13287, 13295], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 0, "text": ["First Input"], "extent": [15, 28], "body": [{"type": "para", "indent": 4, "text": ["This optional input can be used to control which simulation objects\n    are modified by this node. Any objects connected through this input\n    and which match the ", {"type": "ui", "text": ["Group"]}, " parameter field will be modified. "], "extent": [28, 246]}, {"type": "para", "indent": 4, "text": ["If this input is not connected, this node can be used in conjunction with an\n    Apply Data node, or can be used as an input to another data node."], "extent": [246, 397]}], "container": true}, {"type": "dt", "indent": 0, "text": ["All Other Inputs"], "extent": [397, 415], "body": [{"type": "para", "indent": 4, "text": ["If this node has more input connectors, other data nodes can be\n    attached to act as modifiers for the data created by this node. "], "extent": [415, 557]}, {"type": "para", "indent": 4, "text": ["The specific types of subdata that are meaningful vary from node to\n    node. Click ", {"keys": ["MMB"], "type": "keys", "text": null}, " an input connector to see a list of available\n    data nodes that can be meaningfully attached."], "extent": [557, 749]}], "container": true}], "container": true}], "text": "Inputs"}, {"level": 1, "id": "outputs", "container": true, "type": "outputs_section", "indent": 0, "role": "section", "extent": [13331, 13340], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 0, "text": ["First Output"], "extent": [15, 29], "body": [{"type": "para", "indent": 4, "text": ["The operation of this output depends on what inputs are connected\n    to this node. If an object stream is input to this node, the output\n    is also an object stream containing the same objects as the input\n    (but with the data from this node attached). "], "extent": [29, 296]}, {"type": "para", "indent": 4, "text": ["If no object stream is\n    connected to this node, the output is a data output. This data\n    output can be connected to an ", {"scheme": "Node", "value": "/nodes/dop/applydata", "type": "link", "text": ["Apply Data DOP"], "fullpath": "/nodes/dop/applydata.html"}, ",\n    or connected directly to a data input of another data node, to\n    attach the data from this node to an object or another piece of\n    data."], "extent": [296, 606]}], "container": true}], "container": true}], "text": "Outputs"}, {"level": 1, "id": "locals", "container": true, "type": "locals_section", "indent": 0, "role": "section", "extent": [13377, 13385], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 0, "text": ["channelname"], "extent": [16, 29], "body": [{"type": "para", "indent": 4, "text": ["This DOP node defines a local variable for each channel and\n    parameter on the Data Options page, with the same name as the\n    channel. So for example, the node may have channels for Position\n    (positionx, positiony, positionz) and a parameter for an object name\n    (objectname). "], "extent": [29, 325]}, {"type": "para", "indent": 4, "text": ["Then there will also be local variables with the names\n    positionx, positiony, positionz, and objectname. These variables\n    will evaluate to the previous value for that parameter. "], "extent": [325, 519]}, {"type": "para", "indent": 4, "text": ["This previous value is always stored as part of the data attached to the\n    object being processed. This is essentially a shortcut for a\n    dopfield expression like:"], "extent": [519, 692]}, {"lang": null, "type": "pre", "indent": 4, "text": ["\n    dopfield($DOPNET, $OBJID, dataName, \"Options\", 0, channelname)\n    "], "extent": [692, 775]}, {"type": "para", "indent": 4, "text": ["If the data does not already exist, then a value of zero or an\n    empty string will be returned."], "extent": [775, 883]}], "container": true}, {"type": "dt", "indent": 0, "text": ["DATACT"], "extent": [883, 891], "body": [{"type": "para", "indent": 4, "text": ["This value is the simulation time (see variable ST) at which the\n    current data was created. This value may not be the same as the\n    current simulation time if this node is modifying existing data,\n    rather than creating new data."], "extent": [891, 1132]}], "container": true}, {"type": "dt", "indent": 0, "text": ["DATACF"], "extent": [1132, 1140], "body": [{"type": "para", "indent": 4, "text": ["This value is the simulation frame (see variable SF) at which the\n    current data was created. This value may not be the same as the\n    current simulation frame if this node is modifying existing data,\n    rather than creating new data."], "extent": [1140, 1383]}], "container": true}, {"type": "dt", "indent": 0, "text": ["RELNAME"], "extent": [1383, 1392], "body": [{"type": "para", "indent": 4, "text": ["This value will be set only when data is being attached to a relationship\n    (such as when Constraint Anchor DOP is connected to the second, third, of\n    fourth inputs of a Constraint DOP). "], "extent": [1392, 1594]}, {"type": "para", "indent": 4, "text": ["In this case, this value is set to the\n    name of the relationship to which the data is being attached."], "extent": [1594, 1703]}], "container": true}, {"type": "dt", "indent": 0, "text": ["RELOBJIDS"], "extent": [1703, 1714], "body": [{"type": "para", "indent": 4, "text": ["This value will be set only when data is being attached to a relationship\n    (such as when Constraint Anchor DOP is connected to the second, third, of\n    fourth inputs of a Constraint DOP). "], "extent": [1714, 1916]}, {"type": "para", "indent": 4, "text": ["In this case, this value is set to a\n    string that is a space separated list of the object identifiers for all\n    the Affected Objects of the relationship to which the data is being\n    attached."], "extent": [1916, 2119]}], "container": true}, {"type": "dt", "indent": 0, "text": ["RELOBJNAMES"], "extent": [2119, 2132], "body": [{"type": "para", "indent": 4, "text": ["This value will be set only when data is being attached to a relationship\n    (such as when Constraint Anchor DOP is connected to the second, third, of\n    fourth inputs of a Constraint DOP). "], "extent": [2132, 2334]}, {"type": "para", "indent": 4, "text": ["In this case, this value is set to a\n    string that is a space separated list of the names of all the Affected\n    Objects of the relationship to which the data is being attached."], "extent": [2334, 2519]}], "container": true}, {"type": "dt", "indent": 0, "text": ["RELAFFOBJIDS"], "extent": [2519, 2533], "body": [{"type": "para", "indent": 4, "text": ["This value will be set only when data is being attached to a relationship\n    (such as when Constraint Anchor DOP is connected to the second, third, of\n    fourth inputs of a Constraint DOP). "], "extent": [2533, 2735]}, {"type": "para", "indent": 4, "text": ["In this case, this value is set to a\n    string that is a space separated list of the object identifiers for all\n    the Affector Objects of the relationship to which the data is being\n    attached."], "extent": [2735, 2938]}], "container": true}, {"type": "dt", "indent": 0, "text": ["RELAFFOBJNAMES"], "extent": [2938, 2954], "body": [{"type": "para", "indent": 4, "text": ["This value will be set only when data is being attached to a relationship\n    (such as when Constraint Anchor DOP is connected to the second, third, of\n    fourth inputs of a Constraint DOP). "], "extent": [2954, 3156]}, {"type": "para", "indent": 4, "text": ["In this case, this value is set to a\n    string that is a space separated list of the names of all the Affector\n    Objects of the relationship to which the data is being attached."], "extent": [3156, 3341]}], "container": true}, {"type": "dt", "indent": 0, "text": ["ST"], "extent": [16, 20], "body": [{"type": "para", "indent": 4, "text": ["The simulation time for which the node is being evaluated. "], "extent": [20, 89]}, {"type": "para", "indent": 4, "text": ["Depending on the settings of the ", {"scheme": "Node", "value": "/nodes/obj/dopnet", "type": "link", "text": ["DOP Network"], "fullpath": "/nodes/obj/dopnet.html"}, " \n    ", {"type": "ui", "text": ["Offset Time"]}, " and ", {"type": "ui", "text": ["Scale Time"]}, " parameters, \n    this value may not be equal to the current Houdini time\n    represented by the variable T. "], "extent": [89, 310]}, {"type": "para", "indent": 4, "text": ["ST is guaranteed to have a value of zero at the\n    start of a simulation, so when testing for the first timestep of a\n    simulation, it is best to use a test like ", {"type": "code", "text": ["$ST == 0"]}, ", rather than\n    ", {"type": "code", "text": ["$T == 0"]}, " or ", {"type": "code", "text": ["$FF == 1"]}, "."], "extent": [310, 533]}], "container": true}, {"type": "dt", "indent": 0, "text": ["SF"], "extent": [533, 537], "body": [{"type": "para", "indent": 4, "text": ["The simulation frame (or more accurately, the \n    simulation time step number) for which the node is being evaluated."], "extent": [537, 665]}, {"type": "para", "indent": 4, "text": ["Depending on the settings of the ", {"scheme": "Node", "value": "/nodes/obj/dopnet", "type": "link", "text": ["DOP Network"], "fullpath": "/nodes/obj/dopnet.html"}, " parameters, \n    this value may not be equal to the current Houdini frame number\n    represented by the variable F. Instead, it is equal to\n    the simulation time (ST) divided by the simulation timestep size \n    (TIMESTEP)."], "extent": [665, 959]}], "container": true}, {"type": "dt", "indent": 0, "text": ["TIMESTEP"], "extent": [959, 969], "body": [{"type": "para", "indent": 4, "text": ["The size of a simulation timestep. This value is\n    useful for scaling values that are expressed in units per second, but\n    are applied on each timestep."], "extent": [969, 1131]}], "container": true}, {"type": "dt", "indent": 0, "text": ["SFPS"], "extent": [1131, 1137], "body": [{"type": "para", "indent": 4, "text": ["The inverse of the TIMESTEP value. It is the number\n    of timesteps per second of simulation time."], "extent": [1137, 1242]}], "container": true}, {"type": "dt", "indent": 0, "text": ["SNOBJ"], "extent": [1242, 1249], "body": [{"type": "para", "indent": 4, "text": ["The number of objects in the simulation. For nodes that\n    create objects such as the ", {"scheme": "Node", "value": "/nodes/dop/emptyobject", "type": "link", "text": ["Empty Object DOP"], "fullpath": "/nodes/dop/emptyobject.html"}, ",\n    SNOBJ increases for each object that is evaluated. "], "extent": [1249, 1442]}, {"type": "para", "indent": 4, "text": ["A good way to guarantee unique object names is to use an expression\n    like ", {"type": "code", "text": ["object_$SNOBJ"]}, "."], "extent": [1442, 1541]}], "container": true}, {"type": "dt", "indent": 0, "text": ["NOBJ"], "extent": [1541, 1547], "body": [{"type": "para", "indent": 4, "text": ["The number of objects that are evaluated by the\n    current node during this timestep. This value is often \n    different from SNOBJ, as many nodes do not process all the objects\n    in a simulation. "], "extent": [1547, 1757]}, {"type": "para", "indent": 4, "text": ["NOBJ may return 0 if the node does not\n    process each object sequentially (such as the ", {"scheme": "Node", "value": "/nodes/dop/group", "type": "link", "text": ["Group\n    DOP"], "fullpath": "/nodes/dop/group.html"}, ")."], "extent": [1757, 1884]}], "container": true}, {"type": "dt", "indent": 0, "text": ["OBJ"], "extent": [1884, 1889], "body": [{"type": "para", "indent": 4, "text": ["The index of the specific object being processed by\n    the node. This value always runs from zero to NOBJ-1 in a given\n    timestep. It does not identify the current object within the\n    simulation like OBJID or OBJNAME; it only identifies the object\u2019s \n    position in the current order of processing. "], "extent": [1889, 2204]}, {"type": "para", "indent": 4, "text": ["This value is useful for generating a\n    random number for each object, or simply splitting the objects into\n    two or more groups to be processed in different ways. This value\n    is -1 if the node does not process objects sequentially (such\n    as the ", {"scheme": "Node", "value": "/nodes/dop/group", "type": "link", "text": ["Group DOP"], "fullpath": "/nodes/dop/group.html"}, ")."], "extent": [2204, 2494]}], "container": true}, {"type": "dt", "indent": 0, "text": ["OBJID"], "extent": [2494, 2501], "body": [{"type": "para", "indent": 4, "text": ["The unique identifier for the object being\n    processed. Every object is assigned an integer value that is unique\n    among all objects in the simulation for all time. Even if an object\n    is deleted, its identifier is never reused. This is very useful in\n    situations where each object needs to be treated differently, for \n    example, to produce a unique random number for each object. "], "extent": [2501, 2900]}, {"type": "para", "indent": 4, "text": ["This value is also the best way to look up information on an object using the dopfield expression function. "], "extent": [2900, 3014]}, {"type": "para", "indent": 4, "text": ["OBJID is -1 if the node does not process objects\n    sequentially (such as the ", {"scheme": "Node", "value": "/nodes/dop/group", "type": "link", "text": ["Group DOP"], "fullpath": "/nodes/dop/group.html"}, ")."], "extent": [3014, 3127]}], "container": true}, {"type": "dt", "indent": 0, "text": ["ALLOBJIDS"], "extent": [3127, 3138], "body": [{"type": "para", "indent": 4, "text": ["This string contains a space-separated list of the unique object\n    identifiers for every object being processed by the current node."], "extent": [3138, 3278]}], "container": true}, {"type": "dt", "indent": 0, "text": ["ALLOBJNAMES"], "extent": [3278, 3291], "body": [{"type": "para", "indent": 4, "text": ["This string contains a space-separated list of the names of every\n    object being processed by the current node."], "extent": [3291, 3410]}], "container": true}, {"type": "dt", "indent": 0, "text": ["OBJCT"], "extent": [3410, 3417], "body": [{"type": "para", "indent": 4, "text": ["The simulation time (see variable ST) at which the\n    current object was created. "], "extent": [3417, 3510]}, {"type": "para", "indent": 4, "text": ["To check if an object was created\n    on the current timestep, the expression ", {"type": "code", "text": ["$ST == $OBJCT"]}, " should\n    always be used. "], "extent": [3510, 3637]}, {"type": "para", "indent": 4, "text": ["This value is zero if the node does not process\n    objects sequentially (such as the ", {"scheme": "Node", "value": "/nodes/dop/group", "type": "link", "text": ["Group DOP"], "fullpath": "/nodes/dop/group.html"}, ")."], "extent": [3637, 3757]}], "container": true}, {"type": "dt", "indent": 0, "text": ["OBJCF"], "extent": [3757, 3764], "body": [{"type": "para", "indent": 4, "text": ["The simulation frame (see variable SF) at which the \n    current object was created. It is equivalent to using the \n    dopsttoframe expression on the OBJCT variable. "], "extent": [3764, 3937]}, {"type": "para", "indent": 4, "text": ["This value is zero if the node does not process objects \n    sequentially (such as the ", {"scheme": "Node", "value": "/nodes/dop/group", "type": "link", "text": ["Group DOP"], "fullpath": "/nodes/dop/group.html"}, ")."], "extent": [3937, 4058]}], "container": true}, {"type": "dt", "indent": 0, "text": ["OBJNAME"], "extent": [4058, 4067], "body": [{"type": "para", "indent": 4, "text": ["A string value containing the name of the object being\n    processed. "], "extent": [4067, 4147]}, {"type": "para", "indent": 4, "text": ["Object names are not guaranteed to be unique within a\n    simulation. However, if you name your objects carefully so that they\n    are unique, the object name can be a much easier way to identify an\n    object than the unique object identifier, OBJID. "], "extent": [4147, 4409]}, {"type": "para", "indent": 4, "text": ["The object name can\n    also be used to treat a number of similar objects (with the same\n    name) as a virtual group. If there are 20 objects named ", {"type": "q", "text": ["myobject"]}, ",\n    specifying ", {"type": "code", "text": ["strcmp($OBJNAME, \"myobject\") == 0"]}, " in the activation field\n    of a DOP will cause that DOP to operate on only those 20 objects. "], "extent": [4409, 4721]}, {"type": "para", "indent": 4, "text": ["This value is the empty string if the node does not process objects\n    sequentially (such as the ", {"scheme": "Node", "value": "/nodes/dop/group", "type": "link", "text": ["Group DOP"], "fullpath": "/nodes/dop/group.html"}, ")."], "extent": [4721, 4853]}], "container": true}, {"type": "dt", "indent": 0, "text": ["DOPNET"], "extent": [4853, 4861], "body": [{"type": "para", "indent": 4, "text": ["A string value containing the full path of the current DOP\n    network. This value is most useful in DOP subnet digital assets\n    where you want to know the path to the DOP network that contains the\n    node."], "extent": [4861, 5076]}], "container": true}], "container": true}, {"type": "note_group", "body": [{"type": "note", "indent": 0, "role": "item", "extent": [5076, 5082], "body": [{"type": "para", "indent": 4, "text": ["Most dynamics nodes have local variables with the same names as the\n    node\u2019s parameters. For example, in a ", {"scheme": "Node", "value": "/nodes/dop/position", "type": "link", "text": ["Position DOP"], "fullpath": "/nodes/dop/position.html"}, ",\n    you could write the expression:"], "extent": [5082, 5270]}, {"lang": null, "type": "pre", "indent": 4, "text": ["\n    $tx + 0.1\n    "], "extent": [5270, 5300]}, {"type": "para", "indent": 4, "text": ["\u2026to make the object move 0.1 units along the X axis at each timestep."], "extent": [5300, 5380]}], "container": true}], "container": true, "role": "item_group"}], "text": "Locals"}, {"level": 1, "id": "related", "container": true, "type": "related_section", "indent": 0, "role": "section", "extent": [13453, 13462], "body": [{"type": "bullet_group", "body": [{"blevel": 6, "type": "bullet", "indent": 4, "text": [{"scheme": "Node", "value": "/nodes/dop/popobject", "type": "link", "text": "", "fullpath": "/nodes/dop/popobject.html"}], "extent": [13462, 13490]}], "container": true}], "text": "Related"}], "title": ["POP Solver"], "included": ["/nodes/dop/standard_data_inputs", "/nodes/dop/standard_data_locals", "/nodes/dop/standard_data_outputs", "/nodes/dop/standard_datagroup_parms", "/nodes/dop/standard_dataname_parms", "/nodes/dop/standard_dataop_parms", "/nodes/dop/standard_locals", "/nodes/dop/standard_solver_mutualparms", "/nodes/dop/standard_solver_parms"]}