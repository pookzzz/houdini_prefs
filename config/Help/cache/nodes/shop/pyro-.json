{"type": "root", "attrs": {"type": "node", "context": "material", "internal": "pyro", "index": "no", "since": "10.0", "version": "", "namespace": null}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["Pyro"], "extent": [0, 9]}, {"type": "summary", "indent": 0, "text": ["Flexible, production-quality fire and smoke shader."], "extent": [82, 141]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Overview"], "extent": [141, 156], "body": [{"type": "para", "indent": 0, "text": ["The Pyro material\u2019s interface may appear intimidating at first. However, it\u2019s actually quite straightforward once you grasp how it\u2019s organized. There are three main optical components to the material: ", {"type": "em", "text": ["smoke"]}, ", ", {"type": "em", "text": ["fire"]}, ", and ", {"type": "em", "text": ["scattering"]}, ", corresponding to the first three tabs of the interface."], "extent": [156, 450]}, {"type": "para", "indent": 0, "text": ["Wherever the material allows you to specify a color, it is split into two complementary parameters: the ", {"type": "em", "text": ["chromaticity"]}, " of the color (its hue and saturation), and its ", {"type": "em", "text": ["brightness"]}, " (also known as value, luminance, or ", {"type": "em", "text": ["intensity"]}, "). More often than not, you will want to manipulate a color\u2019s luminance separately from its hue or saturation. Especially in the Pyro material, you will often be dealing with very bright or very dark values, where the standard RGB swatch stops giving meaningful feedback. However, if you prefer, you can still ignore the separate brightness control (by leaving it at 1) and use the RGB swatch to express both a color (hue and saturation) and its intensity."], "extent": [450, 1134]}, {"type": "para", "indent": 0, "text": ["In addition, in places where you can specify colors, the interface includes ", {"type": "q", "text": ["mod"]}, " parameters (the menus throughout the interface that default to ", {"type": "q", "text": ["No mods"]}, "). You can completely ignore these controls until you get a feel for the main parameters, as the Pyro material does not depend on them. See ", {"scheme": null, "value": "#usingmods", "type": "link", "text": ["modifiers"], "fullpath": "/nodes/shop/pyro-.html#usingmods", "fragment": "#usingmods"}, " for more information."], "extent": [1134, 1474]}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Choosing fields"], "extent": [2691, 2713], "body": [{"type": "para", "indent": 0, "text": ["The pop-up menus allowing you to choose fields contain several different types of fields:"], "extent": [2713, 2805]}, {"type": "bullet_group", "body": [{"blevel": 2, "type": "bullet", "indent": 0, "text": [{"type": "strong", "text": ["Standard fields"]}, ": A fixed list of fields that typically exist on the shaded object: ", {"type": "code", "text": ["density"]}, ", ", {"type": "code", "text": ["temperature"]}, ", ", {"type": "code", "text": ["heat"]}, ", ", {"type": "code", "text": ["burn"]}, ", and ", {"type": "code", "text": ["age"]}, "."], "extent": [2805, 2946]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"type": "strong", "text": ["Shader fields"]}, ": fields generated internally by the shader. The ", {"type": "code", "text": ["speed"]}, " field contains the magnitude of the vector-valued velocity field. The ", {"type": "code", "text": ["time"]}, " field simply contains the current time in seconds."], "extent": [2946, 3149]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"type": "strong", "text": ["Mod fields"]}, ": these correspond to the ", {"type": "code", "text": ["Field1"]}, ", ", {"type": "code", "text": ["Field2"]}, ", ", {"type": "code", "text": ["Noise1"]}, ", ", {"type": "code", "text": ["Noise2"]}, ", etc. sub-tabs on the ", {"type": "ui", "text": ["Modifiers"]}, " tab when they are activated. See ", {"scheme": null, "value": "#usingmods", "type": "link", "text": ["modifiers"], "fullpath": "/nodes/shop/pyro-.html#usingmods", "fragment": "#usingmods"}, " for more information. Use the ", {"type": "ui", "text": ["Label"]}, " parameter on the modifier to control how it appears in the menu."], "extent": [3149, 3426]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"type": "strong", "text": ["User fields"]}, ": these let you use other fields besides the standard names. First, in the geometry network, use a ", {"scheme": "Node", "value": "/nodes/sop/name", "type": "link", "text": ["Name surface node"], "fullpath": "/nodes/sop/name.html"}, " to rename the field to one of ", {"type": "code", "text": ["user1"]}, ", ", {"type": "code", "text": ["user2"]}, ", etc. Then in the material, enable the field in the ", {"type": "ui", "text": ["Settings / User fields"]}, " tab. Then you can choose the field in the pop-up menu."], "extent": [3426, 3756]}], "container": true}, {"type": "para", "indent": 0, "text": ["For example, you could assign the ", {"type": "code", "text": ["temperature"]}, " field to be the smoke field by setting ", {"type": "ui", "text": ["Density field"]}, " to ", {"type": "q", "text": ["temperature"]}, "."], "extent": [3756, 3880]}]}, {"level": 2, "id": "usingscatter", "container": true, "type": "h", "indent": 0, "text": ["Using scattering"], "extent": [3880, 3918], "body": [{"type": "para", "indent": 0, "text": ["The Pyro material can simulate scattering of light from the fire through smoke (to a rough, single scattering event approximation), that is, you can have the fire light up the smoke surrounding it. The material does this using ", {"type": "em", "text": ["point clouds"]}, "."], "extent": [3918, 4163]}, {"type": "para", "indent": 0, "text": ["Before rendering the final image, you need to have the Pyro material scatter points inside the smoke and fire volumes. The resulting point clouds are stored in two separate files for each frame, one for fire and one for smoke. Then, during shading, the Pryo material uses the point cloud files to simulate the emission of light from the fire field and the scattering of the light through the smoke field."], "extent": [4163, 4569]}, {"type": "para", "indent": 0, "text": ["The Pyro material uses the fire point cloud to fill the fire volume with point light sources, with the intensity and color of each light derived from the parameters on the Fire tab. When calculating illumination of the smoke from fire emission, the material will loop over some subset of these fire point lights and accumulate their contribution just as it does for external lights. The amount of illumination contributed by each one of the fire points is subject to the same attenuation factors as the external sources: distance, the smoke\u2019s own density, as well as any occluding objects embedded in the smoke. Each point in the smoke point cloud stores the resulting fire illumination. Then, while marching through the volume to shade it, the material will use a neighborhood of these precomputed fire illumination results, average them together, and use them in the final shading calculation."], "extent": [4569, 5466]}, {"type": "para", "indent": 0, "text": ["See ", {"scheme": null, "value": "#scatter", "type": "link", "text": ["the scattering parameter help"], "fullpath": "/nodes/shop/pyro-.html#scatter", "fragment": "#scatter"}, " for more information."], "extent": [5466, 5534]}, {"level": 3, "id": null, "container": true, "type": "h", "indent": 0, "text": ["How to generate scattering point clouds"], "extent": [5534, 5582], "body": [{"type": "para", "indent": 0, "text": ["The simplest way to generate point clouds is to render them from the Pyro material node\u2019s parameter interface. This lets you generate all point clouds for a frame or animation at once, and re-generate as needed."], "extent": [5582, 5796]}, {"type": "para", "indent": 0, "text": ["Advanced users may want to set up individual render output nodes to generate point clouds. This lets you generate point clouds for each frame before the final rendered image, and make Pyro shader point cloud generation part of a render dependency graph."], "extent": [5796, 6051]}, {"type": "para", "indent": 0, "text": ["In general, the ", {"type": "ui", "text": ["Volume Step Size"]}, " used for generating the Pyro material\u2019s point clouds can be a lot coarser that the step size for the final image. As a rough starting guideline, start with a step size around ten times coarser than the final render\u2019s volume step size. For example, if the final render requires a ", {"type": "ui", "text": ["Volume Step Size"]}, " of ", {"type": "code", "text": ["0.01"]}, ", then you can set the step size for the scattering point clouds at ", {"type": "code", "text": ["0.1"]}, " as a starting point, and refine based on look."], "extent": [6051, 6519]}, {"type": "para", "indent": 0, "text": ["Depending on the relative smoke and fire content of the effect, you may want to generate the smoke point cloud with a different density than the fire point cloud (usually for efficiency, since a sparse cloud is faster to compute than a dense cloud). The instructions below include how to do this for the two methods of generating point clouds."], "extent": [6519, 6864]}, {"type": "tip_group", "body": [{"type": "tip", "indent": 0, "role": "item", "extent": [6864, 6869], "body": [{"type": "para", "indent": 4, "text": ["The scattered illumination (and attenuation) is based on the smoke density and fire intensity when the point clouds were saved. If you change any parameters that affect the ", {"type": "em", "text": ["smoke density"]}, " or ", {"type": "em", "text": ["fire color or intensity"]}, ", you must regenerate the point clouds. Changes that affect smoke color, shadow, or phase do not require regenerating the point clouds."], "extent": [6869, 7227]}], "container": true}, {"type": "tip", "indent": 0, "role": "item", "extent": [7227, 7232], "body": [{"type": "para", "indent": 4, "text": ["Point cloud files (extension ", {"type": "code", "text": [".pc"]}, ") are really geometry files (like ", {"type": "code", "text": [".bgeo"]}, " or ", {"type": "code", "text": [".geo"]}, " files). So, if you and want to visualize the point clouds, you can load the files into a Houdini using the ", {"scheme": "Node", "value": "/nodes/sop/file", "type": "link", "text": ["File surface node"], "fullpath": "/nodes/sop/file.html"}, "."], "extent": [7232, 7465]}], "container": true}], "container": true, "role": "item_group"}, {"type": "task_group", "body": [{"ext": null, "type": "task", "indent": 0, "text": ["Set the filenames for point cloud files"], "role": "item", "extent": [7465, 7512], "body": [{"type": "ord_group", "body": [{"blevel": 6, "type": "ord", "indent": 4, "text": ["In the Pyro material\u2019s parameters, click the ", {"type": "ui", "text": ["Scattering"]}, " tab, then click then ", {"type": "ui", "text": ["Point cloud files"]}, " sub-tab."], "extent": [7512, 7639]}, {"blevel": 6, "type": "ord", "indent": 4, "text": ["Set the ", {"type": "ui", "text": ["Smoke PC file"]}, " and ", {"type": "ui", "text": ["Fire PC file"]}, " parameters. Remember to ", {"scheme": null, "value": "/render/expressions", "type": "link", "text": ["include the frame number"], "fullpath": "/render/expressions.html"}, " (e.g. ", {"type": "code", "text": ["$F4"]}, ") in the filename if you are doing animation."], "extent": [7639, 7821]}], "container": true}], "container": true}, {"ext": null, "type": "task", "indent": 0, "text": ["Generate point clouds from the Pyro material node"], "role": "item", "extent": [7821, 7878], "body": [{"type": "ord_group", "body": [{"blevel": 6, "type": "ord", "indent": 4, "text": ["In the Pyro material\u2019s parameters, click the ", {"type": "ui", "text": ["Scattering"]}, " tab, then click then ", {"type": "ui", "text": ["Generate point clouds"]}, " sub-tab."], "extent": [7878, 8009]}, {"blevel": 6, "type": "ord", "indent": 4, "text": ["If you want the same step size for fire and smoke, set the ", {"type": "ui", "text": ["Smoke step size"]}, " and then set ", {"type": "ui", "text": ["Generate mode"]}, " to ", {"type": "q", "text": ["Use smoke step for both"]}, ". If you want separate step sizes for smoke and fire, set ", {"type": "ui", "text": ["Smoke step size"]}, " and ", {"type": "ui", "text": ["Fire step size"]}, ", then set ", {"type": "ui", "text": ["Generate mode"]}, " to ", {"type": "q", "text": ["Use individual steps"]}, ". See the ", {"scheme": null, "value": "#scatter", "type": "link", "text": ["parameter help"], "fullpath": "/nodes/shop/pyro-.html#scatter", "fragment": "#scatter"}, " for more information."], "extent": [8009, 8374]}, {"blevel": 6, "type": "ord", "indent": 4, "text": ["If you are generating point clouds for animation, Turn on ", {"type": "ui", "text": ["Frame range"]}, " and set the start and end frame."], "extent": [8374, 8496]}, {"blevel": 6, "type": "ord", "indent": 4, "text": ["Click ", {"type": "ui", "text": ["Generate"]}, "."], "extent": [8496, 8531]}], "container": true}], "container": true}, {"ext": null, "type": "task", "indent": 0, "text": ["Generate point clouds as part of a render network (advanced)"], "role": "item", "extent": [8531, 8599], "body": [{"type": "para", "indent": 4, "text": ["The trick is to create separate render nodes for generating point clouds, where each render node uses a take in which the Pyro shader\u2019s ", {"type": "ui", "text": ["Shading mode"]}, " is set to a different value."], "extent": [8599, 8790]}, {"type": "ord_group", "body": [{"blevel": 6, "type": "ord", "indent": 4, "text": ["Create render nodes for writing out the point clouds."], "extent": [8790, 8859], "body": [{"type": "bullet_group", "body": [{"blevel": 10, "type": "bullet", "indent": 8, "text": ["If you want the same step size for fire and smoke point clouds, create a single render node for writing out point clouds."], "extent": [8859, 9004]}, {"blevel": 10, "type": "bullet", "indent": 8, "text": ["If you want separate step sizes for smoke and fire, create two render nodes and set their ", {"type": "ui", "text": ["Volume step size"]}, " to different values for generating fire and smoke point clouds."], "extent": [9004, 9202]}, {"blevel": 10, "type": "bullet", "indent": 8, "text": ["Set the ", {"type": "ui", "text": ["Properties / Render / Rendering engine"]}, " parameter to either ", {"type": "q", "text": ["Micropolygon Rendering"]}, " or ", {"type": "q", "text": ["Micropolygon Physically Based Rendering"]}, ". Micropolygon renders will generate different point clouds than raytracing, and Pyro can compute scattering much more efficiently with the type of clouds generated by the micropolygon engines."], "extent": [9202, 9559]}, {"blevel": 10, "type": "bullet", "indent": 8, "text": ["Rename the render nodes to indicate the type(s) of point clouds they generate."], "extent": [9559, 9657]}], "container": true}, {"type": "tip_group", "body": [{"type": "tip", "indent": 8, "role": "item", "extent": [9657, 9670], "body": [{"type": "para", "indent": 12, "text": ["You can create three mantra nodes (for writing out the smoke cloud, fire cloud, or both) from the Pyro material\u2019s parameter interface. Go to the ", {"type": "ui", "text": ["Scattering / Generate point clouds"]}, " sub-tab. Set ", {"type": "ui", "text": ["Generate mode"]}, " to ", {"type": "q", "text": ["Create ROPs only"]}, " and click ", {"type": "ui", "text": ["Generate"]}, ". This will create three render output nodes in ", {"type": "code", "text": ["/out"]}, ". This is useful when you want to control some aspect of the render nodes beyond what the Pyro interface exposes, but duplicate the exact settings the Pyro material uses otherwise."], "extent": [9670, 10193]}], "container": true}], "container": true, "role": "item_group"}, {"type": "warning_group", "body": [{"type": "warning", "indent": 8, "role": "item", "extent": [10193, 10210], "body": [{"type": "para", "indent": 12, "text": ["Because the point clouds are rendered from the point of view of the camera selected in the render node, it is important that the ", {"type": "em", "text": ["entire volume be visible"]}, " from that camera. If the frustum of the main render camera clips any part of the visible smoke/fire, then no points will be generated for that portion of the effect and you may get shading artifacts, such as dark shadows suddenly popping in and out of the scattered emission."], "extent": [10210, 10671]}, {"type": "para", "indent": 12, "text": ["You may need to create a separate camera for the point cloud render node(s). The point of view of the point cloud camera should be as close as possible to the final render camera\u2019s, but with the entire effect (smoke and fire volumes) visible. The point cloud camera need not match the optical settings of the main render camera. Things like resolution, focal length, aperture, and so on, can all be different."], "extent": [10671, 11110]}], "container": true}], "container": true, "role": "item_group"}], "container": true}, {"blevel": 6, "type": "ord", "indent": 4, "text": ["Set up separate ", {"scheme": null, "value": "/basics/takes", "type": "link", "text": ["takes"], "fullpath": "/basics/takes.html"}, " where the Pyro shader node has ", {"type": "ui", "text": ["Shading mode"]}, " on the ", {"type": "ui", "text": ["Settings"]}, " tab set to different values:"], "extent": [11110, 11260], "body": [{"type": "bullet_group", "body": [{"blevel": 10, "type": "bullet", "indent": 8, "text": ["Create a take for the final image in which ", {"type": "ui", "text": ["Shading mode"]}, " is set to ", {"type": "q", "text": ["Normal shading"]}, "."], "extent": [11260, 11371]}, {"blevel": 10, "type": "bullet", "indent": 8, "text": ["If you want the same step size for fire and smoke point clouds, create another take in which ", {"type": "ui", "text": ["Shading mode"]}, " is set to ", {"type": "q", "text": ["Write all point clouds"]}, "."], "extent": [11371, 11540]}, {"blevel": 10, "type": "bullet", "indent": 8, "text": ["If you want separate step sizes for smoke and fire, create two more takes: one in which the ", {"type": "ui", "text": ["Shading mode"]}, " is ", {"type": "q", "text": ["Write smoke point cloud"]}, " and another in which ", {"type": "ui", "text": ["Shading mode"]}, " is ", {"type": "q", "text": ["Write fire point cloud"]}, "."], "extent": [11540, 11764]}], "container": true}, {"type": "para", "indent": 8, "text": ["Rename the takes to indicate which ", {"type": "ui", "text": ["Shading mode"]}, " setting they contain."], "extent": [11764, 11859]}], "container": true}, {"blevel": 6, "type": "ord", "indent": 4, "text": ["For each of the point render nodes you created, change its ", {"type": "ui", "text": ["Render with take"]}, " parameter to one of the takes containing different ", {"type": "ui", "text": ["Shading mode"]}, " settings."], "extent": [11859, 12032]}], "container": true}, {"type": "para", "indent": 4, "text": ["Once you have the render nodes set up, you can use the ", {"type": "ui", "text": ["Render"]}, " button on each node to re-generate point clouds, or wire them into a ", {"scheme": null, "value": "/render/batch", "type": "link", "text": ["render dependency network"], "fullpath": "/render/batch.html"}, " to make generating point clouds part of a pipeline."], "extent": [12032, 12266]}], "container": true}], "container": true, "role": "item_group"}]}]}, {"level": 2, "id": "usingmods", "container": true, "type": "h", "indent": 0, "text": ["Using modifier fields"], "extent": [12266, 12306], "body": [{"type": "tip_group", "body": [{"type": "tip", "indent": 0, "role": "item", "extent": [12306, 12312], "body": [{"type": "para", "indent": 4, "text": ["You can ignore the modifiers and the material will still work perfectly and be very useful. However, the modifiers are available when you need additional flexibility."], "extent": [12312, 12484]}], "container": true}], "container": true, "role": "item_group"}, {"type": "para", "indent": 0, "text": ["See also the ", {"scheme": null, "value": "#modifiers", "type": "link", "text": ["modifier parameter help"], "fullpath": "/nodes/shop/pyro-.html#modifiers", "fragment": "#modifiers"}, "."], "extent": [12484, 12536]}, {"level": 3, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Modifier overview"], "extent": [12536, 12562], "body": [{"type": "para", "indent": 0, "text": ["The material\u2019s main parameters let you shading existing volume fields, but often those fields are not shaped exactly right to shade them as you want. You don\u2019t want to have to recalculate an entire simulation just to adjust some field slightly, or generate a new field which is just a simple transformation of an existing field. ", {"type": "em", "text": ["Modifiers"]}, " let you do useful field manipulations at shading time:"], "extent": [12562, 12960]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 0, "text": ["Field Shaping"], "extent": [12960, 12975], "body": [{"type": "bullet_group", "body": [{"blevel": 6, "type": "bullet", "indent": 4, "text": ["The falloff at the edge of a field (its contour) my be too soft and requires sharpening, or it\u2019s too sharp and needs to be softened. This kind of ", {"type": "q", "text": ["softening"]}, " can also be the result of natural diffusion within the simulation and the correction may need to be applied gradually over time."], "extent": [12975, 13273]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": ["The field\u2019s range may drift too much throughout the simulation, or it may simply be too large or too small to work with comfortably in the context of shading. For example, a field which we want to use as a ramp lookup may have a sim-generated range which is much smaller (or much larger) than what you can comfortably work with using the ramp interface. Such fields need to be remapped to a different range."], "extent": [13273, 13688]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": ["A field (", {"type": "code", "text": ["temperature"]}, " for example) may be unbounded and need to be clamped before you can work with it."], "extent": [13688, 13800]}], "container": true}], "container": true}, {"type": "dt", "indent": 0, "text": ["High Frequency Detailing"], "extent": [13800, 13826], "body": [{"type": "para", "indent": 4, "text": ["Increasing the volume resolution of a simulation is not always practical because of slower processing speed. In the context of smoke and fire, small-scale detailing usually means the addition of layers of noise. The material can add high resolution noise at shading time for a fraction of the cost of actually simulating it. The catch is you don\u2019t know beforehand where this noise-based detailing may be needed. As a result, the shader-based noise needs to be assignable to not only the incoming fields themselves (to assist with shaping), but also to the main parameters"], "extent": [13826, 14403]}], "container": true}, {"type": "dt", "indent": 0, "text": ["Field-Driven Parameterization"], "extent": [14403, 14434], "body": [{"type": "bullet_group", "body": [{"blevel": 6, "type": "bullet", "indent": 4, "text": ["For example, you want the smoke to look darker when it\u2019s close to the flames, but lighter as it ", {"type": "q", "text": ["cools off"]}, ", so you need to drive the smoke\u2019s ", {"type": "ui", "text": ["Brightness"]}, " parameter based on some transformation of the ", {"type": "code", "text": ["temperature"]}, " field."], "extent": [14434, 14665]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": ["It\u2019s now a magical smoke which needs to be smooth when moving fast, but have lots of noise detail when drifting normally or moving very little. So now you need to drive one (or possibly several) parameters of the noise based on several similar (but not identical) variations on the smoke\u2019s speed. Wanting the incoming fields (or variations of them) and/or the shader-generated noises to drive the material\u2019s main parameters is very common in production."], "extent": [14665, 15126]}], "container": true}], "container": true}], "container": true}, {"type": "para", "indent": 0, "text": ["To support this wide variety of field modifications and noise generation, Pyro provides a bank of ", {"type": "q", "text": ["Modifiers"]}, ". There are six field modifiers which can be used to shape or remap incoming fields, and four noise generators which can also optionally be driven by either the incoming fields or one of the six field modifiers. Any one of these modifiers, once activated, will be available to drive any one (or several) of the principal parameters which supports modification (any parameter which is accompanied by a ", {"type": "q", "text": ["Mod"]}, " pop-up menu)."], "extent": [15126, 15657]}]}, {"level": 3, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Modifier organization"], "extent": [15657, 15687], "body": [{"type": "bullet_group", "body": [{"blevel": 2, "type": "bullet", "indent": 0, "text": ["The Pyro material only works with scalar (single floating point number) fields."], "extent": [15687, 15771]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": ["Field modifiers operate on simulation fields. Their output is yet another scalar field which represents a modified version of the base field."], "extent": [15771, 15916]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": ["Noise generators do not necessarily depend on any field, though they can optionally be constrained to exist within a field (either a simulation field or the output of one of the field modifiers). You can assign their output to any mod-able parameter, except the (very few) parameters which strictly expect a field (such as the ", {"type": "ui", "text": ["Density Field"]}, " parameter on the ", {"type": "ui", "text": ["Smoke"]}, " tab)."], "extent": [15916, 16297]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": ["Field modifiers and noise generators normally produce scalar output. However, you can use the scalar output as to look up a value in a color/vector ramp to produce vector/color output from a modifier. Currently there are only a few mod-able vector parameters, all colors (such as the ", {"type": "ui", "text": ["Smoke Color"]}, " parameter)."], "extent": [16297, 16612]}], "container": true}, {"type": "para", "indent": 0, "text": ["<w:link href=", {"type": "q", "text": ["/images/pyro/modgraphic.png"]}, ">\n<w:img href=", {"type": "q", "text": ["/images/pyro/modgraphic_small.png"]}, " />\n</w:link>"], "extent": [16612, 16718]}]}, {"level": 3, "id": null, "container": true, "type": "h", "indent": 0, "text": ["How to set up modifiers"], "extent": [16718, 16750], "body": [{"type": "para", "indent": 0, "text": ["The Pyro material has two kinds of modifiers: field modifiers and noise modifiers. ", {"type": "em", "text": ["Field modifiers"]}, " let you modify the values of a field from the sim before you use them in the shader. ", {"type": "em", "text": ["Noise modifiers"]}, " let you add noise to a field or all fields before you use it/them in the shader."], "extent": [16750, 17037]}, {"type": "task_group", "body": [{"ext": null, "type": "task", "indent": 0, "text": ["Modify the smoke and fire fields"], "role": "item", "extent": [17037, 17077], "body": [{"type": "ord_group", "body": [{"blevel": 6, "type": "ord", "indent": 4, "text": ["By default, the source fields on the ", {"type": "ui", "text": ["Smoke"]}, " and ", {"type": "ui", "text": ["Fire"]}, " tabs are set to use fields from the simulation named ", {"type": "code", "text": ["density"]}, " and ", {"type": "code", "text": ["temperature"]}, " directly."], "extent": [17077, 17243], "body": [{"type": "para", "indent": 8, "text": [{"scheme": "Image", "value": "/images/dynamics/pyro_mod_fields1.png", "type": "img", "text": ""}], "extent": [17243, 17310]}], "container": true}, {"blevel": 6, "type": "ord", "indent": 4, "text": ["Click the ", {"type": "ui", "text": ["Modifiers"]}, " tab, then click one of the ", {"type": "ui", "text": ["Field"]}, " sub-tabs. Turn on ", {"type": "ui", "text": ["Active field modifier"]}, " and give the modifier a descriptive name in the ", {"type": "ui", "text": ["Label"]}, " text box."], "extent": [17310, 17498], "body": [{"type": "para", "indent": 8, "text": [{"scheme": "Image", "value": "/images/dynamics/pyro_mod_fields2.png", "type": "img", "text": ""}], "extent": [17498, 17561]}], "container": true}, {"blevel": 6, "type": "ord", "indent": 4, "text": ["Set the ", {"type": "ui", "text": ["Base field"]}, " to the field you want to modify, such as ", {"type": "code", "text": ["density"]}, " for smoke."], "extent": [17561, 17661]}, {"blevel": 6, "type": "ord", "indent": 4, "text": ["Use the controls on the ", {"type": "ui", "text": ["Field"]}, " sub-tab to modify the incoming field. For example, you can use ", {"type": "ui", "text": ["Range mapping"]}, " and/or the ", {"type": "ui", "text": ["Interpolation"]}, " ramp to remap the source smoke density."], "extent": [17661, 17860]}, {"blevel": 6, "type": "ord", "indent": 4, "text": ["Go back to the ", {"type": "ui", "text": ["Smoke"]}, " or ", {"type": "ui", "text": ["Fire"]}, " tab and change the source field to use the modifier field instead of the actual source field."], "extent": [17860, 18006], "body": [{"type": "para", "indent": 8, "text": [{"scheme": "Image", "value": "/images/dynamics/pyro_mod_fields3.png", "type": "img", "text": ""}], "extent": [18006, 18073]}], "container": true}], "container": true}, {"type": "tip_group", "body": [{"type": "tip", "indent": 4, "role": "item", "extent": [18073, 18082], "body": [{"type": "para", "indent": 8, "text": ["Instead of using actual fields (such as ", {"type": "code", "text": ["density"]}, " and ", {"type": "code", "text": ["temperature"]}, ") for your smoke and fire fields, assign those fields to modifier fields and use the modifier fields instead."], "extent": [18082, 18268]}, {"type": "para", "indent": 8, "text": ["Usually when your sim values come into the material, the raw flame is a bit high, not high enough, or doesn\u2019t have the right weight. By remapping the incoming range you can specify at what density the flame starts appearing and how it is distributed into the 0-1 range. Using the ramp you can then redistribute the intensity. This is very useful for both fire and smoke."], "extent": [18268, 18656]}], "container": true}], "container": true, "role": "item_group"}], "container": true}, {"ext": null, "type": "task", "indent": 0, "text": ["Modify a value using a field"], "role": "item", "extent": [18656, 18692], "body": [{"type": "para", "indent": 4, "text": ["Most parameters in the material have a pop-up menu to let you choose a modifier field as a multiplier for the parameter\u2019s value."], "extent": [18692, 18834]}, {"type": "para", "indent": 4, "text": ["For example, you can use the ", {"type": "ui", "text": ["Density amplitude"]}, " parameter on the ", {"type": "ui", "text": ["Smoke"]}, " field with a modifier to remap smoke density. Set it to a high number (e.g. ", {"type": "code", "text": ["10"]}, "), then use the modifier field\u2019s ramp to control the amplitude."], "extent": [18834, 19061]}, {"type": "para", "indent": 4, "text": [{"scheme": "Image", "value": "/images/dynamics/pyro_smoke_amplitude.png", "type": "img", "text": ""}], "extent": [19061, 19124]}], "container": true}, {"ext": null, "type": "task", "indent": 0, "text": ["Have fire light up the surrounding smoke"], "role": "item", "extent": [19124, 19172], "body": [{"type": "para", "indent": 4, "text": ["See the ", {"scheme": null, "value": "#scatter", "type": "link", "text": ["Scattering parameters"], "fullpath": "/nodes/shop/pyro-.html#scatter", "fragment": "#scatter"}, "."], "extent": [19172, 19219]}], "container": true}], "container": true, "role": "item_group"}]}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Important parameters"], "extent": [19219, 19246], "body": [{"type": "para", "indent": 0, "text": ["Important smoke parameters:"], "extent": [19246, 19276]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 0, "text": ["Density amplitude"], "extent": [19276, 19295], "body": [{"type": "para", "indent": 4, "text": ["Very important to achieve both wispy or billowy smoke."], "extent": [19295, 19354]}], "container": true}, {"type": "dt", "indent": 0, "text": ["Smoke brightness"], "extent": [19354, 19372], "body": [{"type": "para", "indent": 4, "text": ["Drastically changes brightness/exposure."], "extent": [19372, 19417]}], "container": true}, {"type": "dt", "indent": 0, "text": ["Shadow density"], "extent": [19417, 19433], "body": [{"type": "para", "indent": 4, "text": ["Very important to get a lighter smoke without blowing out the brightness.  Less contrasty smoke."], "extent": [19433, 19534]}], "container": true}, {"type": "dt", "indent": 0, "text": ["Scattering Phase"], "extent": [19534, 19552], "body": [{"type": "para", "indent": 4, "text": ["Controls how deep light penetrates into the smoke.  Small changes to this make a big difference."], "extent": [19552, 19654]}], "container": true}], "container": true}, {"type": "para", "indent": 0, "text": ["Important fire parameters:"], "extent": [19654, 19682]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 0, "text": ["Fire Intensity"], "extent": [19682, 19698], "body": [{"type": "para", "indent": 4, "text": ["Especially important when scattering."], "extent": [19698, 19740]}], "container": true}, {"type": "dt", "indent": 0, "text": ["Noise Modifiers"], "extent": [19740, 19757], "body": [{"type": "para", "indent": 4, "text": ["Try adding a noise modifier with the default settings: tons of noise."], "extent": [19757, 19831]}], "container": true}, {"type": "dt", "indent": 0, "text": ["Temperature"], "extent": [19831, 19844], "body": [{"type": "para", "indent": 4, "text": ["Increasing this will create a hotter, whiter flame."], "extent": [19844, 19900]}], "container": true}, {"type": "dt", "indent": 0, "text": ["Red Boost"], "extent": [19900, 19911], "body": [{"type": "para", "indent": 4, "text": ["Increasing this will create a hotter whiter flame, without affecting the temperature values."], "extent": [19911, 20013]}], "container": true}], "container": true}, {"type": "para", "indent": 0, "text": ["Important scattering parameters:"], "extent": [20013, 20047]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 0, "text": ["Fire Intensity"], "extent": [20047, 20063], "body": [{"type": "para", "indent": 4, "text": ["A high fire intensity will really increase the amount of light emitted."], "extent": [20063, 20139]}], "container": true}, {"type": "dt", "indent": 0, "text": ["Distance Attenuation"], "extent": [20139, 20161], "body": [{"type": "para", "indent": 4, "text": ["How far the light penetrates the point cloud."], "extent": [20161, 20211]}], "container": true}, {"type": "dt", "indent": 0, "text": ["Density Attenuation"], "extent": [20211, 20232], "body": [{"type": "para", "indent": 4, "text": ["How much the light penetrates the point cloud through dense areas."], "extent": [20232, 20304]}], "container": true}], "container": true}]}, {"level": 2, "id": "ampvsstep", "container": true, "type": "h", "indent": 0, "text": ["Density amplitude and volume step size"], "extent": [20304, 20361], "body": [{"type": "para", "indent": 0, "text": ["Fields generated by a simulation rarely have values as high as ", {"type": "code", "text": ["1"]}, " inside a voxel. The Pyro shader\u2019s default density scaling of 500 was chosen to push the typically low-valued simulation densities toward a very dense, sooty smoke by default."], "extent": [20361, 20605]}, {"type": "para", "indent": 0, "text": ["This default is too high for if you begin with a very dense field. The result can be a very noisy image. The problem is the field is so dense that it\u2019s becoming solid, and the boundary between the ", {"type": "q", "text": ["air"]}, " that surrounds a solid and its surface is infinitesimally small: there\u2019s nothing for a long time and then, suddenly, there is a surface. For the renderer to catch this sudden transition from ", {"type": "q", "text": ["nothing"]}, " to ", {"type": "q", "text": ["something"]}, ", it needs to take very small steps, otherwise it might overshoot the surface boundary and miss it by a small amount."], "extent": [20605, 21142]}, {"type": "para", "indent": 0, "text": ["As mantra takes relatively large steps through space scanning for ", {"type": "q", "text": ["density"]}, ", it overshoots the boundary by differing amounts each time and determines that the boundary happened slightly earlier or later in each case. Therefore, some of these approximated boundary positions end up receiving shadows and some don\u2019t, resulting in an noisy image."], "extent": [21142, 21487]}, {"type": "para", "indent": 0, "text": ["You can try several solutions to this problem, each with a different impact on render times and visual quality:"], "extent": [21487, 21600]}, {"type": "ord_group", "body": [{"blevel": 2, "type": "ord", "indent": 0, "text": ["Remove shadows from the light. This gets rid of the problem, but is not very useful since you usually want shadows in your smoke."], "extent": [21600, 21733]}, {"blevel": 2, "type": "ord", "indent": 0, "text": ["Lower the Pyro material\u2019s ", {"type": "ui", "text": ["Density amplitude"]}, " until it becomes ", {"type": "q", "text": ["soft"]}, " enough that the current ", {"type": "ui", "text": ["Volume Step Size"]}, " setting in the mantra node has no problem catching it."], "extent": [21733, 21908]}, {"blevel": 2, "type": "ord", "indent": 0, "text": ["Decrease the ", {"type": "ui", "text": ["Volume Step Size"]}, " setting in the mantra node until it is fine enough to catch our (unusually solid) boundary."], "extent": [21908, 22037]}], "container": true}, {"type": "para", "indent": 0, "text": ["The most common solution is a combination of choices #2 and #3: lower the density as you shorten the step until you find a place that is acceptable in terms of render time and image quality."], "extent": [22037, 22229]}]}, {"level": 1, "id": "parameters", "container": true, "type": "parameters_section", "indent": 0, "role": "section", "extent": [22229, 22241], "body": [{"level": 2, "id": "smoke", "container": true, "type": "h", "indent": 0, "text": ["Smoke"], "extent": [22241, 22262], "body": [{"type": "para", "indent": 0, "text": ["See ", {"scheme": null, "value": "#usingmods", "type": "link", "text": ["how to use modifiers"], "fullpath": "/nodes/shop/pyro-.html#usingmods", "fragment": "#usingmods"}, " for information about the ", {"type": "q", "text": ["mod"]}, " parameters. See ", {"scheme": null, "value": "#colorcorrect", "type": "link", "text": ["color correction"], "fullpath": "/nodes/shop/pyro-.html#colorcorrect", "fragment": "#colorcorrect"}, " for information about the color correction parameters."], "extent": [22262, 22438]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Enable smoke visibility"], "extent": [22438, 22463], "body": [{"type": "para", "indent": 4, "text": ["Turns the ", {"type": "em", "text": ["visibility"]}, " of smoke on or off. Note that this does ", {"type": "em", "text": ["not"]}, " control whether the smoke calculations occur, just whether to display their output. This is useful for hiding smoke you can see other things, such as fire, more clearly."], "extent": [22463, 22707]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Density field"], "extent": [22707, 22722], "body": [{"type": "para", "indent": 4, "text": ["The name of the field that represents the smoke density. All volume/fluid simulations will generate at lease one field named ", {"type": "code", "text": ["density"]}, ", and for pyrotechnic effects, you can usually use this to represent smoke or some byproduct of combustion."], "extent": [22722, 22973]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Density amplitude"], "extent": [22973, 22992], "body": [{"type": "para", "indent": 4, "text": ["A scaling factor for the density values in the field. Smoke fields generated by a simulation rarely have values as high as ", {"type": "code", "text": ["1"]}, " inside a voxel. The Pyro material\u2019s default density scale of ", {"type": "code", "text": ["500"]}, " is designed to push typically low simulation densities toward a very dense, sooty smoke."], "extent": [22992, 23284]}, {"type": "para", "indent": 4, "text": ["The default value may be too high if you already begin with a dense field. The result will sometimes be a very noisy image."], "extent": [23284, 23417]}, {"type": "para", "indent": 4, "text": ["(image)"], "extent": [23417, 23434]}, {"type": "para", "indent": 4, "text": ["See ", {"scheme": null, "value": "#ampvsstep", "type": "link", "text": ["density amplitude and volume step size"], "fullpath": "/nodes/shop/pyro-.html#ampvsstep", "fragment": "#ampvsstep"}, " above for more information."], "extent": [23434, 23523]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Use point color (tint with Cd)"], "extent": [23523, 23555], "body": [{"type": "para", "indent": 4, "text": ["When this option is on, the material will use the ", {"type": "code", "text": ["Cd"]}, " (diffuse color) attribute on the volume to tint the color you set in the ", {"type": "ui", "text": ["Smoke color"]}, " parameter. When this option is off, the material ignores the volume\u2019s color and only uses the ", {"type": "ui", "text": ["Smoke color"]}, " parameter."], "extent": [23555, 23829]}, {"type": "para", "indent": 4, "text": ["(Technically, it\u2019s a ", {"type": "q", "text": ["primitive"]}, " color, not a point color, since volumes are primitives and don\u2019t have points, but surface shaders use ", {"type": "q", "text": ["point color"]}, ", so the Pyro material uses it for the sake of familiarity.)"], "extent": [23829, 24043]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Smoke color"], "extent": [24043, 24056], "body": [{"type": "para", "indent": 4, "text": ["Modifies the reflectance color of the smoke. Note that if ", {"type": "ui", "text": ["Use point color (tint with Cd)"]}, " is on, this color will be tinted by the color of the volume geometry."], "extent": [24056, 24228]}, {"type": "para", "indent": 4, "text": ["You can use the separate ", {"type": "ui", "text": ["Smoke brightness"]}, " parameter to control the brightness. This is often more useful, since you will be dealing with very bright or very dark values, where the standard RGB swatch stops giving meaningful feedback. However, if you prefer, you can still ignore the separate brightness control (by leaving it at 1) and use the RGB swatch to express both a color (hue and saturation) and its intensity."], "extent": [24228, 24660]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Smoke brightness"], "extent": [24660, 24678], "body": [{"type": "para", "indent": 4, "text": ["Modifies the brightness of the smoke."], "extent": [24678, 24721]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Shadow color"], "extent": [24721, 24735], "body": [{"type": "para", "indent": 4, "text": ["Modifies the color of shadows in the smoke."], "extent": [24735, 24788]}, {"type": "para", "indent": 4, "text": ["You can use the separate ", {"type": "ui", "text": ["Shadow density"]}, " parameter to control the shadow intensity. This is often more useful, since you will be dealing with very bright or very dark values, where the standard RGB swatch stops giving meaningful feedback. However, if you prefer, you can still ignore the separate shadow density control (by leaving it at 1) and use the RGB swatch to express both a color (hue and saturation) and its intensity."], "extent": [24788, 25224]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Shadow density"], "extent": [25224, 25240], "body": [{"type": "para", "indent": 4, "text": ["Modifies the intensity of smoke shadows. This is the complementary concept to ", {"type": "q", "text": ["brightness"]}, " or ", {"type": "q", "text": ["albedo"]}, " in the ", {"type": "ui", "text": ["Smoke brightness"]}, " parameter above."], "extent": [25240, 25393]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Scattering phase"], "extent": [25393, 25411], "body": [{"type": "note_group", "body": [{"type": "note", "indent": 4, "role": "item", "extent": [25411, 25421], "body": [{"type": "para", "indent": 8, "text": [{"type": "strong", "text": ["Scattering Phase is currently not supported for PBR rendering"]}, ". It is only available for raytracing and micropolygon rendering."], "extent": [25421, 25559]}], "container": true}], "container": true, "role": "item_group"}, {"type": "para", "indent": 4, "text": ["By default, the Pyro material assumes that light scatters evenly in all directions (isotropic scattering). In reality, depending on the type of particles suspended in the volume, the direction of light scattering may show a bias. It might, for example, scatter more often in the same direction as the incoming light (", {"type": "q", "text": ["forward scattering"]}, ") or in the opposite direction of the incoming light (", {"type": "q", "text": ["backward scattering"]}, " or ", {"type": "q", "text": ["retro-reflection"]}, ")."], "extent": [25559, 26005]}, {"type": "para", "indent": 4, "text": ["The Pyro material simulates this behavior (to a rough, single scattering event approximation). When ", {"type": "ui", "text": ["Scatter phase"]}, " is ", {"type": "code", "text": ["0"]}, ", it creates isotropic scattering. Positive values of ", {"type": "ui", "text": ["Scatter phase"]}, " (from just above ", {"type": "code", "text": ["0"]}, ", to ", {"type": "code", "text": ["1"]}, ") create increasing degrees of forward scattering. Negative values (from just below ", {"type": "code", "text": ["0"]}, ", to ", {"type": "code", "text": ["-1"]}, ") create increasing degrees of backward scattering."], "extent": [26005, 26386]}, {"type": "para", "indent": 4, "text": ["This parameter has three components to give you separate control over scattering of the Red, Green, and Blue channels. You could, for example, let the blue channel scatter slightly more forward than the red or green channels. If you choose to modify them separately, you should be aware that you're introducing direction-based coloring to the volume, meaning that the color of the smoke depends on both the viewing direction and the direction of the incoming illumination."], "extent": [26386, 26868]}, {"tag": "table", "attrs": {}, "type": "pxml", "indent": 4, "extent": [26868, 26880], "body": [{"tag": "tr", "attrs": {}, "type": "pxml", "indent": 8, "extent": [26880, 26893], "body": [{"tag": "td", "attrs": {}, "type": "pxml", "indent": 12, "text": [{"scheme": "Image", "value": "/images/pyro/n1t14_mantra.jpg", "type": "img", "text": ""}], "extent": [26893, 26947]}, {"tag": "td", "attrs": {}, "type": "pxml", "indent": 12, "extent": [26947, 26964], "body": [{"type": "para", "indent": 16, "text": ["Backlit side of a complex smoke cloud, isotropic scattering."], "extent": [26964, 27041]}], "container": true}], "container": true}, {"tag": "tr", "attrs": {}, "type": "pxml", "indent": 8, "extent": [27041, 27054], "body": [{"tag": "td", "attrs": {}, "type": "pxml", "indent": 12, "text": [{"scheme": "Image", "value": "/images/pyro/n1t15_mantra.jpg", "type": "img", "text": ""}], "extent": [27054, 27108]}, {"tag": "td", "attrs": {}, "type": "pxml", "indent": 12, "extent": [27108, 27125], "body": [{"type": "para", "indent": 16, "text": ["With 50% forward scattering, the light travels further into the cloud. This would be appropriate if, for example, the ", {"type": "q", "text": ["smoke"]}, " were composed of water vapor instead of ", {"type": "q", "text": ["sooty"]}, " carbon particles."], "extent": [27125, 27333]}], "container": true}], "container": true}, {"tag": "tr", "attrs": {}, "type": "pxml", "indent": 8, "extent": [27333, 27346], "body": [{"tag": "td", "attrs": {}, "type": "pxml", "indent": 12, "text": [{"scheme": "Image", "value": "/images/pyro/n1t16_mantra.jpg", "type": "img", "text": ""}], "extent": [27346, 27400]}, {"tag": "td", "attrs": {}, "type": "pxml", "indent": 12, "extent": [27400, 27417], "body": [{"type": "para", "indent": 16, "text": ["Here the blue channel scatters slightly more forward than the other two (RGB = 0.49, 0.5, 0.52), resulting in a subtly blue-tinted cloud (which on the lit side would appear slightly red/yellow)."], "extent": [27417, 27629]}], "container": true}], "container": true}], "container": true}], "container": true, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 2, "id": "fire", "container": true, "type": "h", "indent": 0, "text": ["Fire"], "extent": [27629, 27647], "body": [{"type": "para", "indent": 0, "text": ["See ", {"scheme": null, "value": "#usingmods", "type": "link", "text": ["how to use modifiers"], "fullpath": "/nodes/shop/pyro-.html#usingmods", "fragment": "#usingmods"}, " for information about the ", {"type": "q", "text": ["mod"]}, " parameters. See ", {"scheme": null, "value": "#colorcorrect", "type": "link", "text": ["color correction"], "fullpath": "/nodes/shop/pyro-.html#colorcorrect", "fragment": "#colorcorrect"}, " for information about the color correction parameters."], "extent": [27647, 27823]}, {"type": "para", "indent": 0, "text": ["Fire is shaded as a constant color as it is considered an emitter (or an illumination source). It is disabled by default because there\u2019s no established standard for the naming of fields which represent fire: It could be ", {"type": "q", "text": ["heat"]}, " or ", {"type": "q", "text": ["temperature"]}, " or ", {"type": "q", "text": ["burn"]}, " or some combination of all of these, or indeed, be a ", {"type": "q", "text": ["user"]}, " field. The default field is ", {"type": "q", "text": ["Bound: temperature"]}, "."], "extent": [27823, 28188]}, {"type": "para", "indent": 0, "text": ["Because it is an emitter, the majority of the fire tab\u2019s interface deals with how to map a field\u2019s value to a color and an intensity. A secondary aspect of shading fire has to do with perceived opacity."], "extent": [28188, 28392]}, {"type": "para", "indent": 0, "text": ["In the real world, fire is not opaque, and so its opacity should be set to zero. This is Pyro\u2019s default behavior: transparent fire. However, real fire may sometimes appear opaque due to its intense luminance (or, less often, because of matter suspended in the fire which has not yet combusted). If you choose to control its apparent opacity solely by its intensity, then you have to be prepared to deal with output images which contain a very large dynamic range. In addition, if you leave fire completely transparent and your fire volume is very deep (in relative units), you may find that the intensity levels accumulating over the depth of the volume are hard to control practically. These reasons combine to sometimes create a need for ", {"type": "q", "text": ["artistic"]}, " control over the perceived opacity of the fire. To this end, the Pyro material exposes some opacity controls you can use to assign an artistic (physically incorrect) opacity to the fire field."], "extent": [28392, 29337]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Enable fire visibility"], "extent": [29337, 29361], "body": [{"type": "para", "indent": 4, "text": ["Turns the ", {"type": "em", "text": ["visibility"]}, " of fire on or off. Note that this does ", {"type": "em", "text": ["not"]}, " control whether the fire calculations occur, just whether to display their output. This is useful for hiding fire you can see other things, such as smoke, more clearly."], "extent": [29361, 29603]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Temperature field"], "extent": [29603, 29622], "body": [{"type": "para", "indent": 4, "text": ["The name of the field to use for the fire\u2019s temperature."], "extent": [29622, 29684]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Fire intensity"], "extent": [29684, 29700], "body": [{"type": "para", "indent": 4, "text": ["Increases or decreases the brightness of the fire."], "extent": [29700, 29756]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Opacity field"], "extent": [29756, 29771], "body": [{"type": "para", "indent": 4, "text": ["The name of a field to use for the fire\u2019s opacity. The default ", {"type": "q", "text": ["No mods"]}, " gives a physically correct fire with no opacity."], "extent": [29771, 29902]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Opacity amplitude"], "extent": [29902, 29921], "body": [{"type": "para", "indent": 4, "text": ["A scaling factor for the value of the opacity field. The default ", {"type": "code", "text": ["0"]}, " gives a physically correct fire with no opacity. "], "extent": [29921, 30045]}, {"type": "tip_group", "body": [{"type": "tip", "indent": 4, "role": "item", "extent": [30045, 30054], "body": [{"type": "para", "indent": 8, "text": ["To create a thick density, increase this parameter dramatically such as 10000000000."], "extent": [30054, 30148]}], "container": true}], "container": true, "role": "item_group"}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Opacity blend rate"], "extent": [30148, 30168], "body": [{"type": "para", "indent": 4, "text": ["The Pyro material keeps an internal mask for the extent of the flames (the volume within which they are incandescent). This control allows you to \u201cfeather\u201d the fire opacity at the envelope boundaries of the flames."], "extent": [30168, 30392]}, {"type": "para", "indent": 4, "text": ["The blend rate has a nominal range of 0-1 and is a ", {"type": "em", "text": ["rate"]}, ", meaning that the higher the number, the faster the opacity will take effect at the border of the flames, and the lower the number, the more ", {"type": "q", "text": ["feathered"]}, " or gradual the opacity blend will be from the outside edge of the flame toward its interior."], "extent": [30392, 30701]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Color model"], "extent": [30701, 30714], "body": [{"type": "para", "indent": 4, "text": ["There are two approaches mapping the value of the temperature field to an output color: A ", {"type": "em", "text": ["physically-based"]}, " approach which assigns color (chromaticity) and intensity based on interpreting the field as a temperature distribution, and an ", {"type": "em", "text": ["artistic"]}, " approach which simply maps color and intensity directly from the underlying field values. The default is the physical model."], "extent": [30714, 31096]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Use point color (tint with Cd)"], "extent": [31096, 31128], "body": [{"type": "para", "indent": 4, "text": ["When this option is on, the material will use the ", {"type": "code", "text": ["Cd"]}, " (diffuse color) attribute on the volume to tint the fire color. When this option is off, the material ignores the volume\u2019s color and only uses the calculated fire color."], "extent": [31128, 31362]}, {"type": "para", "indent": 4, "text": ["(Technically, it\u2019s a ", {"type": "q", "text": ["primitive"]}, " color, not a point color, since volumes are primitives and don\u2019t have points, but surface shaders use ", {"type": "q", "text": ["point color"]}, ", so the Pyro material uses it for the sake of familiarity.)"], "extent": [31362, 31580]}], "container": true, "role": "item"}], "container": true, "role": "item_group"}, {"level": 3, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Physical model"], "extent": [31580, 31603], "body": [{"type": "para", "indent": 0, "text": ["The physical model derives a color and intensity based on the current temperature (as given by the value of the temperature field, scaled by the ", {"type": "ui", "text": ["Temperature"]}, " parameter below). This model uses Planck\u2019s formulas for both the color and intensity of a perfect emitter (also known as a ", {"type": "q", "text": ["black body"]}, ") at a certain temperature, given in degrees Kelvin."], "extent": [31603, 31954]}, {"type": "para", "indent": 0, "text": ["The black body model is generally a good starting point for a color spread for a flame. The drawback is it\u2019s based on measurements of near-perfect emitters/absorbers, which doesn\u2019t necessarily apply to flames (though it\u2019s not far off). In the case of flames, the visible color is more likely the result of chemical reactions than black body emission. For example, the bottom of a candle flame appears blue because it\u2019s more oxygenated than the rest of the flame (and burns more efficiently). Therefore, the Pyro material gives you controls to adjust the red/blue content of physically modeled flames."], "extent": [31954, 32556]}, {"tag": "table", "attrs": {}, "type": "pxml", "indent": 0, "extent": [32556, 32564], "body": [{"tag": "tr", "attrs": {}, "type": "pxml", "indent": 4, "extent": [32564, 32573], "body": [{"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": [{"scheme": "Image", "value": "/images/pyro/n1t23_mantra.jpg", "type": "img", "text": ""}], "extent": [32573, 32623]}, {"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": ["Fire field at 3000 degrees K, Red boost = 0, Blue boost = 0"], "extent": [32623, 32695]}], "container": true}, {"tag": "tr", "attrs": {}, "type": "pxml", "indent": 4, "extent": [32695, 32704], "body": [{"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": [{"scheme": "Image", "value": "/images/pyro/n1t24_mantra.jpg", "type": "img", "text": ""}], "extent": [32704, 32754]}, {"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": ["Red boost = 4, blue boost = 0"], "extent": [32754, 32796]}], "container": true}, {"tag": "tr", "attrs": {}, "type": "pxml", "indent": 4, "extent": [32796, 32805], "body": [{"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": [{"scheme": "Image", "value": "/images/pyro/n1t25_mantra.jpg", "type": "img", "text": ""}], "extent": [32805, 32855]}, {"tag": "td", "attrs": {}, "type": "pxml", "indent": 8, "text": ["Red boost = 0, blue boost = 4"], "extent": [32855, 32897]}], "container": true}], "container": true}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Temperature"], "extent": [32897, 32911], "body": [{"type": "para", "indent": 4, "text": ["The temperature (in degrees Kelvin) corresponding to a value of ", {"type": "code", "text": ["1"]}, " in the field."], "extent": [32911, 33002]}, {"type": "para", "indent": 4, "text": ["As a rough reference for what these temperatures mean, thermal emission becomes visible at around 500\u00b0K (e.g. the temperature at which an iron rod will start looking ", {"type": "q", "text": ["red hot"]}, "). Temperatures for typical flames can range from around 2000\u00b0K (candle flame) to 3000\u00b0K (blowtorch, limelight) and higher."], "extent": [33002, 33310]}, {"type": "para", "indent": 4, "text": ["The Pyro material uses a fairly ", {"type": "q", "text": ["hot"]}, " temperature as a default. This is only a guess based on observation of a few temperature fields generated by simulations, which don\u2019t always reach 1. It is entirely possible that the incoming fields may go well above one, in which case you should reduce the default."], "extent": [33310, 33620]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Red boost"], "extent": [33620, 33631], "body": [{"type": "para", "indent": 4, "text": ["Artificially boosts the red (colder) end of the flame\u2019s spectrum. This parameter has a lower bound of 0, but is unbounded on the positive side. However, practical values should rarely go above 4-8."], "extent": [33631, 33838]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Blue boost"], "extent": [33838, 33850], "body": [{"type": "para", "indent": 4, "text": ["Artificially boosts the blue (hotter) end of the flame\u2019s spectrum, essentially sliding the blackbody temperature up into the extreme heat end of the spectrum."], "extent": [33850, 34018]}, {"type": "para", "indent": 4, "text": ["Although this operates only on the perceived chromaticity (hue + saturation), it is likely that the overall intensity of the flame will also increase because as the color goes to blue it passes through white, which is much more luminous than fully saturated red. So, you will need to adjust the fire intensity when using either of these ", {"type": "q", "text": ["boost"]}, " parameters."], "extent": [34018, 34384]}, {"type": "para", "indent": 4, "text": ["It\u2019s possible that if you boost the blues, the core of the flame may be too bright and be clamped too much. You can use the ", {"type": "ui", "text": ["Soft Clip"]}, " parameter to address this."], "extent": [34384, 34554]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Soft clip"], "extent": [34554, 34565], "body": [{"type": "para", "indent": 4, "text": ["Also known as a ", {"type": "q", "text": ["knee"]}, " operator (although this uses is a cheaper algorithm because it has to run for every shaded point). If the hot portion of the flame starts becoming so bright that it ends up clamping too much, you can use soft-clip it to some ceiling. "], "extent": [34565, 34832]}, {"type": "para", "indent": 4, "text": ["This is used to compress high intensities that can\u2019t be displayed by a some device (like a TV or monitor). This material already applies a tone mapping operator to the black body intensities (which have an insane dynamic range). Nevertheless, there are cases where the accumulated brightness of the fire will \u201cblow up\u201d beyond any displayable value. This typically happens when the fire occupies a very large volume and has zero opacity, with the result that every step along the march through the volume will simply add itself to all the previous values."], "extent": [34832, 35392]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Start"], "extent": [35392, 35399], "body": [{"type": "para", "indent": 4, "text": ["The intensity value at which compression will start. Keep in mind that these are values within each step of the volume march (that is, per voxel), not the absolute accumulated value at the end of the march, so it will typically be a small value around 0.2 to 0.5."], "extent": [35399, 35668]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Suppression"], "extent": [35668, 35681], "body": [{"type": "para", "indent": 4, "text": ["The amount by which to suppress the output. This is an unbounded positive. It may need to be set quite high depending on the situation, and can be thought of as an exponent. The higher it goes, the closer the result will approach a standard \u201cclamp\u201d at the value given in the Start parameter. It is, actually, a ", {"type": "q", "text": ["soft"]}, " clamp."], "extent": [35681, 36015]}, {"type": "para", "indent": 4, "text": ["The Start value indicates where the clipping or clamping will start, and the Suppression parameter determines how strongly values above Start will be compressed. In practice, it is better to see how intense the flame is in context (that is, with the smoke enabled) before making any decisions on whether to clamp its intensity."], "extent": [36015, 36352]}], "container": true, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 3, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Artistic model"], "extent": [36352, 36375], "body": [{"type": "para", "indent": 0, "text": ["The horizontal axis of the ramps corresponds to field values from ", {"type": "code", "text": ["0"]}, " to ", {"type": "code", "text": ["1"]}, ". Any values in the field lower than ", {"type": "code", "text": ["0"]}, " or higher than ", {"type": "code", "text": ["1"]}, " will be clamped, and so use the values at the left or right end of the ramp."], "extent": [36375, 36590]}, {"type": "para", "indent": 0, "text": ["The default settings are a crude approximation of the physical model, simply as a plausible starting point for an artists to start modifying."], "extent": [36590, 36733]}, {"type": "para", "indent": 0, "text": ["As with other color controls in the material, color and intensity have separate controls for practical reasons, but if you want you can embed intensity in the ", {"type": "q", "text": ["hue"]}, " ramp."], "extent": [36733, 36905]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Temperature to hue mapping"], "extent": [36905, 36933], "body": [{"type": "para", "indent": 4, "text": ["The color of the flame for field values from ", {"type": "code", "text": ["0"]}, " to ", {"type": "code", "text": ["1"]}, "."], "extent": [36933, 36995]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Temperature to intensity mapping"], "extent": [36995, 37029], "body": [{"type": "para", "indent": 4, "text": ["The intensity of the flame color for field values from ", {"type": "code", "text": ["0"]}, " to ", {"type": "code", "text": ["1"]}, ". Note that the ", {"type": "ui", "text": ["Fire Intensity"]}, " parameter (near the top of the ", {"type": "ui", "text": ["Fire"]}, " tab) is the final, global intensity adjustment, so this ramp can be within a comfortable 0-1 range, as a ", {"type": "q", "text": ["relative intensities"]}, " ramp."], "extent": [37029, 37308]}], "container": true, "role": "item"}], "container": true, "role": "item_group"}, {"type": "para", "indent": 0, "text": [{"scheme": "Image", "value": "/images/pyro/n1t27_pyro2.png", "type": "img", "text": ""}, " ", {"scheme": "Image", "value": "/images/pyro/n1t27_mantra.jpg", "type": "img", "text": ""}], "extent": [37308, 37384]}]}]}, {"level": 2, "id": "scatter", "container": true, "type": "h", "indent": 0, "text": ["Scattering"], "extent": [37384, 37411], "body": [{"type": "para", "indent": 0, "text": ["See ", {"scheme": null, "value": "#usingscatter", "type": "link", "text": ["using scattering"], "fullpath": "/nodes/shop/pyro-.html#usingscatter", "fragment": "#usingscatter"}, " above."], "extent": [37411, 37457]}, {"type": "para", "indent": 0, "text": ["See also the ", {"type": "ui", "text": ["Scatter phase"]}, " parameter on the ", {"scheme": null, "value": "#smoke", "type": "link", "text": ["Smoke"], "fullpath": "/nodes/shop/pyro-.html#smoke", "fragment": "#smoke"}, " tab. See ", {"scheme": null, "value": "#colorcorrect", "type": "link", "text": ["color correction"], "fullpath": "/nodes/shop/pyro-.html#colorcorrect", "fragment": "#colorcorrect"}, " for information about the color correction parameters. "], "extent": [37457, 37619]}, {"type": "tip_group", "body": [{"type": "tip", "indent": 0, "role": "item", "extent": [37619, 37624], "body": [{"type": "para", "indent": 4, "text": ["The scattered illumination (and attenuation) is based on the smoke density and fire intensity when the point clouds were saved. If you change any parameters that affect the ", {"type": "em", "text": ["smoke density"]}, " or ", {"type": "em", "text": ["fire color or intensity"]}, ", you must regenerate the point clouds. Changes that affect smoke color, shadow, or phase do not require regenerating the point clouds."], "extent": [37624, 37982]}], "container": true}], "container": true, "role": "item_group"}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Scattering"], "extent": [37982, 37994], "body": [{"type": "para", "indent": 4, "text": ["Whether to simulate and display scattered light emission from fire through the smoke."], "extent": [37994, 38089]}], "container": true, "role": "item"}], "container": true, "role": "item_group"}, {"level": 3, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Point cloud files"], "extent": [38089, 38115], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 4, "text": ["Smoke PC file"], "extent": [38115, 38135], "body": [{"type": "para", "indent": 8, "text": ["The cache file for the smoke scattering point cloud. Remember to ", {"scheme": null, "value": "/render/expressions", "type": "link", "text": ["include the frame number"], "fullpath": "/render/expressions.html"}, " (e.g. ", {"type": "code", "text": ["$F4"]}, ") in the filename if you are doing animation."], "extent": [38135, 38321]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Fire PC file"], "extent": [38321, 38339], "body": [{"type": "para", "indent": 8, "text": ["The cache file for the fire scattering point cloud. Remember to ", {"scheme": null, "value": "/render/expressions", "type": "link", "text": ["include the frame number"], "fullpath": "/render/expressions.html"}, " (e.g. ", {"type": "code", "text": ["$F4"]}, ") in the filename if you are doing animation."], "extent": [38339, 38516]}], "container": true, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 3, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Generate point clouds"], "extent": [38516, 38546], "body": [{"type": "para", "indent": 4, "text": ["See ", {"scheme": null, "value": "#usingscatter", "type": "link", "text": ["how to generate scattering point clouds"], "fullpath": "/nodes/shop/pyro-.html#usingscatter", "fragment": "#usingscatter"}, " for more information."], "extent": [38546, 38638]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 4, "text": ["Smoke step size"], "extent": [38638, 38659], "body": [{"type": "para", "indent": 8, "text": ["Volume step size to use when generating the smoke point cloud. The smaller this number, the more dense the point cloud. A good rule of thumb is to start this value 10 times larger than the volume step size you are using for rendering the final image, then adjust based on the look."], "extent": [38659, 38958]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Fire step size"], "extent": [38958, 38978], "body": [{"type": "para", "indent": 8, "text": ["You only need to set this parameter if you want a different step size for the smoke and fire point clouds (set ", {"type": "ui", "text": ["Generate mode"]}, " to ", {"type": "q", "text": ["Use individual steps"]}, "). Otherwise, set ", {"type": "ui", "text": ["Generate mode"]}, " to ", {"type": "q", "text": ["Use smoke step for both"]}, " and just set the ", {"type": "ui", "text": ["Smoke step size"]}, " parameter."], "extent": [38978, 39262]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Camera"], "extent": [39262, 39274], "body": [{"type": "para", "indent": 8, "text": ["The camera to use when ", {"type": "q", "text": ["rendering"]}, " the point clouds. This can be the same camera you use to render the final image, but it should have the entire effect in view, since the point cloud will only be built in areas visible to the camera. You may need to create a new camera for building point clouds that has the same point of view as the main camera but pulled back to show the entire effect volume. See ", {"scheme": null, "value": "#usingscatter", "type": "link", "text": ["how to generate scattering point clouds"], "fullpath": "/nodes/shop/pyro-.html#usingscatter", "fragment": "#usingscatter"}, " for more information."], "extent": [39274, 39771]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Frame range"], "extent": [39771, 39788], "body": [{"type": "para", "indent": 8, "text": ["Turn this on and set the frame range to generate point clouds for multiple frames of animation. If this option is off, clicking ", {"type": "ui", "text": ["Generate"]}, " will only generate point clouds for the current frame."], "extent": [39788, 40001]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Generate mode"], "extent": [40001, 40020], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 8, "text": ["Use smoke step for both"], "extent": [40020, 40053], "body": [{"type": "para", "indent": 12, "text": ["Use the value of the ", {"type": "ui", "text": ["Smoke step size"]}, " parameter as the volume step size and generate the smoke and fire point clouds at the same time."], "extent": [40053, 40216]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Use individual steps"], "extent": [40216, 40246], "body": [{"type": "para", "indent": 12, "text": ["Use the values of the ", {"type": "ui", "text": ["Smoke step size"]}, " and ", {"type": "ui", "text": ["Fire step size"]}, " parameters to generate smoke and fire point clouds with different step sizes."], "extent": [40246, 40414]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Create ROPs only"], "extent": [40414, 40440], "body": [{"type": "para", "indent": 12, "text": ["Advanced: This setting won\u2019t actually generate any point cloud files. Instead, it will create render nodes in ", {"type": "code", "text": ["/out"]}, " appropriate for generating point clouds, using the current values of the Pyro material. You will still need to customize the render nodes as described under ", {"scheme": null, "value": "#usingscatter", "type": "link", "text": ["how to generate scattering point clouds"], "fullpath": "/nodes/shop/pyro-.html#usingscatter", "fragment": "#usingscatter"}, "."], "extent": [40440, 40792]}], "container": true}], "container": true}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Generate button"], "extent": [40792, 40813], "body": [{"type": "para", "indent": 8, "text": ["Click to generate the point clouds necessary for simulating scattering. (If ", {"type": "ui", "text": ["Generate mode"]}, " is ", {"type": "q", "text": ["Create ROPs only"]}, ", this will create render nodes in ", {"type": "code", "text": ["/out"]}, ", not generate point clouds)."], "extent": [40813, 41008]}], "container": true, "role": "item"}], "container": true, "role": "item_group"}]}, {"type": "para", "indent": 0, "text": [{"scheme": "Image", "value": "/images/pyro/scatter_small.jpg", "type": "img", "text": ""}], "extent": [41008, 41048]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Amplitude"], "extent": [41048, 41059], "body": [{"type": "para", "indent": 4, "text": ["A global ", {"type": "q", "text": ["dimmer"]}, " dial: it controls the overall intensity of scattered light."], "extent": [41059, 41146]}, {"tag": "table", "attrs": {"class": "compact"}, "type": "pxml", "indent": 4, "extent": [41146, 41174], "body": [{"tag": "tr", "attrs": {}, "type": "pxml", "indent": 8, "extent": [41174, 41187], "body": [{"tag": "td", "attrs": {}, "type": "pxml", "indent": 12, "text": [{"scheme": "Image", "value": "/images/pyro/n1t45A_mantra.jpg", "type": "img", "text": ""}], "extent": [41187, 41242]}, {"tag": "td", "attrs": {}, "type": "pxml", "indent": 12, "text": ["Amplitude = 0.5"], "extent": [41242, 41274]}], "container": true}, {"tag": "tr", "attrs": {}, "type": "pxml", "indent": 8, "extent": [41274, 41287], "body": [{"tag": "td", "attrs": {}, "type": "pxml", "indent": 12, "text": [{"scheme": "Image", "value": "/images/pyro/n1t44A_mantra.jpg", "type": "img", "text": ""}], "extent": [41287, 41342]}, {"tag": "td", "attrs": {}, "type": "pxml", "indent": 12, "text": ["Amplitude = 1.0"], "extent": [41342, 41374]}], "container": true}, {"tag": "tr", "attrs": {}, "type": "pxml", "indent": 8, "extent": [41374, 41387], "body": [{"tag": "td", "attrs": {}, "type": "pxml", "indent": 12, "text": [{"scheme": "Image", "value": "/images/pyro/n1t45C_mantra.jpg", "type": "img", "text": ""}], "extent": [41387, 41442]}, {"tag": "td", "attrs": {}, "type": "pxml", "indent": 12, "text": ["Amplitude = 2.0"], "extent": [41442, 41474]}], "container": true}], "container": true}], "container": true, "role": "item"}], "container": true, "role": "item_group"}, {"type": "tip_group", "body": [{"type": "tip", "indent": 0, "role": "item", "extent": [41474, 41480], "body": [{"type": "para", "indent": 4, "text": ["In the real world, density attenuation and distance attenuation are linked. In the Pyro material, they're decoupled to allow for more artistic control."], "extent": [41480, 41637]}], "container": true}], "container": true, "role": "item_group"}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Density atten"], "extent": [41637, 41652], "body": [{"type": "para", "indent": 4, "text": ["As light travels inside a dense medium it progressively loses intensity as bits of it are absorbed or scattered away. This parameter scales this ", {"type": "q", "text": ["attenuation due to density"]}, ". Values greater than ", {"type": "code", "text": ["1"]}, " mean density attenuation happens faster than it would in the real world given the density, and values less than ", {"type": "code", "text": ["1"]}, " mean less attenuation than in the real world."], "extent": [41652, 42022]}, {"tag": "table", "attrs": {"class": "compact"}, "type": "pxml", "indent": 4, "extent": [42022, 42050], "body": [{"tag": "tr", "attrs": {}, "type": "pxml", "indent": 8, "extent": [42050, 42063], "body": [{"tag": "td", "attrs": {}, "type": "pxml", "indent": 12, "text": [{"scheme": "Image", "value": "/images/pyro/n1t43A_mantra.jpg", "type": "img", "text": ""}], "extent": [42063, 42118]}, {"tag": "td", "attrs": {}, "type": "pxml", "indent": 12, "text": ["Density atten = 0.5"], "extent": [42118, 42154]}], "container": true}, {"tag": "tr", "attrs": {}, "type": "pxml", "indent": 8, "extent": [42154, 42167], "body": [{"tag": "td", "attrs": {}, "type": "pxml", "indent": 12, "text": [{"scheme": "Image", "value": "/images/pyro/n1t43B_mantra.jpg", "type": "img", "text": ""}], "extent": [42167, 42222]}, {"tag": "td", "attrs": {}, "type": "pxml", "indent": 12, "text": ["Density atten = 1.0"], "extent": [42222, 42258]}], "container": true}, {"tag": "tr", "attrs": {}, "type": "pxml", "indent": 8, "extent": [42258, 42271], "body": [{"tag": "td", "attrs": {}, "type": "pxml", "indent": 12, "text": [{"scheme": "Image", "value": "/images/pyro/n1t43C_mantra.jpg", "type": "img", "text": ""}], "extent": [42271, 42326]}, {"tag": "td", "attrs": {}, "type": "pxml", "indent": 12, "text": ["Density atten = 1.5"], "extent": [42326, 42362]}], "container": true}], "container": true}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Distance atten"], "extent": [42362, 42383], "body": [{"type": "para", "indent": 4, "text": ["As in the real world, the light emitted by the point lights in the fire cloud attenuates with distance according to the inverse square law: the rate of attenuation is inversely proportional to the square of the distance. This parameter scales that attenuation. Values greater than ", {"type": "code", "text": ["1"]}, " mean distance attenuation happens faster than it would in the real world given the distance (perceived as shortening the scattering distance), and values less than ", {"type": "code", "text": ["1"]}, " mean less attenuation than in the real world (perceived as increasing the scattering distance)."], "extent": [42383, 42941]}, {"type": "para", "indent": 4, "text": ["Scaling distance attenuation retains the overall shape/distribution of the scattering, but scales the perceived length/size up or down (whereas density attenuation behaves more like an intensity dimmer)."], "extent": [42941, 43154]}, {"tag": "table", "attrs": {"class": "compact"}, "type": "pxml", "indent": 4, "extent": [43154, 43182], "body": [{"tag": "tr", "attrs": {}, "type": "pxml", "indent": 8, "extent": [43182, 43195], "body": [{"tag": "td", "attrs": {}, "type": "pxml", "indent": 12, "text": [{"scheme": "Image", "value": "/images/pyro/n1t44A_mantra.jpg", "type": "img", "text": ""}], "extent": [43195, 43250]}, {"tag": "td", "attrs": {}, "type": "pxml", "indent": 12, "text": ["Distance atten = 0.5"], "extent": [43250, 43287]}], "container": true}, {"tag": "tr", "attrs": {}, "type": "pxml", "indent": 8, "extent": [43287, 43300], "body": [{"tag": "td", "attrs": {}, "type": "pxml", "indent": 12, "text": [{"scheme": "Image", "value": "/images/pyro/n1t44B_mantra.jpg", "type": "img", "text": ""}], "extent": [43300, 43355]}, {"tag": "td", "attrs": {}, "type": "pxml", "indent": 12, "text": ["Distance atten = 1.0"], "extent": [43355, 43392]}], "container": true}, {"tag": "tr", "attrs": {}, "type": "pxml", "indent": 8, "extent": [43392, 43405], "body": [{"tag": "td", "attrs": {}, "type": "pxml", "indent": 12, "text": [{"scheme": "Image", "value": "/images/pyro/n1t44C_mantra.jpg", "type": "img", "text": ""}], "extent": [43405, 43460]}, {"tag": "td", "attrs": {}, "type": "pxml", "indent": 12, "text": ["Distance atten = 2.0"], "extent": [43460, 43497]}], "container": true}], "container": true}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Scattering phase"], "extent": [43497, 43516], "body": [{"type": "para", "indent": 4, "text": ["Controls the directionality of scattered fire light. ", {"type": "code", "text": ["0"]}, " means isotropic scattering, positive numbers mean forward scattering, negative numbers mean backward scattering."], "extent": [43516, 43691]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Max search radius"], "extent": [43691, 43710], "body": [{"type": "para", "indent": 4, "text": ["How far the scattering will spread, in world space units. Depending on the radius, this distance may encompass thousands or hundreds of thousands of points. Use the ", {"type": "ui", "text": ["Max contributors"]}, " parameter to limit the number of points considered for efficiency."], "extent": [43710, 43972]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Max contributors"], "extent": [43972, 43990], "body": [{"type": "para", "indent": 4, "text": ["Of all points in the ", {"type": "ui", "text": ["Max search radius"]}, ", the material will consider this many of the closest points."], "extent": [43990, 44099]}, {"type": "para", "indent": 4, "text": ["There is a point where additional light contributions stop having a significant effect on the overall result. However, this number is hard to determine without testing (it depends on several factors), so you should try to not limit the number of contributors at the beginning. Therefore, you should try starting with this parameter at a large number, like ", {"type": "code", "text": ["10000"]}, "."], "extent": [44099, 44473]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Filter points"], "extent": [44473, 44488], "body": [{"type": "para", "indent": 4, "text": ["As the Pyro material marches through the volume, it computes the scattering contribution by averaging (or blurring) a neighborhood of precomputed point cloud points. This parameter is the number of cloud points in that ", {"type": "q", "text": ["blur filter"]}, ". Higher values give blurrier results. The default (", {"type": "code", "text": ["8"]}, " points) should be adequate in most cases for point clouds generated with a micropolygon renderer. For efficient shading, you should use the smallest number which still produces a smooth result. If the value is too small, you\u2019ll seeing grid-like artifacts in the scattered light."], "extent": [44488, 45064]}, {"type": "para", "indent": 4, "text": ["The following image shows filter points settings of (left to right, top to bottom) 1, 2, 4, 8, 16, and 32 in a constant cloud."], "extent": [45064, 45200]}, {"type": "para", "indent": 4, "text": [{"scheme": "Image", "value": "/images/pyro/n1t42_mantra.jpg", "type": "img", "text": ""}], "extent": [45200, 45247]}, {"type": "note_group", "body": [{"type": "note", "indent": 4, "role": "item", "extent": [45247, 45257], "body": [{"type": "para", "indent": 8, "text": ["If you are using your own render nodes to generate the point clouds using raytracing instead of micropolygon rendering for some reason, you will need to use a filter size of between 30 and 80 points due to the randomness of point distribution in raytraced point clouds."], "extent": [45257, 45540]}], "container": true}], "container": true, "role": "item_group"}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Atten method"], "extent": [45540, 45554], "body": [{"type": "para", "indent": 4, "text": ["How the material calculates the attenuation and occlusion of light emitted from the fire field. The three choices represent trade-offs between speed and accuracy."], "extent": [45554, 45722]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Approximated, No shadows"], "extent": [45722, 45752], "body": [{"type": "para", "indent": 8, "text": ["The default, cheapest approximation. This method assumes a constant density for each cloud point and will not  calculate occlusion (shadows) from objects embedded in the smoke. It is the fastest to compute, and in cases when the smoke\u2019s density  doesn\u2019t vary too much, it results in a fairly close approximation to real attenuation."], "extent": [45752, 46098]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Approximated, Hard shadows only"], "extent": [46098, 46135], "body": [{"type": "para", "indent": 8, "text": ["This is the same approximation as ", {"type": "q", "text": ["Approximated, No shadows"]}, ", but it also computes shadows from solid objects in the smoke (no transparencies)."], "extent": [46135, 46292]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Real"], "extent": [46292, 46302], "body": [{"type": "para", "indent": 8, "text": ["Actually traces occlusion to each fire light source instead of approximating, which gives the highest quality results but can be very expensive. Use this method if there is a great deal of variation in the smoke density, and the approximation starts looking unconvincing, or there are transparent objects in the smoke."], "extent": [46302, 46634]}, {"type": "para", "indent": 8, "text": ["In practice, due to the order in which the sources are visited, it isn\u2019t necessary to trace for every single source, so the material has a ", {"type": "ui", "text": ["Quality"]}, " parameter which allows you to control the frequency of these trace calls."], "extent": [46634, 46872]}, {"type": "para", "indent": 8, "text": [{"scheme": "Image", "value": "/images/pyro/n1t41A_mantra.jpg", "type": "img", "text": ""}, "\n        ", {"scheme": "Image", "value": "/images/pyro/n1t41D_mantra.jpg", "type": "img", "text": ""}, "\n        Approximated, No Shadows. Cost: ", {"type": "strong", "text": ["1.00"]}], "extent": [46872, 47022]}, {"type": "para", "indent": 8, "text": [{"scheme": "Image", "value": "/images/pyro/n1t41B_mantra.jpg", "type": "img", "text": ""}, "\n        ", {"scheme": "Image", "value": "/images/pyro/n1t41E_mantra.jpg", "type": "img", "text": ""}, "\n        Approximated, Hard Shadows Only. Cost: ", {"type": "strong", "text": ["2.06"]}], "extent": [47022, 47179]}, {"type": "para", "indent": 8, "text": [{"scheme": "Image", "value": "/images/pyro/n1t41C_mantra.jpg", "type": "img", "text": ""}, "\n        ", {"scheme": "Image", "value": "/images/pyro/n1t41F_mantra.jpg", "type": "img", "text": ""}, "\n        Real, quality set to 10. Cost: ", {"type": "strong", "text": ["26.67"]}], "extent": [47179, 47329]}], "container": true}], "container": true}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Quality"], "extent": [47329, 47338], "body": [{"type": "para", "indent": 4, "text": ["Available when ", {"type": "ui", "text": ["Atten method"]}, " is ", {"type": "q", "text": ["Real"]}, ". A value from ", {"type": "code", "text": ["0"]}, " to ", {"type": "code", "text": ["100"]}, ". Traces occlusion once every N sources, where N is 100/Quality. The default ", {"type": "code", "text": ["0.8"]}, " is useful in cases that don\u2019t require precise shadows (just density attenuation). If you have detailed embedded objects with crisp shadows, increase quality to around ", {"type": "code", "text": ["10"]}, "."], "extent": [47338, 47671]}], "container": true, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 2, "id": "modifiers", "container": true, "type": "h", "indent": 0, "text": ["Modifiers"], "extent": [47671, 47699], "body": [{"type": "para", "indent": 0, "text": ["See ", {"scheme": null, "value": "#usingmods", "type": "link", "text": ["how to use modifier fields"], "fullpath": "/nodes/shop/pyro-.html#usingmods", "fragment": "#usingmods"}, " above."], "extent": [47699, 47752]}, {"level": 3, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Field modifiers"], "extent": [47752, 47776], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Activate field modifier"], "extent": [47776, 47802], "body": [{"type": "para", "indent": 4, "text": ["Make this field modifier ", {"type": "q", "text": ["active"]}, ", so it shows up in the pop-up menus of modifiers next to mod-able parameters."], "extent": [47802, 47923]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Label"], "extent": [47923, 47930], "body": [{"type": "para", "indent": 4, "text": ["A short, descriptive label for the field. This is how the field will appear in the pop-up menus of modifiers next to mod-able parameters. This string can include spaces and other non-alphanumeric characters."], "extent": [47930, 48147]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Comment"], "extent": [48147, 48156], "body": [{"type": "para", "indent": 4, "text": ["An optional longer description of the modifier and its purpose. This value is not used by the material, it\u2019s simply a convenient place to record information."], "extent": [48156, 48323]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Base field"], "extent": [48323, 48335], "body": [{"type": "para", "indent": 4, "text": ["The field on the object to modify, for example ", {"type": "code", "text": ["temperature"]}, "."], "extent": [48335, 48406]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Contour"], "extent": [48406, 48415], "body": [{"type": "para", "indent": 4, "text": ["The Contour modifier operates on low field values and is useful to ", {"type": "q", "text": ["sharpen"]}, " the contours of a smoke cloud. You can think of it as a ", {"type": "q", "text": ["soft floor"]}, " operator. Values below the ", {"type": "ui", "text": ["Width"]}, " will be compressed according to ", {"type": "ui", "text": ["Sharpness"]}, ", where the higher the sharpness, the more abrupt the transition between 0 and the width will be."], "extent": [48415, 48750]}, {"type": "para", "indent": 4, "text": [{"scheme": "Image", "value": "/images/pyro/modplot_contour.jpg", "type": "img", "text": ""}], "extent": [48750, 48800]}, {"type": "para", "indent": 4, "text": ["The following images show a density field (with Density Amplitude set to 500) where the field values were rendered directly on the left, and then modified with contour sharpening (", {"type": "ui", "text": ["Width"]}, " = 0.02, ", {"type": "ui", "text": ["Sharpness"]}, " = 20) on the right. (If you use sharp transitions like this, you\u2019ll probably need to lower the ", {"type": "ui", "text": ["Volume Step Size"]}, " on the Mantra render node or you may see shadowing artifacts)."], "extent": [48800, 49200]}, {"type": "para", "indent": 4, "text": [{"scheme": "Image", "value": "/images/pyro/contour1.jpg", "type": "img", "text": ""}, "\n    ", {"scheme": "Image", "value": "/images/pyro/contour2.jpg", "type": "img", "text": ""}], "extent": [49200, 49281]}, {"type": "para", "indent": 4, "text": ["Turn on the checkbox to enable this modification."], "extent": [49281, 49340]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Soft clip"], "extent": [49340, 49351], "body": [{"type": "para", "indent": 4, "text": ["The soft clip modifier operates on high field values and is useful to compress very high values. You can think of it as a ", {"type": "q", "text": ["soft ceiling"]}, ". Values above ", {"type": "ui", "text": ["Start"]}, " will be progressively compressed according to ", {"type": "ui", "text": ["Suppression"]}, " such that, the higher the suppression, the more it will resemble a clamp operation."], "extent": [49351, 49667]}, {"type": "para", "indent": 4, "text": [{"scheme": "Image", "value": "/images/pyro/modplot_softclip.jpg", "type": "img", "text": ""}], "extent": [49667, 49718]}, {"type": "para", "indent": 4, "text": ["The following images show a temperature field which was rendered directly on the left, and then modified with soft clipping (", {"type": "ui", "text": ["Start"]}, " = 0.5, ", {"type": "ui", "text": ["Suppression"]}, " = 20) on the right."], "extent": [49718, 49905]}, {"type": "para", "indent": 4, "text": [{"scheme": "Image", "value": "/images/pyro/softclip1.jpg", "type": "img", "text": ""}, "\n    ", {"scheme": "Image", "value": "/images/pyro/softclip2.jpg", "type": "img", "text": ""}], "extent": [49905, 49984]}, {"type": "para", "indent": 4, "text": ["Turn on the checkbox to enable this modification."], "extent": [49984, 50043]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Range mapping"], "extent": [50043, 50058], "body": [{"type": "para", "indent": 4, "text": ["Range mapping simply fits one range to another, identically to the ", {"type": "q", "text": ["fit"]}, " functions, VOPs, and operators available throughout Houdini. It maps the Field Range\u2019s Min value to the Target Range\u2019s Min value, and the Field Range\u2019s Max value to the Target Range\u2019s Max value."], "extent": [50058, 50335]}, {"type": "para", "indent": 4, "text": ["Values between these extremes will, by default, be interpolated linearly. However, you can use the ", {"type": "ui", "text": ["Interpolation"]}, " ramp to set a custom interpolation curve."], "extent": [50335, 50503]}, {"type": "tip_group", "body": [{"type": "tip", "indent": 4, "role": "item", "extent": [50503, 50512], "body": [{"type": "para", "indent": 8, "text": ["Depending on the Min/Max settings of the field and target ranges, it may be tricky to predict the values produced by the interpolation ramp. Just remember: wherever the ramp has a value of zero, you will get the target range\u2019s Min value, and wherever the ramp value is one, you will get the target Range\u2019s Max value."], "extent": [50512, 50838]}], "container": true}], "container": true, "role": "item_group"}, {"type": "para", "indent": 4, "text": ["The range mapping is only active within the specified Field Range. Field values outside this range will clamp to the Min/Max values of the Target Range. Therefore, it is usually best to set as large a Field Range as possible and then shape the output using the ramp, using the target range as more of a scaling factor."], "extent": [50838, 51166]}, {"type": "para", "indent": 4, "text": ["(images)"], "extent": [51166, 51180]}, {"type": "para", "indent": 4, "text": ["Turn on the checkbox to enable this modification."], "extent": [51180, 51239]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Interpolation"], "extent": [51239, 51254], "body": [{"type": "para", "indent": 4, "text": ["The interpolation curve to use when ", {"type": "ui", "text": ["Range mapping"]}, " is on."], "extent": [51254, 51320]}], "container": true, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 3, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Noise modifiers"], "extent": [51320, 51344], "body": [{"type": "para", "indent": 0, "text": ["The Pyro material divides the visual characteristics of the noise into two categories: The ", {"type": "em", "text": ["basis"]}, " (the fundamental type of noise), and the ", {"type": "em", "text": ["fractal construction"]}, " (the method use to construct fractals using the basis) of the noise."], "extent": [51344, 51578]}, {"type": "para", "indent": 0, "text": [{"scheme": "Image", "value": "/images/pyro/noisetable_small.jpg", "type": "img", "text": ""}], "extent": [51578, 51621]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Activate field modifier"], "extent": [51621, 51646], "body": [{"type": "para", "indent": 4, "text": ["Make this field modifier ", {"type": "q", "text": ["active"]}, ", so it shows up in the pop-up menus of modifiers next to mod-able parameters."], "extent": [51646, 51763]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Label"], "extent": [51763, 51770], "body": [{"type": "para", "indent": 4, "text": ["A short, descriptive label for the noise. This is how the field will appear in the pop-up menus of noises next to mod-able parameters. This string can include spaces and other non-alphanumeric characters."], "extent": [51770, 51984]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Comment"], "extent": [51984, 51993], "body": [{"type": "para", "indent": 4, "text": ["An optional longer description of the noise and its purpose. This value is not used by the material, it\u2019s simply a convenient place to record information."], "extent": [51993, 52157]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Exists in field"], "extent": [52157, 52174], "body": [{"type": "para", "indent": 4, "text": ["Set to ", {"type": "q", "text": ["None"]}, " to have the noise exist everwhere in space, or choose a field to have the noise exist within some sub-range of the field, where the field\u2019s values act as an envelope for the noise\u2019s amplitude."], "extent": [52174, 52390]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Active field range"], "extent": [52390, 52410], "body": [{"type": "para", "indent": 4, "text": ["The range of values from the input field (set in the ", {"type": "ui", "text": ["Exists in field"]}, " parameter) to map into the noise function."], "extent": [52410, 52535]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Amplitude distribution within active field range"], "extent": [52535, 52585], "body": [{"type": "para", "indent": 4, "text": ["This ramp lets you scale the noise amplitude based on the values from the input field (set in the ", {"type": "ui", "text": ["Exists in field"]}, " parameter). For example, if the input field has a lot of high values, you can scale down the high end to make the output noise more uniform."], "extent": [52608, 52872]}], "container": true, "attrs": {"id": "mn_rngwl"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Noise basis"], "extent": [52872, 52885], "body": [{"type": "para", "indent": 4, "text": ["The type of noise to use as the basis for generating the noise fractal. You can use the basis noise as-is by setting ", {"type": "ui", "text": ["Fractal type"]}, " to ", {"type": "q", "text": ["None"]}, "."], "extent": [52885, 53035]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Invert noise"], "extent": [53035, 53049], "body": [{"type": "para", "indent": 4, "text": ["Inverts the output values of the noise function, so high valued areas become low and low valued areas become high."], "extent": [53049, 53169]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["4D noise"], "extent": [53169, 53179], "body": [{"type": "para", "indent": 4, "text": ["For noise bases that support 4D noise (noise that evolves in time), turn this checkbox on to use the 4D version. The default is to use 3D noise because 4D noise is more expensive to compute."], "extent": [53179, 53375]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Frequency"], "extent": [53375, 53386], "body": [{"type": "para", "indent": 4, "text": ["Increasing frequency decreases the size of noise features."], "extent": [53386, 53454]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Offset"], "extent": [53454, 53462], "body": [{"type": "para", "indent": 4, "text": ["Translates the noise in space."], "extent": [53462, 53502]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Filter width"], "extent": [53502, 53516], "body": [{"type": "para", "indent": 4, "text": ["Controls the scale of the noise\u2019s anti aliasing filter. The default filter size is calculated from the other settings and you will normally not need to adjust this, but there may be situations where the built-in anti-aliasing mechanism may under- or over-estimate the filter size. In those cases, you can use this parameter to scale the calculated filter size."], "extent": [53516, 53886]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Exponent"], "extent": [53886, 53896], "body": [{"type": "para", "indent": 4, "text": ["Raises the value of the noise basis to the given exponent. You can use this to increase or decrease contrast without clipping. Values above 1 will increase contrast, values above 0 and less than 1 will decrease contrast."], "extent": [53896, 54122]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Flow"], "extent": [54122, 54128], "body": [{"type": "para", "indent": 4, "text": ["Available when ", {"type": "ui", "text": ["Noise basis"]}, " is ", {"type": "q", "text": ["Flow"]}, ". This is like a separate dimension, similar to time for 4D noises, which when animated can make the noise appear to ", {"type": "q", "text": ["flow"]}, ". This is why this parameter defaults to ", {"type": "q", "text": ["current time"]}, " (", {"type": "code", "text": ["$T"]}, "). When this parameter is exactly 0, the Flow basis is identical to the Perlin basis."], "extent": [54128, 54447]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Fractal type"], "extent": [54447, 54461], "body": [{"type": "para", "indent": 4, "text": ["The method for building a fractal from the noise basis. You can set this to ", {"type": "q", "text": ["None"]}, " to see the noise basis on its own."], "extent": [54461, 54588]}, {"type": "note_group", "body": [{"type": "note", "indent": 4, "role": "item", "extent": [54588, 54598], "body": [{"type": "para", "indent": 8, "text": ["All fractals are constructed by adding a signal with a scaled amplitude and frequency back onto itself an infinite number of times. This makes them both self similar and infinitely detailed, at least in theory. In practice, the number of loops is constrained by the amount of detail that can be displayed \u2013 there\u2019s a limit to how much high frequency detail can be expressed by a single pixel. In the Pyro material, the ", {"type": "q", "text": ["signal"]}, " that keeps feeding back onto itself is the noise basis."], "extent": [54598, 55092]}], "container": true}], "container": true, "role": "item_group"}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Max octaves"], "extent": [55092, 55105], "body": [{"type": "para", "indent": 4, "text": ["Each feedback iteration of the fractal is called an octave (because the frequency is typically doubled at each step, as in a musical octave). Since it\u2019s a counter, the number of octaves would normally be an integer, but the Pyro material allows you to use floating point values to support driving the parameter with a modifier. For example, 3.5 octaves means 3 full iterations plus the fourth iteration at half its weight (a linear interpolation between octaves 3 and 4). All noise parameters in Pyro are continuous."], "extent": [55105, 55631]}, {"type": "para", "indent": 4, "text": ["Note that it\u2019s ", {"type": "q", "text": ["Max Octaves"]}, " not ", {"type": "q", "text": ["Octaves"]}, ". This is because the actual number of octaves will depend on what can be practically displayed given the current camera settings, resolution, distance from volume, and so on without showing aliasing artifacts. The Max Octaves parameter says to not go beyond this number of octaves."], "extent": [55631, 55961]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Lacunarity"], "extent": [55961, 55973], "body": [{"type": "para", "indent": 4, "text": ["Each octave (iteration of the fractal feedback loop) typically doubles the frequency of the signal. However, this doesn\u2019t necessarily have to be the case: The multiplier could conceivably be something other than 2. This scaling factor is called ", {"type": "q", "text": ["lacunarity"]}, " because the visual effect is that as this factor grows, the number of ", {"type": "q", "text": ["gaps"]}, " between features appear to grow (lacunae is a fancy word for gaps). Lacunarity is a measure of how a fractal fills space. In the Pyro material, it is the frequency scaling factor per octave."], "extent": [55973, 56508]}, {"type": "para", "indent": 4, "text": ["(This parameter\u2019s default is ", {"type": "code", "text": ["2.01234"]}, " instead of ", {"type": "code", "text": ["2.0"]}, " because, depending on the implementation, you will sometimes see the grid pattern of the basis lattice when the frequency factor is set to exactly ", {"type": "code", "text": ["2.0"]}, ".)"], "extent": [56508, 56728]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Roughness"], "extent": [56728, 56739], "body": [{"type": "para", "indent": 4, "text": ["Sometimes called ", {"type": "q", "text": ["gain"]}, ", this is the amplitude scaling factor per octave. This is typically set to 0.5 because in the standard fractal construction, as we double the frequency, we halve the amplitude. However, you can "], "extent": [56739, 56967]}, {"type": "para", "indent": 4, "text": ["But again, as with ", {"type": "q", "text": ["lacunarity"]}, ", there\u2019s no rule that says this must be so. Therefore, it is exposed as a parameter. "], "extent": [56967, 57090]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Displacement"], "extent": [57090, 57104], "body": [{"type": "para", "indent": 4, "text": ["Available when ", {"type": "ui", "text": ["Fractal type"]}, " is ", {"type": "q", "text": ["Multiplicative"]}, ", ", {"type": "q", "text": ["Displaced"]}, ", or ", {"type": "q", "text": ["Gradient Advection"]}, ". The parameter has a slightly different meanings for each."], "extent": [57104, 57258]}, {"type": "bullet_group", "body": [{"blevel": 6, "type": "bullet", "indent": 4, "text": ["The Multiplicative fractal concentrates detail in places where the basis has high values and dampens detail where the basis has low values. This is why it is normally used for terrain generation, as it adds detail to the top of mountains but keeps the valleys smooth. The Displacement parameter controls the overall scale of that detail displacement. High values (above 1) will augment it \u2013 that is: The peaks will become noisier faster and the valleys will be dampened more, though there will be fewer of them."], "extent": [57258, 57786]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": ["For the Displaced fractal, the Displacement parameter literally controls the amount that the spatial sample point will be displaced from its natural location. Visually, this means that the higher the number, the more ", {"type": "q", "text": ["veiny"]}, " the appearance."], "extent": [57786, 58042]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": ["For the Gradient Advection fractal the Displacement parameter is identical to that of the Displacement fractal. The only difference is the direction in which the sample point is displaced: the gradient of the basis instead of an arbitrary direction."], "extent": [58042, 58299]}], "container": true}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Lookup ramp for color/vector output"], "extent": [58299, 58336], "body": [{"type": "para", "indent": 4, "text": ["The output of the noise generator is always scalar (single floating point values). For the few places in the material that need vector values instead of floating point (i.e. colors), this ramp lets you map output values to colors."], "extent": [58336, 58576]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Output range"], "extent": [58576, 58590], "body": [{"type": "para", "indent": 4, "text": ["Minimum and maximum output values of the noise function. For example, to arrive at something closer to what the Anti Aliased Noise VOP puts out, we can  change the Output Range to ", {"type": "code", "text": ["[-0.5,0.5]"]}, ". By default all noises are normalized to a nominal output range of 0-1."], "extent": [58590, 58864]}, {"type": "para", "indent": 4, "text": ["Changing the output range to include negative values is perfectly safe and should not produce illegal output. The Pyro material will not allow fields which shouldn\u2019t be negative (such as density) to drop below zero."], "extent": [58864, 59089]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Final amplitude"], "extent": [59089, 59106], "body": [{"type": "para", "indent": 4, "text": ["Scales the output of the noise function. "], "extent": [59106, 59153]}], "container": true, "role": "item"}], "container": true, "role": "item_group"}]}]}, {"level": 2, "id": "settings", "container": true, "type": "h", "indent": 0, "text": ["Settings"], "extent": [59153, 59179], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Shading mode"], "extent": [59179, 59194], "body": [{"type": "para", "indent": 4, "text": ["Switches between normal shading and the generation of point clouds. See ", {"scheme": null, "value": "#usingscatter", "type": "link", "text": ["how to generate scattering point clouds"], "fullpath": "/nodes/shop/pyro-.html#usingscatter", "fragment": "#usingscatter"}, "."], "extent": [59194, 59332]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Current time/Current frame"], "extent": [59332, 59360], "body": [{"type": "para", "indent": 4, "text": ["Used by the material for 4D noise and solving dual rest position fields. You should leave these at their defaults (", {"type": "code", "text": ["$T"]}, " and ", {"type": "code", "text": ["$FF"]}, ") unless you know you need to change them for some reason."], "extent": [59360, 59557]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Dual rest"], "extent": [59557, 59568], "body": [{"type": "para", "indent": 4, "text": ["Rest fields will become less defined as they diffuse, creating an undesirable stretching of any shader-based noise that is dependent on them. This option counteracts this by maintaining two rest fields which reset their values at different times. The material interpolates between the two fields to give the impression of a stable rest position. "], "extent": [59568, 59920]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Start frame"], "extent": [59920, 59933], "body": [{"type": "para", "indent": 4, "text": ["You do not normally need to change this parameter. However, if you change the ", {"type": "ui", "text": ["Start frame"]}, " parameter on the ", {"type": "ui", "text": ["Rest"]}, " tab of the Pyro solver node in the DOP network for the effect this material is applied to, you will need to change this parameter to match."], "extent": [59933, 60202]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Reset rate"], "extent": [60202, 60214], "body": [{"type": "para", "indent": 4, "text": ["The number of frames between when the material resets a rest fields. The material staggers the reset points of the two fields so the reset of an individual rest field is not visible."], "extent": [60214, 60406]}], "container": true, "role": "item"}], "container": true, "role": "item_group"}, {"level": 3, "id": null, "container": true, "type": "h", "indent": 0, "text": ["User fields"], "extent": [60406, 60426], "body": [{"type": "para", "indent": 0, "text": ["If you need to use fields from the simulation besides the common ones already listed in the field pop-up menus (e.g. ", {"type": "code", "text": ["density"]}, ", ", {"type": "code", "text": ["temperature"]}, "), you can use a ", {"scheme": "Node", "value": "/nodes/sop/name", "type": "link", "text": ["Name surface node"], "fullpath": "/nodes/sop/name.html"}, " to rename the field to one of ", {"type": "code", "text": ["user1"]}, ", ", {"type": "code", "text": ["user2"]}, ", etc. Then in the material, use the controls on this sub-tab to add the field(s) into the material\u2019s pop-up menus."], "extent": [60426, 60782]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Include in menus"], "extent": [60782, 60800], "body": [{"type": "para", "indent": 4, "text": ["Turn this on to add a given ", {"type": "code", "text": ["user", {"type": "var", "text": ["n"]}]}, " field to the pop-up menus of available fields in the material\u2019s interface."], "extent": [60800, 60924]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Label"], "extent": [60924, 60931], "body": [{"type": "para", "indent": 4, "text": ["A short, descriptive label for the field. This is how the field will appear in the pop-up field menus. This string can include spaces and other non-alphanumeric characters."], "extent": [60931, 61113]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Comment"], "extent": [61113, 61122], "body": [{"type": "para", "indent": 4, "text": ["An optional longer description of the field and its purpose. This value is not used by the material, it\u2019s simply a convenient place to record information."], "extent": [61122, 61282]}], "container": true, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 3, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Output variables"], "extent": [61282, 61307], "body": [{"type": "para", "indent": 0, "text": ["A list of variables exported by this material."], "extent": [61307, 61356]}]}]}, {"level": 2, "id": "colorcorrect", "container": true, "type": "h", "indent": 0, "text": ["Color correction controls"], "extent": [61356, 61403], "body": [{"type": "para", "indent": 0, "text": ["Each of the principal tabs, Smoke, Fire, and Scattering, has a block of color correction parameters. These are conveniences to allow in-shader tweaking of the final composition of each component. It is not always possible to delegate all correction to the compositing stage when working with volumes because the components influence each other during evaluation, so it is sometimes useful to have some basic correction control at the shading stage."], "extent": [61403, 61854]}, {"type": "para", "indent": 0, "text": ["These corrections are applied in the order they appear in the interface. That is, HSV, then Contrast, then Gamma, and finally Tint."], "extent": [61854, 61987]}, {"type": "para", "indent": 0, "text": ["Beyond that, the meaning of these corrections should hopefully be self explanatory as they are no different than the similarly named corrections found in the Halo (or, indeed, any other) compositing environment. Perhaps the only thing worth mentioning is the HSV correction as it is compressed into a single vector parameter."], "extent": [61987, 62314]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Enable color correction"], "extent": [62314, 62339], "body": [{"type": "para", "indent": 4, "text": ["When this option is on, the material uses the parameters below to modify the final composition of the Smoke, Fire, or Scattering."], "extent": [62339, 62474]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["HSV"], "extent": [62474, 62479], "body": [{"type": "para", "indent": 4, "text": ["Rotates the hue. This value is normalized 0-1, so a value of 1 rotates the hue by 360\u00b0 (a full rotation back to the starting hue). This value is not bounded and can be either positive or negative. For example, a value of -0.5 will rotate the hue by -180\u00b0 and be equivalent to -1.5, -2.5, -3.5, etc."], "extent": [62479, 62783]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Contrast"], "extent": [62783, 62793], "body": [{"type": "para", "indent": 4, "text": ["Increases or decreases the contrast."], "extent": [62793, 62835]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Gamma"], "extent": [62835, 62842], "body": [{"type": "para", "indent": 4, "text": ["Modifies the gamma."], "extent": [62842, 62867]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Tint"], "extent": [62867, 62873], "body": [{"type": "para", "indent": 4, "text": ["Tints the output color with a second color."], "extent": [62873, 62922]}], "container": true, "role": "item"}], "container": true, "role": "item_group"}]}], "text": "Parameters"}, {"level": 1, "id": "related", "container": true, "type": "related_section", "indent": 0, "role": "section", "extent": [62922, 62931], "body": [{"type": "bullet_group", "body": [{"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": null, "value": "/pyro/pyro", "type": "link", "text": ["Pyro effects"], "fullpath": "/pyro/pyro.html"}], "extent": [62931, 62960]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": null, "value": "/network/ramps", "type": "link", "text": ["Using ramps"], "fullpath": "/network/ramps.html"}], "extent": [62960, 62992]}], "container": true}], "text": "Related"}], "title": ["Pyro"], "summary": ["Flexible, production-quality fire and smoke shader."]}