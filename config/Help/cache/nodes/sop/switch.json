{"type": "root", "attrs": {"type": "node", "context": "sop", "internal": "switch", "icon": "COMMON/switch", "tags": "util, network", "version": null, "namespace": null}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["Switch"], "extent": [88, 99]}, {"type": "summary", "indent": 0, "text": ["Switches between network branches based on an expression or keyframe animation."], "extent": [99, 187]}, {"type": "para", "indent": 0, "text": ["This node passes the input specified in the ", {"type": "ui", "text": ["Select input"]}, " parameter to the output. The input numbering starts at 0. You can control the parameter with an\n", {"scheme": null, "value": "/expressions/", "type": "link", "text": ["expression"], "fullpath": "/expressions/index.html"}, "  or animate it."], "extent": [187, 388]}, {"type": "para", "indent": 0, "text": ["For example, you could use the expression ", {"type": "code", "text": ["$F - 1"]}, " to switch to the\nfirst input at frame 1, the second input at frame 2, and so on. Use the\nexpression ", {"type": "code", "text": ["($F >= 5)"]}, " to use the first input for the first four frames,\nand the second input afterward (boolean operators such as ", {"type": "code", "text": [">="]}, " return\n", {"type": "code", "text": ["0"]}, " for false and ", {"type": "code", "text": ["1"]}, " for true, so the switch will select input 0 when\nthe expression is false and input 1 when the expression is true)."], "extent": [388, 810]}, {"type": "tip_group", "body": [{"type": "tip", "indent": 0, "role": "item", "extent": [810, 815], "body": [{"type": "para", "indent": 4, "text": ["Often, you can use a Switch in a network that could potentially have\n    errors to bypass the failing nodes. One way to do this is to use the\n    following python expression in the ", {"type": "ui", "text": ["Select Input"]}, " parameter:"], "extent": [815, 1029]}, {"lang": "python", "type": "pre", "indent": 4, "text": ["\n    1 if hou.pwd().inputs()[1].geometry() else 0\n    "], "extent": [1029, 1107]}, {"type": "para", "indent": 4, "text": ["With this python expression, the switch will use the ", {"type": "em", "text": ["second"]}, " input, unless\n    it has an error, in which case it will switch to the ", {"type": "em", "text": ["first"]}, " input. It\n    tests if the second input (index ", {"type": "code", "text": ["1"]}, ") successfully cooks with geometry\n    before returning its index.  "], "extent": [1107, 1372]}, {"type": "para", "indent": 4, "text": ["However, the above expression doesn\u2019t check if the geometry is empty. For\n    example, when an Object Merge fails to find the given node path, it\n    generates a warning and outputs empty geometry instead. We can enhance the\n    expression to take this into account like this:"], "extent": [1372, 1654]}, {"lang": "python", "type": "pre", "indent": 4, "text": ["\n    geo = hou.pwd().inputs()[1].geometry() \n    1 if geo and geo.point(0) else 0\n    "], "extent": [1654, 1764]}], "container": true}], "container": true, "role": "item_group"}, {"type": "vimeo_group", "body": [{"ext": null, "type": "vimeo", "indent": 0, "text": [" Switch SOP"], "role": "item", "extent": [1764, 1784], "body": [], "container": true, "attrs": {"id": "406959467"}}], "container": true, "role": "item_group"}, {"level": 1, "id": "parameters", "container": true, "type": "parameters_section", "indent": 0, "role": "section", "extent": [1804, 1816], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 4, "text": ["Select Input"], "extent": [1816, 1834], "body": [{"type": "para", "indent": 8, "text": ["The input number (starting at 0) to pass to the output. You can\n        use an expression to control this or animate the parameter\n        value."], "extent": [1861, 2016]}], "container": true, "attrs": {"channels": "/input"}, "role": "item"}], "container": true, "role": "item_group"}], "text": "Parameters"}], "title": ["Switch"], "summary": ["Switches between network branches based on an expression or keyframe animation."]}