{"type": "root", "attrs": {"type": "node", "context": "sop", "internal": "agentlayer", "icon": "CROWDS/agentlayer", "since": "14.5", "version": "", "namespace": null}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["Agent Layer"], "extent": [87, 103]}, {"type": "summary", "indent": 0, "text": ["Adds a new layer to agent primitives."], "extent": [103, 149]}, {"type": "para", "indent": 0, "text": ["This node creates custom agent layers which can be used to add variations to the look of the agent.\nA layer specifies an assignment of shapes from the agent\u2019s shape library to transforms in its rig.\nNew geometry shapes can be added to the shape library and then attached to specific transforms."], "extent": [149, 445]}, {"level": 1, "id": "parameters", "container": true, "type": "parameters_section", "indent": 0, "role": "section", "extent": [445, 457], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Group"], "extent": [457, 465], "body": [{"type": "para", "indent": 4, "text": ["The agents to add the new layer to."], "extent": [465, 506]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Layer Name"], "extent": [506, 518], "body": [{"type": "para", "indent": 4, "text": ["The name of the new layer."], "extent": [518, 550]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Keep External References"], "extent": [1856, 1886], "body": [{"type": "para", "indent": 8, "text": ["When new shapes are added to the shape library, a copy is first made so that the modifications do not affect other agents that reference the original shape library (such as those in the input SOP\u2019s geometry).\n        When this option is turned on, and the original shape library references a file on disk, the new shape library is marked as ", {"type": "em", "text": ["including"]}, " the original shape library.\n        In this situation, when the agent is saved to a geometry file, the path to the original shape library is saved out along with any new shapes that were not included from the original library.\n        Otherwise, the entire shape library is saved to the geometry file, and the original shape library file is not referenced."], "extent": [1915, 2634]}], "container": true, "attrs": {"id": "keepexternalref"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Set as Current Layer"], "extent": [599, 621], "body": [{"type": "para", "indent": 4, "text": ["Sets the current layer of each agent to the new layer."], "extent": [621, 681]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Set as Collision Layer"], "extent": [681, 705], "body": [{"type": "para", "indent": 4, "text": ["Sets the collision layer of each agent to the new layer."], "extent": [705, 767]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Copy Source Layer"], "extent": [767, 786], "body": [{"type": "para", "indent": 4, "text": ["Specifies whether to use an existing layer as the starting point for the new layer. All of the shape bindings from the ", {"type": "ui", "text": ["Source Layer"]}, " will be copied."], "extent": [786, 943]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Source Layer"], "extent": [943, 957], "body": [{"type": "para", "indent": 4, "text": ["If ", {"type": "ui", "text": ["Copy Source Layer"]}, " is enabled, specifies the name of an existing layer to copy shape bindings from."], "extent": [957, 1068]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Source Layer Bindings"], "extent": [1068, 1091], "body": [{"type": "para", "indent": 4, "text": ["Specifies a pattern of transform names.\n    Shape bindings that are attached to these transforms will be copied from the ", {"type": "ui", "text": ["Source Layer"]}, ".\n    The pattern follows the same syntax as the ", {"scheme": "Vex", "value": "/vex/functions/match", "type": "link", "text": ["match"], "fallback_text": "match()", "fullpath": "/vex/functions/match.html"}, " VEX function."], "extent": [1091, 1314]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Source Layer Shapes"], "extent": [1314, 1335], "body": [{"type": "para", "indent": 4, "text": ["Specifies a pattern of shape names.\n    Shape bindings that use these shapes (and also match the ", {"type": "ui", "text": ["Source Layer Bindings"]}, " pattern) will be copied from the ", {"type": "ui", "text": ["Source Layer"]}, ".\n    The pattern follows the same syntax as the ", {"scheme": "Vex", "value": "/vex/functions/match", "type": "link", "text": ["match"], "fallback_text": "match()", "fullpath": "/vex/functions/match.html"}, " VEX function."], "extent": [1335, 1593]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Add Shapes by Name"], "extent": [1593, 1613], "body": [{"type": "para", "indent": 4, "text": ["For every unique value of the ", {"type": "ui", "text": ["Name Attribute"]}, " in the input shape geometry, a shape will be added to the shape library using the primitives that have that attribute value.\n    If the second input is not connected, the ", {"type": "ui", "text": ["Shape Geometry Path"]}, " specifies the SOP to read the geometry from."], "extent": [1613, 1907]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Shape Geometry Path"], "extent": [1907, 1928], "body": [{"type": "para", "indent": 4, "text": ["Specifies the geometry to use when ", {"type": "ui", "text": ["Add Shapes by Name"]}, " is enabled and the second input is not connected."], "extent": [1928, 2041]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Name Attribute"], "extent": [2041, 2057], "body": [{"type": "para", "indent": 4, "text": ["Specifies the primitive string attribute used to identify primitives belonging to each shape in the ", {"type": "ui", "text": ["Shape Geometry Path"]}, "."], "extent": [2057, 2187]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Use Name As"], "extent": [2187, 2200], "body": [{"type": "para", "indent": 4, "text": ["Specifies how the ", {"type": "ui", "text": ["Name Attribute"]}, " values are interpreted."], "extent": [2200, 2266]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Shape Name"], "extent": [2266, 2282], "body": [{"type": "para", "indent": 8, "text": ["The attribute value is used as the shape name, and a shape binding is added to the layer for each shape.\n        If the ", {"type": "code", "text": ["boneCapture"]}, " point attribute is present, the shape binding will use the ", {"type": "code", "text": ["linearskinning"]}, " deformer by default.\n        However, if the shape geometry consists of a single packed primitive and its point is weighted to a single joint (i.e. describing a rigid deformation), this will be translated into a static shape binding.\n        This mode can be used to import shapes from SOPs such as ", {"scheme": "Node", "value": "/nodes/sop/kinefx--usdskinimport", "type": "link", "text": ["USD Skin Import"], "fullpath": "/nodes/sop/kinefx--usdskinimport.html"}, " and ", {"scheme": "Node", "value": "/nodes/sop/kinefx--agentcharacterunpack", "type": "link", "text": ["Agent Character Unpack"], "fullpath": "/nodes/sop/kinefx--agentcharacterunpack.html"}, ", and gives more control over how the shapes are named."], "extent": [2282, 2970]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Transform Name"], "extent": [2970, 2990], "body": [{"type": "para", "indent": 8, "text": ["The attribute value specifies which transform in the agent\u2019s rig that the shape should be attached to.\n        If the transform exists, a shape binding is added to the layer.\n        The shape is named as ", {"type": "code", "text": ["{layer}.{transform}"]}, "."], "extent": [2990, 3227]}], "container": true}], "container": true}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Layer Bindings"], "extent": [3227, 3243], "body": [{"type": "para", "indent": 4, "text": ["Specifies the number of shape bindings that should be added."], "extent": [3243, 3309]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Enable"], "extent": [3309, 3317], "body": [{"type": "para", "indent": 4, "text": ["Toggles whether the shape binding is added to the layer."], "extent": [3317, 3379]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Transform Name"], "extent": [3379, 3395], "body": [{"type": "para", "indent": 4, "text": ["Specifies which transform in the rig the shape should be attached to."], "extent": [3395, 3470]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Shape"], "extent": [3470, 3477], "body": [{"type": "para", "indent": 4, "text": ["The name of an existing shape from the agent\u2019s shape library that should be attached to the ", {"type": "ui", "text": ["Transform Name"]}, "."], "extent": [3477, 3594]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Add Shape"], "extent": [3594, 3605], "body": [{"type": "para", "indent": 4, "text": ["If enabled, adds a new shape to the agent\u2019s shape library and attaches it to the ", {"type": "ui", "text": ["Transform Name"]}, "."], "extent": [3605, 3711]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["SOP Path"], "extent": [3711, 3721], "body": [{"type": "para", "indent": 4, "text": ["The SOP geometry for the new shape."], "extent": [3721, 3762]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Shape Name"], "extent": [3762, 3774], "body": [{"type": "para", "indent": 4, "text": ["A unique identifier for the new shape."], "extent": [3774, 3818]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Bounds Scale"], "extent": [2663, 2686], "body": [{"type": "para", "indent": 12, "text": ["A multiplier for the size of the shape\u2019s bounding box when computing the layer\u2019s bounds.\n            See ", {"scheme": null, "value": "/crowds/agents#boundingbox", "type": "link", "text": ["Agent Primitives"], "fullpath": "/crowds/agents.html#boundingbox", "fragment": "#boundingbox"}, " for more information on how an agent\u2019s bounding box is computed."], "extent": [2715, 2944]}], "container": true, "attrs": {"id": "boundsscale"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Shape Deformer"], "extent": [3863, 3879], "body": [{"type": "para", "indent": 4, "text": ["Specifies the name of the ", {"scheme": null, "value": "/crowds/agents#deformer", "type": "link", "text": ["deformer"], "fullpath": "/crowds/agents.html#deformer", "fragment": "#deformer"}, " to use for the shape binding."], "extent": [3879, 3975]}, {"type": "para", "indent": 4, "text": ["If the deformer is not explicitly specified, it will be automatically set to ", {"type": "code", "text": ["linearskinning"]}, " if the ", {"type": "code", "text": ["boneCapture"]}, " attribute exists on the shape\u2019s geometry.\n    Additionally, if a new shape is being added and the ", {"type": "ui", "text": ["SOP Path"]}, " points to a ", {"scheme": "Node", "value": "/nodes/sop/bonedeform", "type": "link", "text": ["Bone Deform SOP"], "fullpath": "/nodes/sop/bonedeform.html"}, ", the deformer will be determined based on its ", {"type": "ui", "text": ["Skinning Method"]}, " parameter."], "extent": [3975, 4333]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Keep Position When Attaching"], "extent": [4333, 4363], "body": [{"type": "para", "indent": 4, "text": ["Specifies that the new shape should be transformed before being added to the shape library so that its current world position will be maintained after being attached to the ", {"type": "ui", "text": ["Transform Name"]}, "."], "extent": [4363, 4561]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Translate"], "extent": [4561, 4572], "body": [{"type": "para", "indent": 4, "text": ["Specifies the translation component of a transform to be applied to the shape before adding it to the shape library."], "extent": [4572, 4694]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Rotate"], "extent": [4694, 4702], "body": [{"type": "para", "indent": 4, "text": ["Specifies the rotation component (in degrees) of a transform to be applied to the shape before adding it to the shape library."], "extent": [4702, 4834]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Scale"], "extent": [4834, 4841], "body": [{"type": "para", "indent": 4, "text": ["Specifies the scale component of a transform to be applied to the shape before adding it to the shape library."], "extent": [4841, 4957]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Shear"], "extent": [4957, 4964], "body": [{"type": "para", "indent": 4, "text": ["Specifies the shear component of a transform to be applied to the shape before adding it to the shape library."], "extent": [4964, 5080]}], "container": true, "role": "item"}], "container": true, "role": "item_group"}], "text": "Parameters"}, {"level": 1, "id": "inputs", "container": true, "type": "inputs_section", "indent": 0, "role": "section", "extent": [5080, 5088], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Agents"], "extent": [5088, 5100], "body": [{"type": "para", "indent": 8, "text": ["Agent primitives to be used in crowd simulation."], "extent": [5100, 5158]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Shape Geometry"], "extent": [5158, 5178], "body": [{"type": "para", "indent": 8, "text": ["Optional input providing shapes to be imported when ", {"type": "ui", "text": ["Add Shapes by Name"]}, " is enabled."], "extent": [5178, 5274]}], "container": true}], "container": true}], "text": "Inputs"}, {"level": 1, "id": "outputs", "container": true, "type": "outputs_section", "indent": 0, "role": "section", "extent": [5274, 5283], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Agents"], "extent": [5283, 5295], "body": [{"type": "para", "indent": 8, "text": ["Agent primitives to be used in crowd simulation with additional layer and shape information."], "extent": [5295, 5397]}], "container": true}], "container": true}], "text": "Outputs"}, {"level": 1, "id": "related", "container": true, "type": "related_section", "indent": 0, "role": "section", "extent": [5397, 5406], "body": [{"type": "bullet_group", "body": [{"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/sop/agent", "type": "link", "text": "", "fullpath": "/nodes/sop/agent.html"}], "extent": [5406, 5425]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/dop/crowdsolver", "type": "link", "text": "", "fullpath": "/nodes/dop/crowdsolver.html"}], "extent": [5425, 5450]}], "container": true}], "text": "Related"}], "title": ["Agent Layer"], "summary": ["Adds a new layer to agent primitives."], "included": ["/nodes/sop/agentlayer"]}