{"type": "root", "attrs": {"type": "node", "context": "sop", "internal": "blendshapes", "icon": "SOP/blendshapes", "tags": "reshape, morph", "version": "", "namespace": null}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["Blend Shapes"], "extent": [0, 17]}, {"type": "summary", "indent": 0, "text": ["Computes a 3D metamorphosis between shapes with the same\ntopology."], "extent": [113, 187]}, {"type": "para", "indent": 0, "text": ["Blend Shapes can blend between its inputs using average weights of each\ninput\u2019s respective channel. It interpolates point colors and/or texture\nco-ordinates between shapes."], "extent": [187, 362]}, {"level": 1, "id": "parameters", "container": true, "type": "parameters_section", "indent": 0, "role": "section", "extent": [362, 374], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 4, "text": ["Group"], "extent": [374, 385], "body": [{"type": "para", "indent": 8, "text": ["Points or primitives in the first input to be blended."], "extent": [385, 448]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Differencing"], "extent": [448, 466], "body": [{"type": "para", "indent": 8, "text": ["Exaggerates blends between objects where values above 1 or less\n        than 0 will result in over-scaled shapes."], "extent": [466, 588]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Selection Index"], "extent": [588, 609], "body": [{"type": "para", "indent": 8, "text": ["Specifies which input to use when generating the cooked\n        selection."], "extent": [643, 726]}], "container": true, "attrs": {"channels": "/selectionidx"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Blend Position"], "extent": [726, 746], "body": [{"type": "para", "indent": 8, "text": ["Enables blending of point positions."], "extent": [746, 791]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Blend Colors"], "extent": [791, 809], "body": [{"type": "para", "indent": 8, "text": ["Enables blending of point colors and alphas."], "extent": [809, 862]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Blend Normals"], "extent": [862, 881], "body": [{"type": "para", "indent": 8, "text": ["Enables blending of point normals."], "extent": [881, 924]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Blend Texture"], "extent": [924, 943], "body": [{"type": "para", "indent": 8, "text": ["Enables blending of texture coordinates."], "extent": [943, 992]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Blend Voxel Data"], "extent": [992, 1014], "body": [{"type": "para", "indent": 8, "text": ["Matching volumes will blend their data.  This is not done by spatial\n        position, but by absolute voxel index."], "extent": [1014, 1138]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Shortest Path Transform Blending"], "extent": [1138, 1176], "body": [{"type": "para", "indent": 8, "text": ["Enables use of spherical linear interpolation to blend primitive\n        transforms."], "extent": [1176, 1269]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Point Id Attribute"], "extent": [1269, 1293], "body": [{"type": "para", "indent": 8, "text": ["If this attribute exists, it will be used to find corresponding points\n        in the different blend shapes.  For example, using id will allow\n        particle systems to find matching points even if particles are deleted.\n        If it does not exist or is blank, point numbers will be used for the\n        matching."], "extent": [1293, 1620]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Primitive Id Attribute"], "extent": [1620, 1648], "body": [{"type": "para", "indent": 8, "text": ["If this attribute exists, it will be used to find corresponding\n        primitives in the different blend shapes.  For example, using name\n        will allow fluid systems to find matching volumes even if volumes\n        are reordered.  If it does not exist or is blank, primitive numbers\n        will be used for the matching."], "extent": [1648, 1984]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Assume Only Coordinate Changes In Input"], "extent": [1984, 2029], "body": [{"type": "para", "indent": 8, "text": ["This accelerates the blend speed when there exists an animated\n        input that only has changing point positions. Unpredictable\n        results will occur with this enabled if attributes or topology\n        changes."], "extent": [2029, 2256]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Assume Morph Network Setup"], "extent": [2256, 2288], "body": [{"type": "para", "indent": 8, "text": ["This accelerates the blend speed when the inputs have the\n        particular wiring the Morph tool creates. The blend speed can be\n        accelerated when the following three properties are true: "], "extent": [2288, 2494]}, {"type": "ord_group", "body": [{"blevel": 10, "type": "ord", "indent": 8, "text": ["All of the inputs to the BlendShapes SOP after the first input are Edit SOPs. "], "extent": [2494, 2583]}, {"blevel": 10, "type": "ord", "indent": 8, "text": ["The first input to the BlendShapes SOP is the same as the first input to all of the Edit SOPs. "], "extent": [2583, 2689]}, {"blevel": 10, "type": "ord", "indent": 8, "text": ["If the Edit SOPs have a second input, they must all be the same."], "extent": [2689, 2764]}], "container": true}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Blends"], "extent": [2764, 2776], "body": [{"type": "para", "indent": 8, "text": ["Controls contribution of geometry inputs."], "extent": [2825, 2876]}], "container": true, "attrs": {"channels": "/shape0 /shape1 /shape2 /..."}, "role": "item"}], "container": true, "role": "item_group"}], "text": "Parameters"}, {"level": 1, "id": "related", "container": true, "type": "related_section", "indent": 0, "role": "section", "extent": [2876, 2885], "body": [{"type": "bullet_group", "body": [{"blevel": 6, "type": "bullet", "indent": 4, "text": [{"scheme": "Node", "value": "/nodes/sop/sblend", "type": "link", "text": "", "fullpath": "/nodes/sop/sblend.html"}], "extent": [2885, 2909]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": [{"scheme": "Node", "value": "/nodes/sop/timeblend", "type": "link", "text": "", "fullpath": "/nodes/sop/timeblend.html"}], "extent": [2909, 2937]}], "container": true}], "text": "Related"}], "title": ["Blend Shapes"], "summary": ["Computes a 3D metamorphosis between shapes with the same\ntopology."]}