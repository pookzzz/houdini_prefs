{"type": "root", "attrs": {"type": "node", "context": "sop", "internal": "pathdeform", "icon": "SOP/pathdeform", "tags": "curves, deform", "since": "18.0", "version": null, "namespace": null}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["Path Deform"], "extent": [0, 16]}, {"type": "summary", "indent": 0, "text": ["Deforms geometry using the shape of a curve."], "extent": [122, 174]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Overview"], "extent": [174, 189], "body": [{"type": "vimeo_group", "body": [{"ext": null, "type": "vimeo", "indent": 0, "text": [" Path Deform"], "role": "item", "extent": [189, 210], "body": [], "container": true, "attrs": {"id": "429592060"}}], "container": true, "role": "item_group"}, {"type": "para", "indent": 0, "text": ["This node bends geometry to follow the shape of a curve. It also lets you apply secondary deformations such as scaling and twisting to the curved model."], "extent": [230, 384]}, {"type": "para", "indent": 0, "text": ["This is useful in many scenarios, such as:"], "extent": [384, 428]}, {"type": "bullet_group", "body": [{"blevel": 2, "type": "bullet", "indent": 0, "text": ["Model a long flexible object (such as a belt) straight, then use this node to deform it into the desired shape."], "extent": [428, 543]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": ["Animate the curve to animate deformation of static geometry, for example a cracking whip."], "extent": [543, 636]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": ["Animate the mapping of the model onto the curve, for example to make an swimming shark follow and bend along a preset path."], "extent": [636, 763]}], "container": true}, {"type": "para", "indent": 0, "text": ["This node is related to the ", {"scheme": "Node", "value": "/nodes/sop/sweep", "type": "link", "text": ["Sweep node"], "fullpath": "/nodes/sop/sweep.html"}, ". Whereas the Sweep node ", {"type": "em", "text": ["generates"]}, " geometry by interpolating between profile shapes along a curve, this node ", {"type": "em", "text": ["reshapes"]}, " an existing model by mapping the curve\u2019s differences from a straight line onto the points of the model."], "extent": [763, 1046]}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Capturing the model"], "extent": [1046, 1072], "body": [{"type": "bullet_group", "body": [{"blevel": 2, "type": "bullet", "indent": 0, "text": ["By default, the node assumes the geometry is modeled along the Z axis, with the ", {"type": "q", "text": ["front"]}, " in the positive Z direction (this is the standard default for Houdini tools). You can change this using the ", {"type": "ui", "text": ["Forward direction"]}, " parameter on the ", {"type": "ui", "text": ["Capture and Align"]}, " tab."], "extent": [1072, 1338]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": ["This node only bends the parts of the geometry inside a ", {"type": "em", "text": ["capture region"]}, ". Parts of the model outside the capture region still move with the rest of the model, but do not bend or stretch. This is useful if you only want the front, or middle, or back of the model to bend."], "extent": [1338, 1612]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": ["By default, the node captures the entire model, and centers the capture region on the model\u2019s center."], "extent": [1612, 1717]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": ["By default, the geometry does ", {"type": "em", "text": ["not"]}, " need to be at the origin. The node will automatically snap the model onto the curve, ignoring any translation away from the origin."], "extent": [1717, 1888], "body": [{"type": "para", "indent": 4, "text": ["You can choose instead to incorporate the model\u2019s offset from the origin as an offset from the curve. Turn off ", {"type": "ui", "text": ["Center geometry on curve"]}, " on the ", {"type": "ui", "text": ["Capture and Align"]}, " tab."], "extent": [1888, 2067]}], "container": true}, {"blevel": 2, "type": "bullet", "indent": 0, "text": ["You can then adjust the start and end of the capture region using ", {"type": "ui", "text": ["Geo capture start"]}, " and ", {"type": "ui", "text": ["Geo capture end"]}, " parameters on the ", {"type": "ui", "text": ["Capture and Align"]}, "."], "extent": [2067, 2223]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": ["It is possible to set a custom capture origin and custom offset by setting ", {"type": "ui", "text": ["Geo capture origin"]}, " to Custom on the ", {"type": "ui", "text": ["Capture and Align"]}, " tab."], "extent": [2223, 2368], "body": [{"type": "para", "indent": 4, "text": ["You can imagine the node starting with a plane centered at the capture origin, perpendicular to the forward direction. It then sweeps the plane along the forward direction, capturing any geometry. If the origin is past the start of the geometry, the start of the geometry will not be captured. If the origin is before the start of the geometry (and/or offset in the other two axes), the model will be offset from the curve."], "extent": [2368, 2798]}], "container": true}], "container": true}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Tips and notes"], "extent": [2798, 2819], "body": [{"type": "bullet_group", "body": [{"blevel": 2, "type": "bullet", "indent": 0, "text": ["If you drew the curve in the ", {"type": "q", "text": ["wrong"]}, " direction, you can reverse it on the ", {"type": "ui", "text": ["Capture and align"]}, " tab. (You don\u2019t need to add a separate node to reverse the curve before the input.) You can choose to also reverse the normals or not."], "extent": [2819, 3054]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": ["This node works by moving the points of the input geometry. It does not change the topology (that is, the number of points, or how the points connect to form polygons) of the model."], "extent": [3054, 3239]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": ["You can use an attribute to specify certain parts of the model as more or less ", {"type": "em", "text": ["rigid"]}, " (resistant to deformation). See the Rigidity section at the bottom of the ", {"type": "ui", "text": ["Map and Deform"]}, " tab."], "extent": [3239, 3428]}], "container": true}]}, {"level": 1, "id": "inputs", "container": true, "type": "inputs_section", "indent": 0, "role": "section", "extent": [3428, 3436], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 0, "text": ["Geometry to deform"], "extent": [3436, 3457], "body": [{"type": "para", "indent": 4, "text": ["The node reshapes this geometry."], "extent": [3457, 3495]}], "container": true}, {"type": "dt", "indent": 0, "text": ["Spine curve"], "extent": [3495, 3508], "body": [{"type": "para", "indent": 4, "text": ["The node uses the curve connected to this input to reshape the geometry in the first input."], "extent": [3508, 3606]}], "container": true}], "container": true}], "text": "Inputs"}, {"level": 1, "id": "parameters", "container": true, "type": "parameters_section", "indent": 0, "role": "section", "extent": [3606, 3618], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Group"], "extent": [3618, 3626], "body": [{"type": "para", "indent": 4, "text": ["A group name, or list of primitive, edge, point, or vertex numbers specifying what geometry in the input to deform (see ", {"scheme": null, "value": "/model/groups", "type": "link", "text": ["group syntax"], "fullpath": "/model/groups.html"}, "). Click the ", {"scheme": "Icon", "value": "BUTTON/reselect", "type": "link", "text": "", "fullpath": "/nodes/sop/BUTTON/reselect.html"}, " Reselect button to the right of the field to select geometry in the viewport. If this field is blank, the node deforms all geometry in the first input."], "extent": [3642, 3983]}], "container": true, "attrs": {"id": "group"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Group type"], "extent": [3983, 3995], "body": [{"type": "para", "indent": 4, "text": ["The component type the names/numbers in the ", {"type": "ui", "text": ["Group"]}, " field refer to (primitives, edges, points, or vertices)."], "extent": [4015, 4132]}], "container": true, "attrs": {"id": "grouptype"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Curves"], "extent": [4132, 4140], "body": [{"type": "para", "indent": 4, "text": ["A primitive group on the second input used to specify which curves to map geometry onto."], "extent": [4161, 4255]}], "container": true, "attrs": {"id": "curvegroup"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Match Geometry to Curves using Piece Attribute"], "extent": [4255, 4303], "body": [{"type": "para", "indent": 4, "text": ["Whether to use a piece attribute on both the geometry on the curves to specify which piece\n    of geometry is mapped to each curve."], "extent": [4321, 4458]}], "container": true, "attrs": {"id": "usepiece"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Piece Attribute"], "extent": [4458, 4475], "body": [{"type": "para", "indent": 4, "text": ["The attribute on both the curves and the geometry used to match pieces of geometry with curves.\n    Each piece of geometry is mapped to each matching curve with the same piece attribute value."], "extent": [4496, 4694]}], "container": true, "attrs": {"id": "pieceattrib"}, "role": "item"}], "container": true, "role": "item_group"}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Map and Deform"], "extent": [4694, 4715], "body": [{"level": 3, "type": "sep", "indent": 0, "text": [" Mappings "], "extent": [4715, 4733]}, {"type": "para", "indent": 0, "text": ["These parameters let you map the deformed model onto the curve, by setting a start offset and length."], "extent": [4733, 4837]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Enable Deformation"], "extent": [4837, 4857], "body": [{"type": "para", "indent": 4, "text": ["Turning this off prevents the node from deforming the input geometry. This can be useful to let you see how the ", {"scheme": null, "value": "#capture_tab", "type": "link", "text": ["capture region"], "fullpath": "/nodes/sop/pathdeform.html#capture_tab", "fragment": "#capture_tab"}, " relates to the pre-deformed input model."], "extent": [4886, 5074]}], "container": true, "attrs": {"id": "enabledeformations"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Map Length Using"], "extent": [5074, 5092], "body": [{"type": "para", "indent": 4, "text": ["How you want to specify the length (as measured along the ", {"type": "ui", "text": ["Forward direction"]}, ") of the deformed model:"], "extent": [5116, 5225]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Fraction of Curve Length"], "extent": [5225, 5255], "body": [{"type": "para", "indent": 8, "text": ["Specify the length as a fraction of the length of the curve, from ", {"type": "code", "text": ["0"]}, " to ", {"type": "code", "text": ["1"]}, ". This is useful, for example, to stretch the model to run the full length of the curve by choosing this option and setting the value to ", {"type": "code", "text": ["1"]}, "."], "extent": [5255, 5482]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Fraction of Geo Length"], "extent": [5482, 5510], "body": [{"type": "para", "indent": 8, "text": ["Specify the length as a fraction of the length of the pre-deformed model (measured along the ", {"type": "ui", "text": ["Forward direction"]}, "), from ", {"type": "code", "text": ["0"]}, " to ", {"type": "code", "text": ["1"]}, ". This is useful, for example, to maintain the original length of the model by choosing this option and setting the value to ", {"type": "code", "text": ["1"]}, "."], "extent": [5510, 5781]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Distance"], "extent": [5781, 5795], "body": [{"type": "para", "indent": 8, "text": ["Specify the deformed length in world-space units."], "extent": [5795, 5854]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "curve_endunit"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["End Position Offset"], "extent": [5854, 5875], "body": [{"type": "para", "indent": 4, "text": ["The length of the deformed geometry when mapped onto the curve, using the units specified in the ", {"type": "ui", "text": ["Offset end using"]}, " dropdown menu."], "extent": [5898, 6036]}], "container": true, "attrs": {"id": "curve_posend"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Override"], "extent": [6036, 6046], "body": [{"type": "para", "indent": 4, "text": ["Whether to override the ", {"type": "ui", "text": ["Length"]}, " with a primitive attribute on the curves."], "extent": [6076, 6158]}], "container": true, "attrs": {"id": "curve_posendoverride"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Pos End Attribute"], "extent": [6158, 6177], "body": [{"type": "para", "indent": 4, "text": ["A primitive attribute on the curves specifying the ", {"type": "ui", "text": ["Length"]}, " on each curve."], "extent": [6205, 6287]}], "container": true, "attrs": {"id": "curve_posendattrib"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Offset Position Using"], "extent": [6287, 6310], "body": [{"type": "para", "indent": 4, "text": ["How you want to specify the model\u2019s position on the curve:"], "extent": [6340, 6404]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Curve U Position"], "extent": [6404, 6426], "body": [{"type": "para", "indent": 8, "text": ["Specify the start position as a fraction of the length of the curve, from ", {"type": "code", "text": ["0"]}, " to ", {"type": "code", "text": ["1"]}, ", where ", {"type": "code", "text": ["0"]}, " has the start of the model at the start of the curve, and ", {"type": "code", "text": ["1"]}, " has the start of the model at the end of the curve."], "extent": [6426, 6645]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Fraction of Geo Length"], "extent": [6645, 6673], "body": [{"type": "para", "indent": 8, "text": ["Specify the start position as a fraction of the length of the model (measured along the ", {"type": "ui", "text": ["Forward direction"]}, "), from ", {"type": "code", "text": ["0"]}, " to ", {"type": "code", "text": ["1"]}, ", where ", {"type": "code", "text": ["0"]}, " has the start of the model at the start of the curve, and ", {"type": "code", "text": ["1"]}, " has the ", {"type": "em", "text": ["end"]}, " of the model at the ", {"type": "em", "text": ["end"]}, " of the curve."], "extent": [6673, 6937]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Distance"], "extent": [6937, 6951], "body": [{"type": "para", "indent": 8, "text": ["Specify the distance along the curve in world-space units."], "extent": [6951, 7019]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "curve_posoffsetunit"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Position Offset"], "extent": [7019, 7036], "body": [{"type": "para", "indent": 4, "text": ["Sets the start position of the model along the curve, using the units specified in the ", {"type": "ui", "text": ["Offset position using"]}, " dropdown menu."], "extent": [7062, 7195]}], "container": true, "attrs": {"id": "curve_posoffset"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Override"], "extent": [7195, 7205], "body": [{"type": "para", "indent": 4, "text": ["Whether to override the ", {"type": "ui", "text": ["Position Offset"]}, " with a primitive attribute on the curves."], "extent": [7238, 7329]}], "container": true, "attrs": {"id": "curve_posoffsetoverride"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Pos Offset Attribute"], "extent": [7329, 7351], "body": [{"type": "para", "indent": 4, "text": ["A primitive attribute on the curves specifying the ", {"type": "ui", "text": ["Position Offset"]}, " on each curve."], "extent": [7382, 7473]}], "container": true, "attrs": {"id": "curve_posoffsetattrib"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Uniform Scale"], "extent": [7473, 7488], "body": [{"type": "para", "indent": 4, "text": ["The amount to scale the geometry before capturing and mapping to the curve."], "extent": [7510, 7591]}], "container": true, "attrs": {"id": "uniformscale"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Enable Attibute Scale"], "extent": [7591, 7614], "body": [{"type": "para", "indent": 4, "text": ["Whether to override the ", {"type": "ui", "text": ["Uniform Scale"]}, " with a primitive attribute on the curves."], "extent": [7644, 7733]}], "container": true, "attrs": {"id": "uniformscaleoverride"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Uniform Scale Attribute"], "extent": [7733, 7758], "body": [{"type": "para", "indent": 4, "text": ["A primitive attribute on the curves specifying the ", {"type": "ui", "text": ["Uniform Scale"]}, " on each curve,\n    this is multiplied in with the base ", {"type": "ui", "text": ["Uniform Scale"]}, " to compute the full uniform\n    scale factor for each curve."], "extent": [7786, 7994]}], "container": true, "attrs": {"id": "uniformscaleattrib"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Preserve Volume"], "extent": [7994, 8011], "body": [{"type": "para", "indent": 4, "text": ["When enabled will set a base scale factor such that the volume of the geometry bounding box is preserved."], "extent": [8035, 8146]}], "container": true, "attrs": {"id": "preservevolume"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Start Behavior"], "extent": [8146, 8162], "body": [{"type": "para", "indent": 4, "text": ["This parameter and ", {"type": "ui", "text": ["End behavior"]}, " control what happens to the model if the offset and length parameters push it ", {"type": "q", "text": ["off the end"]}, " of the curve. For the best performance, use ", {"type": "ui", "text": ["Extend"]}, " or ", {"type": "ui", "text": ["Clamp"]}, "."], "extent": [8186, 8388]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Extend"], "extent": [8388, 8400], "body": [{"type": "para", "indent": 8, "text": ["Extends geometry along the last curve tangent."], "extent": [8400, 8456]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Clamp"], "extent": [8456, 8467], "body": [{"type": "para", "indent": 8, "text": ["Points are not allowed past the end of the curve. This has the effect of ", {"type": "q", "text": ["pancaking"]}, " the model if it tries to move past the end. Note that this will probably create overlapping polygons."], "extent": [8467, 8663]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Clip"], "extent": [8663, 8673], "body": [{"type": "para", "indent": 8, "text": ["Delete any geometry past the end of the curve, creating new boundary edges/points as needed. This is the same behavior as you would get if you positioned a ", {"scheme": "Node", "value": "/nodes/sop/clip", "type": "link", "text": ["Clip node"], "fullpath": "/nodes/sop/clip.html"}, " at the end of the curve, but much more convenient. This is a particularly expensive operation. For better performance, use ", {"type": "ui", "text": ["Extend"]}, " or ", {"type": "ui", "text": ["Clamp"]}, "."], "extent": [8673, 9012]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "startbehavior"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["End Behavior"], "extent": [9012, 9026], "body": [{"type": "para", "indent": 4, "text": ["See the help for ", {"scheme": null, "value": "#startbehavior", "type": "link", "text": ["Start behavior"], "fullpath": "/nodes/sop/pathdeform.html#startbehavior", "fragment": "#startbehavior"}], "extent": [9048, 9103]}], "container": true, "attrs": {"id": "endbehavior"}, "role": "item"}], "container": true, "role": "item_group"}, {"level": 3, "type": "sep", "indent": 0, "text": [" Geometry Deformations "], "extent": [9103, 9133]}, {"type": "para", "indent": 0, "text": ["These parameters let you scale and/or twist the model on top of mapping it onto the curve."], "extent": [9133, 9226]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Enable Scale"], "extent": [9226, 9240], "body": [{"type": "para", "indent": 4, "text": ["Scales the model according to the ", {"type": "ui", "text": ["Base scale factor"]}, " and possibly the ", {"type": "ui", "text": ["Scale ramp"]}, " below. Note that the length of the model along the ", {"type": "ui", "text": ["Forward direction"]}, " is still controlled by the mapping controls above. This scales the model along the ", {"type": "em", "text": ["other two"]}, " axes. In other words, it scales the model ", {"type": "em", "text": ["outward from the curve"]}, "."], "extent": [9263, 9592]}], "container": true, "attrs": {"id": "taper_enable"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Base Scale Factor"], "extent": [9592, 9611], "body": [{"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["Enable scale"]}, " is on, the factor by which to scale the model outward from the curve. For example, ", {"type": "code", "text": ["1.0"]}, " does no scaling, values less than ", {"type": "code", "text": ["1.0"]}, " make the model ", {"type": "q", "text": ["skinnier"]}, " toward the spine curve, values greater than ", {"type": "code", "text": ["1.0"]}, " make the model ", {"type": "q", "text": ["fatter"]}, " away from the spine curve."], "extent": [9634, 9917]}], "container": true, "attrs": {"id": "taper_factor"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Enable Attribute Scale"], "extent": [9917, 9941], "body": [{"type": "para", "indent": 4, "text": ["Whether to scale the combined scale (Base Scale Factor multiplied by the ramp) by the value of an attribute on the ", {"type": "em", "text": ["curve"]}, ". This lets you have different scaling at different points along the curve."], "extent": [9969, 10172]}], "container": true, "attrs": {"id": "taper_attribscale"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Curve Attribute"], "extent": [10172, 10189], "body": [{"type": "para", "indent": 4, "text": ["When the dropdown menu next to ", {"type": "ui", "text": ["Base scale factor"]}, " is set to ", {"type": "ui", "text": ["Scale by attribute"]}, ", this is the name of the point attribute on the curve to scale by."], "extent": [10217, 10375]}], "container": true, "attrs": {"id": "taper_curveattrib"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Enable Scale Ramp"], "extent": [10375, 10394], "body": [{"type": "para", "indent": 4, "text": ["When this is on, the base scaling factor above is further modified by a ramp."], "extent": [10421, 10504]}], "container": true, "attrs": {"id": "taper_enableramp"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Scale Ramp"], "extent": [10504, 10516], "body": [{"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["Enable scale ramp"]}, " is on, use this ramp for more control over how the model is scaled (vertical axis) along the length of the curve (horizontal axis)."], "extent": [10537, 10701]}], "container": true, "attrs": {"id": "taper_ramp"}, "role": "item"}], "container": true, "role": "item_group"}, {"level": 4, "type": "sep", "indent": 0, "extent": [10701, 10706]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Enable Rotation"], "extent": [10706, 10724], "body": [{"type": "para", "indent": 4, "text": ["Rotates/twists the points of the model around the ", {"type": "ui", "text": ["Forward direction"]}, ", according to the ", {"type": "ui", "text": ["Base rotation"]}, " and possibly the ", {"type": "ui", "text": ["Rotation scale ramp"]}, " below."], "extent": [10748, 10909]}], "container": true, "attrs": {"id": "rotate_enable"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Base Rotation"], "extent": [10909, 10924], "body": [{"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["Enable rotation"]}, " is on, rotate the entire model by this number of degrees. To get twisting instead of full rotation, use the ramp below. Note that the scale by attribute and rotation scale ramp controls below are ", {"type": "em", "text": ["multipliers on this value"]}, ". If this value is ", {"type": "code", "text": ["0"]}, ", ", {"type": "em", "text": ["no rotation can happen at all"]}, "."], "extent": [10947, 11257]}], "container": true, "attrs": {"id": "rotate_angle"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Enable Attribute Scale"], "extent": [11257, 11281], "body": [{"type": "para", "indent": 4, "text": ["Whether to scale the combined rotation (Base Rotation multiplied by the ramp) by the value of an attribute on the ", {"type": "em", "text": ["curve"]}, ". This lets you have different rotation at different points along the curve."], "extent": [11310, 11513]}], "container": true, "attrs": {"id": "rotate_attribscale"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Curve Attribute"], "extent": [11513, 11530], "body": [{"type": "para", "indent": 4, "text": ["When the dropdown menu next to ", {"type": "ui", "text": ["Base rotation"]}, " is set to ", {"type": "ui", "text": ["Scale by attribute"]}, ", this is the name of the point attribute on the curve to scale by. Note that this is a ", {"type": "em", "text": ["multiplier"]}, " on the base rotation, so if the base rotation is ", {"type": "code", "text": ["0"]}, ", nothing will happen."], "extent": [11559, 11821]}], "container": true, "attrs": {"id": "rotate_curveattrib"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Enable Rotation Scale Ramp"], "extent": [11821, 11849], "body": [{"type": "para", "indent": 4, "text": ["When this is on, the base rotation above is further modified by a ramp."], "extent": [11877, 11954]}], "container": true, "attrs": {"id": "rotate_enableramp"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Rotation Scale Ramp"], "extent": [11954, 11975], "body": [{"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["Enable rotation scale ramp"]}, " is on, use this ramp for more control over how the base rotation is scaled (vertical axis) along the length of the curve (horizontal axis). Note that this is a ", {"type": "em", "text": ["multiplier"]}, " on the base rotation, so if the base rotation is ", {"type": "code", "text": ["0"]}, ", nothing will happen."], "extent": [11997, 12287]}], "container": true, "attrs": {"id": "rotate_ramp"}, "role": "item"}], "container": true, "role": "item_group"}, {"level": 3, "type": "sep", "indent": 0, "text": [" Rigidity "], "extent": [12287, 12304]}, {"type": "para", "indent": 0, "text": ["When points are ", {"type": "em", "text": ["rigid"]}, ", the node maps them ", {"type": "q", "text": ["all at once"]}, " onto the curve instead of individually, preventing them from bending. You can set a base ", {"type": "em", "text": ["amount"]}, " of rigidity (which blends between the non-rigid and rigid positions of each point), and/or paint different rigidity values in different areas of the model using a point attribute."], "extent": [12304, 12642]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Enable Rigidity"], "extent": [12642, 12659], "body": [{"type": "para", "indent": 4, "text": ["When this is on, you can specify certain parts of the model to be rigid (unbending)."], "extent": [12682, 12772]}], "container": true, "attrs": {"id": "rigid_enable"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Constraint Method"], "extent": [12772, 12791], "body": [{"type": "para", "indent": 4, "text": ["How to map points onto the curve. If multiple points are mapped together, they will be ", {"type": "q", "text": ["rigid"]}, " with respect to each other."], "extent": [12814, 12942]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["By Rigid Group"], "extent": [12942, 12962], "body": [{"type": "para", "indent": 8, "text": ["Specify rigid points by group name(s) and/or component numbers. See ", {"type": "ui", "text": ["Rigid group"]}, " below."], "extent": [12962, 13062]}], "container": true}, {"type": "dt", "indent": 4, "text": ["By Geometry Fraction Attribute"], "extent": [13062, 13098], "body": [{"type": "para", "indent": 8, "text": ["Use a point attribute on the model to manually control where on the curve each point should should be deformed relative to. See ", {"type": "ui", "text": ["Geo fraction attribute"]}, " below."], "extent": [13098, 13269]}], "container": true}, {"type": "dt", "indent": 4, "text": ["By Piece Attribute"], "extent": [13269, 13293], "body": [{"type": "para", "indent": 8, "text": ["Use a piece attribute to specify rigid pieces of geometry."], "extent": [13293, 13361]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "rigid_method"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Rigid Group"], "extent": [13361, 13374], "body": [{"type": "para", "indent": 4, "text": ["A ", {"scheme": null, "value": "/model/groups", "type": "link", "text": ["group"], "fullpath": "/model/groups.html"}, " name, or list of primitive, edge, point, or vertex numbers specifying which components in the input model are rigid. Note that leaving this empty selects the ", {"type": "em", "text": ["entire model"]}, " to be rigid, which is usually not what you want."], "extent": [13396, 13647]}, {"type": "para", "indent": 4, "text": ["Each connected component in this group will be given its own rigidity class, and the point along the curve that it will use will be the average position of the points in the group."], "extent": [13647, 13833]}], "container": true, "attrs": {"id": "rigid_group"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Rigid Group Type"], "extent": [13833, 13851], "body": [{"type": "para", "indent": 4, "text": ["The component type specified in the ", {"type": "ui", "text": ["Rigid Group"]}, " (primitives, edges, points, or vertices)."], "extent": [13877, 13976]}], "container": true, "attrs": {"id": "rigid_grouptype"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Enable Stretch Softening"], "extent": [13976, 14002], "body": [{"type": "para", "indent": 4, "text": ["Smooths non-rigid points within a certain distance (", {"type": "ui", "text": ["Soften radius"]}, " parameter below) of rigid geometry for smoother transitions between non-rigid to rigid parts of the model. Turn this on if you see abrupt stretches and/or angles between rigid and non-rigid parts."], "extent": [14026, 14298]}], "container": true, "attrs": {"id": "soften_enable"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Soften Distance Metric"], "extent": [14298, 14322], "body": [{"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["Enable stretch softening"]}, " is on, how to measure the distance between non-rigid and rigid points:"], "extent": [14346, 14456]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Edge"], "extent": [14456, 14466], "body": [{"type": "para", "indent": 8, "text": ["Find the shortest path along edges between two points. This is faster but less accurate than the ", {"type": "q", "text": ["Surface"]}, " method."], "extent": [14466, 14590]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Surface"], "extent": [14590, 14603], "body": [{"type": "para", "indent": 8, "text": ["Compute (approximately) the shortest distance across the model surface. This is slower but more accurate than the ", {"type": "q", "text": ["Edge"]}, " method."], "extent": [14603, 14741]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "soften_metric"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Soften Radius"], "extent": [14741, 14756], "body": [{"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["Enable stretch softening"]}, " is on, non-rigid points within this distance (in world space, as calculated using the ", {"type": "ui", "text": ["Soften distance metric"]}, ") of a rigid point are moved to make the transition smoother. The effect falls off with the distance to the nearest rigid point, falling to zero at the exact soften radius. You can control the falloff by turning on the falloff ramp below."], "extent": [14780, 15170]}], "container": true, "attrs": {"id": "soften_radius"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Enable Falloff Ramp"], "extent": [15170, 15191], "body": [{"type": "para", "indent": 4, "text": ["Turn this on to control the shape of the falloff within the ", {"type": "ui", "text": ["Soften radius"]}, " using a ramp."], "extent": [15219, 15316]}], "container": true, "attrs": {"id": "soften_enableramp"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Soften Falloff"], "extent": [15316, 15332], "body": [{"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["Enable falloff ramp"]}, " is on, this lets you control the shape of the falloff based on distance from the nearest rigid point. The value at the left end of the ramp controls the amount of softening at zero distance from the nearest rigid point. The value at the right end of the ramp controls the amount of softening at the ", {"type": "ui", "text": ["Soften radius"]}, " distance from the nearest rigid point."], "extent": [15361, 15751]}], "container": true, "attrs": {"id": "soften_fallofframp"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Geo Fraction Attribute"], "extent": [15751, 15775], "body": [{"type": "para", "indent": 4, "text": ["For each point in the model, this attribute sets what point on the curve (specified as a fraction of the curve length, from ", {"type": "code", "text": ["0.0"]}, " to ", {"type": "code", "text": ["1.0"]}, ") the model point should map to."], "extent": [15805, 15981]}], "container": true, "attrs": {"id": "rigid_geofracattrib"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Piece Attribute"], "extent": [15981, 15998], "body": [{"type": "para", "indent": 4, "text": ["A piece attribute specifying how the rigidity should be defined. The average position\n    of elements in each piece is used to determine where the piece should be placed on the curve.\n    The ", {"type": "ui", "text": ["Piece Attribute"]}, " can be either a point or primitive attribute that is either an \n    integer or a string."], "extent": [16024, 16330]}], "container": true, "attrs": {"id": "rigidpieceattrib"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Allow Rigid Geometry to Stretch"], "extent": [16330, 16363], "body": [{"type": "para", "indent": 4, "text": ["When this is on, rigid geometry can stretch along the ", {"type": "ui", "text": ["Forward direction"]}, " by the same amount as non-rigid geometry."], "extent": [16392, 16515]}], "container": true, "attrs": {"id": "rigid_allowstretch"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Enable Rigidity Mask"], "extent": [16515, 16537], "body": [{"type": "para", "indent": 4, "text": ["The rigidity mask lets you specify ", {"type": "em", "text": ["how rigid"]}, " each rigid component is (for example, by painting an attribute)."], "extent": [16564, 16681]}], "container": true, "attrs": {"id": "rigid_enablemask"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Base Rigidity Mask"], "extent": [16681, 16701], "body": [{"type": "para", "indent": 4, "text": ["This is the base rigidity of rigid points. The attribute will act as a multiplier on this value. For example, ", {"type": "code", "text": ["1.0"]}, " is fully rigid, ", {"type": "code", "text": ["0.0"]}, " is not rigid, ", {"type": "code", "text": ["0.5"]}, " is halfway. If you just want all rigid points to have the same amount of rigidity, you can set this without specifying an attribute."], "extent": [16726, 17022]}], "container": true, "attrs": {"id": "rigid_basemask"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Enable Attribute Scale"], "extent": [17022, 17046], "body": [{"type": "para", "indent": 4, "text": ["Whether to scale the base rigidity by the value of a point attribute on the model. This lets you paint different areas of the model with different amounts of rigidity."], "extent": [17078, 17251]}], "container": true, "attrs": {"id": "rigid_maskattribscale"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Geometry Attribute"], "extent": [17251, 17271], "body": [{"type": "para", "indent": 4, "text": ["When the dropdown menu next to ", {"type": "ui", "text": ["Base scale factor"]}, " is set to ", {"type": "ui", "text": ["Scale by attribute"]}, ", this is the name of the point attribute on the model to scale by."], "extent": [17301, 17460]}], "container": true, "attrs": {"id": "rigid_maskgeoattrib"}, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 2, "id": "capture_tab", "container": true, "type": "h", "indent": 0, "text": ["Capture and Align"], "extent": [17460, 17498], "body": [{"level": 3, "type": "sep", "indent": 0, "text": [" Geometry Alignment "], "extent": [17498, 17526]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Forward Direction"], "extent": [17526, 17546], "body": [{"type": "para", "indent": 4, "text": ["The ", {"type": "q", "text": ["length"]}, " axis of the incoming model. The curve bends the model ", {"type": "q", "text": ["across"]}, " this axis. The default is Z."], "extent": [17572, 17682]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["X/Y/Z"], "extent": [17682, 17693], "body": [{"type": "para", "indent": 8, "text": ["The model is modeled along one of the major axes. The ", {"type": "q", "text": ["front"]}, " of the model is assumed to be in the positive direction. If the model points along the negative direction, you can choose ", {"type": "ui", "text": ["Custom"]}, " instead (for example, if the front is along negative Z, choose ", {"type": "ui", "text": ["Custom"]}, " and set the custom vector to ", {"type": "code", "text": ["0, 0, -1"]}, ")."], "extent": [17693, 18013]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Custom"], "extent": [18013, 18025], "body": [{"type": "para", "indent": 8, "text": ["Define the length axis of the model using a custom vector."], "extent": [18025, 18093]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "geo_controlaxis"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Forward Axis Vector"], "extent": [18093, 18114], "body": [{"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["Forward direction"]}, " is ", {"type": "ui", "text": ["Custom"]}, ", this is a vector defining the ", {"type": "q", "text": ["length"]}, " axis of the model."], "extent": [18139, 18244]}], "container": true, "attrs": {"id": "geo_axisvector"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Up Direction"], "extent": [18244, 18258], "body": [{"type": "para", "indent": 4, "text": ["The ", {"type": "q", "text": ["height"]}, " axis of the incoming model. The node uses this to orient the model as it is deformed and rotated. The default is Y."], "extent": [18282, 18416]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["X/Y/Z"], "extent": [18416, 18427], "body": [{"type": "para", "indent": 8, "text": ["The model is modeled with ", {"type": "q", "text": ["up"]}, " along one of the major axes."], "extent": [18427, 18496]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Custom"], "extent": [18496, 18508], "body": [{"type": "para", "indent": 8, "text": ["Define the up axis of the model using a custom vector."], "extent": [18508, 18572]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "geo_controlup"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Up Axis Vector"], "extent": [18572, 18588], "body": [{"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["Up direction"]}, " is ", {"type": "ui", "text": ["Custom"]}, ", this is a vector defining the ", {"type": "q", "text": ["up"]}, " axis of the model."], "extent": [18611, 18707]}], "container": true, "attrs": {"id": "geo_upvector"}, "role": "item"}], "container": true, "role": "item_group"}, {"level": 3, "type": "sep", "indent": 0, "text": [" Curve Alignment "], "extent": [18707, 18731]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Curve Up Control"], "extent": [18731, 18750], "body": [{"type": "para", "indent": 4, "text": ["How to compute the ", {"type": "q", "text": ["up"]}, " direction of points along the curve. This can be overridden by point attributes (see below). (By default the node will slightly modify the up vectors to be perpendicular to the curve ", {"type": "em", "text": ["tangent"]}, ", unless you turn on ", {"type": "ui", "text": ["Make curve up vector constant"]}, " below.) The default is Y."], "extent": [18776, 19078]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Curve Normal"], "extent": [19078, 19096], "body": [{"type": "para", "indent": 8, "text": ["Automatically choose the direction perpendicular to the plane the curve would lie in if it was planar. "], "extent": [19096, 19209]}], "container": true}, {"type": "dt", "indent": 4, "text": ["X/Y/Z"], "extent": [19209, 19220], "body": [{"type": "para", "indent": 8, "text": ["Always set the up direction along the positive direction of one of the major axes. Often you will draw the curve in one of the planes so this is useful to quickly choose the perpendicular direction to the plane of the curve."], "extent": [19220, 19454]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Custom"], "extent": [19454, 19466], "body": [{"type": "para", "indent": 8, "text": ["Define the up axis of the curve using a custom vector."], "extent": [19466, 19530]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "curve_controlup"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Orient Using Point Attributes"], "extent": [19530, 19561], "body": [{"type": "para", "indent": 4, "text": ["When this is on, the node will use common point attributes (", {"type": "code", "text": ["N"]}, ", ", {"type": "code", "text": ["up"]}, ", ", {"type": "code", "text": ["orient"]}, ", ", {"type": "code", "text": ["rot"]}, ", ", {"type": "code", "text": ["trans"]}, ", ", {"type": "code", "text": ["pivot"]}, ", ", {"type": "code", "text": ["pscale"]}, ", ", {"type": "code", "text": ["scale"]}, ", and/or ", {"type": "code", "text": ["transform"]}, "), if present, to affect the orientation, rotation, scale etc. of the model at the corresponding point along the curve."], "extent": [19596, 19864]}], "container": true, "attrs": {"id": "curve_orientpointattribs"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Make Curve Up Vector Constant"], "extent": [19864, 19895], "body": [{"type": "para", "indent": 4, "text": ["Forces the up vector to be constant as defined by the ", {"type": "ui", "text": ["Curve Up Control"]}, ". (When this is off, the node will slightly modify the up vectors to be perpendicular to the curve tangent.)\n    This may skew geometry."], "extent": [19922, 20138]}], "container": true, "attrs": {"id": "curve_constantup"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Force Orthogonal Tangent"], "extent": [20138, 20164], "body": [{"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["Make Curve Up Vector Constant"]}, " is on, turning this on prevent the geometry skewing along the curve by recomputing the curve tangent at each point to be orthogonal to the constant up vector. This will orient the front of the geometry orthogonally to the up vector."], "extent": [20193, 20470]}], "container": true, "attrs": {"id": "curve_orthotangent"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Copy Up Control to End"], "extent": [20470, 20494], "body": [{"type": "para", "indent": 4, "text": ["This will set the up vectors at both the start and end of the curve to be as close as possible to the ", {"type": "ui", "text": ["Curve Up Control"]}, ". This is useful when the curve is meant to be a loop."], "extent": [20523, 20705]}], "container": true, "attrs": {"id": "curve_controlatend"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Curve Up Vector"], "extent": [20705, 20722], "body": [{"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["Curve up control"]}, " is ", {"type": "ui", "text": ["Custom"]}, ", this is a custom vector to use as the curve\u2019s ", {"type": "q", "text": ["up"]}, " direction."], "extent": [20747, 20855]}], "container": true, "attrs": {"id": "curve_upcustom"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Initialize Geometry Alignment from Curve"], "extent": [20855, 20897], "body": [{"type": "para", "indent": 4, "text": ["Setup the geometry alignment from the start of the curve. This will set the ", {"type": "ui", "text": ["Forward Direction"]}, " to match the curve\u2019s tangent vector, the ", {"type": "ui", "text": ["Up Direction"]}, " to match the curve\u2019s up vector, and the ", {"type": "ui", "text": ["Geo Capture Origin"]}, " to match the position at the start of the curve."], "extent": [20929, 21202]}], "container": true, "attrs": {"id": "initgeoalignfromcurve"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Reverse Curve"], "extent": [21202, 21217], "body": [{"type": "para", "indent": 4, "text": ["Reverses the curve, so that the geometry follows the curve from the opposite direction. You can use this if the curve was drawn in the ", {"type": "q", "text": ["wrong"]}, " direction. (You don\u2019t need to add a separate node to reverse the curve before you input it into this node.)"], "extent": [21241, 21497]}], "container": true, "attrs": {"id": "curve_reverse"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Reverse N Attribute on Curve"], "extent": [21497, 21527], "body": [{"type": "para", "indent": 4, "text": ["Reverses the ", {"type": "code", "text": ["N"]}, " attribute on the curve. The node uses this attribute (if present) to calculate the tangent at each point."], "extent": [21564, 21692]}], "container": true, "attrs": {"id": "curve_reversetangentattrib"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Blend Tangents"], "extent": [21692, 21708], "body": [{"type": "para", "indent": 4, "text": ["Blend the curve tangents using a weighted average."], "extent": [21737, 21793]}], "container": true, "attrs": {"id": "enabletangentblend"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Tangent Blend Strength"], "extent": [21793, 21817], "body": [{"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["Blend tangents"]}, " is on, how much weight to give to neighboring tangents when averaging. The default is ", {"type": "code", "text": ["1"]}, "."], "extent": [21848, 21968]}], "container": true, "attrs": {"id": "tangentblendstrength"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Tangent Blend Iters"], "extent": [21968, 21989], "body": [{"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["Blend tangents"]}, " is on, the number of times to iteratively apply the blending operation. The default is ", {"type": "code", "text": ["10"]}, "."], "extent": [22016, 22138]}], "container": true, "attrs": {"id": "tangentblenditer"}, "role": "item"}], "container": true, "role": "item_group"}, {"level": 3, "type": "sep", "indent": 0, "text": [" Capture "], "extent": [22436, 22452]}, {"type": "para", "indent": 0, "text": ["This node only bends the parts of the geometry inside a ", {"type": "em", "text": ["capture region"]}, ". Parts of the model outside the capture region still move with the rest of the model, but do not bend or stretch. This is useful if you only want the front, or middle, or back of the model to bend."], "extent": [22452, 22725]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Geo Capture Origin"], "extent": [22725, 22745], "body": [{"type": "para", "indent": 4, "text": ["How to specify the center of the capture region. The capture region is always based on the bounding box of the input geometry. By default it is centered on the model, but you can set this to ", {"type": "ui", "text": ["Custom"]}, " to offset the capture region from the model\u2019s centroid."], "extent": [22766, 23029]}, {"type": "note_group", "body": [{"type": "note", "indent": 4, "role": "item", "extent": [23029, 23039], "body": [{"type": "para", "indent": 8, "text": ["Unless you want an offset but can\u2019t change the input model\u2019s position, it is ", {"type": "em", "text": ["much"]}, " easier to leave this set to ", {"type": "ui", "text": ["Relative to bounding box"]}, " than to use ", {"type": "ui", "text": ["Custom"]}, ". You can use the ", {"type": "ui", "text": ["Geo capture start"]}, " and ", {"type": "ui", "text": ["Geo capture end"]}, " to control the bendy region. You can offset the model from the curve by turning off ", {"type": "ui", "text": ["Center geometry on curve"]}, " and moving the model away from the origin."], "extent": [23039, 23431]}], "container": true}], "container": true, "role": "item_group"}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Relative to Bounding Box"], "extent": [23431, 23461], "body": [{"type": "para", "indent": 8, "text": ["Always center the capture region at the center of the bounding box."], "extent": [23461, 23538]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Custom"], "extent": [23538, 23550], "body": [{"type": "para", "indent": 8, "text": ["Offset the capture region along the ", {"type": "ui", "text": ["Forward direction"]}, "."], "extent": [23550, 23618]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "geo_origin"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Center Geometry on Curve"], "extent": [23618, 23644], "body": [{"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["Geo capture origin"]}, " is ", {"type": "ui", "text": ["Relative to bounding box"]}, " and this is on, the node snaps the center of the bounding box onto the curve. When this is off, the model\u2019s original offset from the origin appears as an offset from the curve."], "extent": [23672, 23914]}], "container": true, "attrs": {"id": "geo_centeroncurve"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Capture Origin Offset"], "extent": [23914, 23937], "body": [{"type": "para", "indent": 4, "text": ["The node acts as if it takes plane starting at this point, perpendicular to the ", {"type": "ui", "text": ["Forward direction"]}, " and sweeps it along the ", {"type": "ui", "text": ["Forward direction"]}, ", capturing geometry. If the origin is past the start of the geometry, the start of the geometry will not be captured. If the origin is before the start of the geometry (and/or offset in the other two axes), the model will be offset from the curve."], "extent": [23961, 24362]}, {"type": "para", "indent": 4, "text": ["(Insert image)"], "extent": [24362, 24382]}], "container": true, "attrs": {"id": "geo_originpos"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Capture Offsets Using"], "extent": [24382, 24405], "body": [{"type": "para", "indent": 4, "text": ["How to specify the start and end of the capture region:"], "extent": [24430, 24491]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Fraction of Geo Length"], "extent": [24491, 24519], "body": [{"type": "para", "indent": 8, "text": ["Specify the capture offsets as fractions of the length of the model (measured along the ", {"type": "ui", "text": ["Forward direction"]}, ")."], "extent": [24519, 24640]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Distance"], "extent": [24640, 24654], "body": [{"type": "para", "indent": 8, "text": ["Specify the capture offsets in world-space units."], "extent": [24654, 24713]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "geo_offsetunit"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Geo Capture Start"], "extent": [24713, 24732], "body": [{"type": "para", "indent": 4, "text": ["Moves the start of the capture region along the ", {"type": "ui", "text": ["Forward Direction"]}, "."], "extent": [24759, 24835]}, {"type": "para", "indent": 4, "text": ["The position along the geometry that defines the start of the\n    geometry. This point is mapped to the ", {"type": "ui", "text": ["Position Offset"]}, ".\n    Geometry before this offset is extended along the tangent\n    from the point at the ", {"type": "ui", "text": ["Position Offset"]}, ", and is not\n    stretched according to the curve."], "extent": [24835, 25123]}], "container": true, "attrs": {"id": "geo_capturestart"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Override"], "extent": [25123, 25133], "body": [{"type": "para", "indent": 4, "text": ["When enabled, overrides the ", {"type": "ui", "text": ["Geo Capture Start"]}, " with an attribute on the curves."], "extent": [25168, 25256]}], "container": true, "attrs": {"id": "geo_capturestartoverride"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Capture Start Attribute"], "extent": [25256, 25281], "body": [{"type": "para", "indent": 4, "text": ["The name of a float primitive attribute on the curves providing the value for the ", {"type": "ui", "text": ["Geo Capture Start"]}, " on each curve. This attribute is used to set the ", {"type": "ui", "text": ["Geo Capture Start"]}, " for the geometry mapped to each curve independently."], "extent": [25314, 25547]}], "container": true, "attrs": {"id": "geo_capturestartattrib"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Geo Capture End"], "extent": [25547, 25564], "body": [{"type": "para", "indent": 4, "text": ["The position along the geometry that defines the end of the\n    geometry. This point is mapped to the curve end offset defined\n    by the sum of ", {"type": "ui", "text": ["Position Offset"]}, " and ", {"type": "ui", "text": ["End Position Offset"]}, ".\n    Geometry beyond this offset is extended along the tangent\n    from the point at the curve end offset, and it not\n    stretched according to the curve."], "extent": [25589, 25943]}], "container": true, "attrs": {"id": "geo_captureend"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Override"], "extent": [25943, 25953], "body": [{"type": "para", "indent": 4, "text": ["When enabled, overrides the ", {"type": "ui", "text": ["Geo Capture End"]}, " with an attribute on the curves."], "extent": [25986, 26072]}], "container": true, "attrs": {"id": "geo_captureendoverride"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Capture End Attribute"], "extent": [26072, 26095], "body": [{"type": "para", "indent": 4, "text": ["The name of a float primitive attribute on the curves providing the value for the ", {"type": "ui", "text": ["Geo Capture End"]}, " on each curve. This attribute is used to set the ", {"type": "ui", "text": ["Geo Capture End"]}, " for the geometry mapped to each curve independently."], "extent": [26126, 26355]}], "container": true, "attrs": {"id": "geo_captureendattrib"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Compute End Relative to Start"], "extent": [26355, 26386], "body": [{"type": "para", "indent": 4, "text": ["When enabled, the ", {"type": "ui", "text": ["Geo Capture Start"]}, " is added to the ", {"type": "ui", "text": ["Geo Capture End"]}, "\n    when computing the ending position on the geometry."], "extent": [26419, 26556]}], "container": true, "attrs": {"id": "geo_endrelativetostart"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Capture Before Start Position"], "extent": [26556, 26587], "body": [{"type": "para", "indent": 4, "text": ["When enabled, all geometry before the start position will also be captured."], "extent": [26620, 26701]}], "container": true, "attrs": {"id": "geo_capturestartregion"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Capture After End Position"], "extent": [26701, 26729], "body": [{"type": "para", "indent": 4, "text": ["When enabled, all geometry after the end position will also be captured."], "extent": [26760, 26838]}], "container": true, "attrs": {"id": "geo_captureendregion"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Upcaptured Geo Stretch"], "extent": [26838, 26862], "body": [{"type": "para", "indent": 4, "text": ["The factor by which to stretch the geometry that is uncaptured."], "extent": [26892, 26961]}], "container": true, "attrs": {"id": "geo_uncapturedscale"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Override"], "extent": [26961, 26971], "body": [{"type": "para", "indent": 4, "text": ["When enabled, overrides the ", {"type": "ui", "text": ["Uncaptured Geo Stretch"]}, " with an attribute on the curves."], "extent": [27009, 27102]}], "container": true, "attrs": {"id": "geo_uncapturedscaleoverride"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Uncaptured Stretch Attribute"], "extent": [27102, 27132], "body": [{"type": "para", "indent": 4, "text": ["The name of a float primitive attribute on the curves providing the value for the ", {"type": "ui", "text": ["Uncaptured Geo Stretch"]}, ". This attribute is used to set the ", {"type": "ui", "text": ["Uncaptured Geo Stretch"]}, " for the geometry mapped to each curve independently."], "extent": [27168, 27397]}], "container": true, "attrs": {"id": "geo_uncapturedscaleattrib"}, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Attributes"], "extent": [27397, 27414], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Attributes to Transform"], "extent": [27414, 27440], "body": [{"type": "para", "indent": 4, "text": ["A space-separated list of names and/or patterns.\n    Attributes whose names match are transformed along with the point positions.\n    The node uses each attribute\u2019s type info to transform it properly (as points, vectors, or normals)."], "extent": [27458, 27697]}], "container": true, "attrs": {"id": "attribs"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Recompute Affected Normals"], "extent": [27697, 27725], "body": [{"type": "para", "indent": 4, "text": ["Recomputes normals of polygons that have both transformed and untransformed points."], "extent": [27746, 27835]}, {"type": "para", "indent": 4, "text": ["If you're transforming the full geometry or all connected components, this setting is irrelevant.\n    It only matters if you deform part but not all of a connected piece."], "extent": [27835, 28011]}, {"type": "para", "indent": 4, "text": ["This does nothing if ", {"type": "code", "text": ["P"]}, " is not listed/matched in ", {"type": "ui", "text": ["Attributes to Transform"]}, "."], "extent": [28011, 28095]}], "container": true, "attrs": {"id": "recomputeN"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Preserve Normal Length"], "extent": [28095, 28119], "body": [{"type": "para", "indent": 4, "text": ["Normal lengths remain unaffected."], "extent": [28145, 28184]}], "container": true, "attrs": {"id": "preserveNlength"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Output Position Along Curve"], "extent": [28184, 28213], "body": [{"type": "para", "indent": 4, "text": ["When this is on, create a point float attribute on the output geometry.\n    This attribute will reflect the relative position of each point along the curve\n    on the scale from 0.0 (curve start) and 1.0 (curve end)."], "extent": [28234, 28456]}], "container": true, "attrs": {"id": "outputupos"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Curve U Attribute"], "extent": [28456, 28475], "body": [{"type": "para", "indent": 4, "text": ["The name of the attribute in which to store the relative position along the curve."], "extent": [28496, 28584]}], "container": true, "attrs": {"id": "uposattrib"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Output Curve Num"], "extent": [28584, 28602], "body": [{"type": "para", "indent": 4, "text": ["When enabled, output an integer attribute on the points of the output geometry,\n    storing the primitive number that each point was mapped to."], "extent": [28627, 28776]}], "container": true, "attrs": {"id": "outputcurvenum"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Curve Num Attribute"], "extent": [28776, 28797], "body": [{"type": "para", "indent": 4, "text": ["The name of the attribute in which to store the primitive number each point was\n    mapped to."], "extent": [28822, 28923]}], "container": true, "attrs": {"id": "curvenumattrib"}, "role": "item"}], "container": true, "role": "item_group"}]}], "text": "Parameters"}, {"level": 1, "id": "related", "container": true, "type": "related_section", "indent": 0, "role": "section", "extent": [28923, 28932], "body": [{"type": "bullet_group", "body": [{"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/sop/sweep", "type": "link", "text": "", "fullpath": "/nodes/sop/sweep.html"}], "extent": [28932, 28952]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/sop/pointdeform", "type": "link", "text": "", "fullpath": "/nodes/sop/pointdeform.html"}], "extent": [28952, 28977]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/sop/wiredeform", "type": "link", "text": "", "fullpath": "/nodes/sop/wiredeform.html"}], "extent": [28977, 29001]}], "container": true}], "text": "Related"}], "title": ["Path Deform"], "summary": ["Deforms geometry using the shape of a curve."]}