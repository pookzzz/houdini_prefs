{"type": "root", "attrs": {"type": "node", "context": "sop", "internal": "cookie", "icon": "SOP/cookie", "tags": "polygons, boolean, crease, merge, model", "version": null, "namespace": null}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["Cookie"], "extent": [0, 11]}, {"type": "summary", "indent": 0, "text": ["Combines two polygonal objects with boolean operators, or computes\nthe contour line along the intersection between two polygonal\nobjects."], "extent": [122, 267]}, {"type": "para", "indent": 0, "text": ["This operator has two main functions:"], "extent": [267, 306]}, {"type": "bullet_group", "body": [{"blevel": 2, "type": "bullet", "indent": 0, "text": [{"type": "strong", "text": ["Boolean"]}, ": add, subtract, intersect, etc. the volumes of two polygonal\n  objects."], "extent": [306, 391], "body": [{"type": "para", "indent": 2, "text": [{"scheme": "Image", "value": "../images/cookie_boolean_bminusa.png", "type": "img", "text": ""}], "extent": [391, 439]}], "container": true}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"type": "strong", "text": ["Crease"]}, ": extract a polyline contour of the intersection between two\n  polygonal objects."], "extent": [439, 532], "body": [{"type": "para", "indent": 2, "text": ["For example, you can compute the intersection contour of a boat hull\n  with a polygonal lake surface, and emit foam and spray particles from\n  the intersection."], "extent": [532, 696]}, {"type": "para", "indent": 2, "text": [{"scheme": "Image", "value": "../images/cookie_boat1.png", "type": "img", "text": ""}, " ", {"scheme": "Image", "value": "../images/cookie_boat2.png", "type": "img", "text": ""}], "extent": [696, 769]}, {"type": "para", "indent": 2, "text": ["You can also connect this output to the second input of the ", {"scheme": "Node", "value": "/nodes/sop/subdivide", "type": "link", "text": ["Subdivide\n  SOP"], "fullpath": "/nodes/sop/subdivide.html"}, " to define crease lines for a ", {"scheme": null, "value": "/model/geo_types", "type": "link", "text": ["subdivision\n  surface"], "fullpath": "/model/geo_types.html"}, " ."], "extent": [769, 941]}], "container": true}], "container": true}, {"type": "para", "indent": 0, "text": ["Both objects can be open or closed. The node determines ", {"type": "q", "text": ["inside"]}, " and\n", {"type": "q", "text": ["outside"]}, " by the polygon normals: it considers the normals to point out.\nChange the ", {"type": "ui", "text": ["Check for full enclosure"]}, " setting (under ", {"type": "ui", "text": ["Boolean"]}, ")\nbased on whether you are using open or closed surfaces."], "extent": [941, 1208]}, {"type": "para", "indent": 0, "text": ["You can connect the two polygonal objects to the node\u2019s two inputs, or\nuse two groups from within the first input using the ", {"type": "ui", "text": ["Group A"]}, " and\n", {"type": "ui", "text": ["Group B"]}, " parameters."], "extent": [1208, 1373]}, {"type": "note_group", "body": [{"type": "note", "indent": 0, "role": "item", "extent": [1373, 1379], "body": [{"type": "para", "indent": 4, "text": ["This operator requires planar convex polygons for accurate results. The ", {"type": "ui", "text": ["Pre-Convex Geometry"]}, " option does this for you, and is on by default."], "extent": [1379, 1533]}], "container": true}, {"type": "note", "indent": 0, "role": "item", "extent": [1533, 1539], "body": [{"type": "para", "indent": 4, "text": ["This operator interpolates point or vertex attributes for tris and\n    quads."], "extent": [1539, 1622]}], "container": true}], "container": true, "role": "item_group"}, {"type": "tip_group", "body": [{"type": "tip", "indent": 0, "role": "item", "extent": [1622, 1627], "body": [{"type": "para", "indent": 4, "text": ["This tool works best with average sized geometry. If you are getting artifacts, try scaling your geometry up (if it is very small), or down (if it is very large)."], "extent": [1627, 1800]}], "container": true}], "container": true, "role": "item_group"}, {"type": "include_group", "body": [{"ext": "/shelf/boolean#includeme", "type": "include", "indent": 0, "role": "item", "extent": [1800, 1836]}], "container": true, "role": "item_group"}, {"level": 1, "id": "parameters", "container": true, "type": "parameters_section", "indent": 0, "role": "section", "extent": [1836, 1848], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Group A"], "extent": [1848, 1857], "body": [{"type": "para", "indent": 4, "text": ["Use a subset of the first input as the ", {"type": "q", "text": ["A"]}, " object."], "extent": [1857, 1913]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Group B"], "extent": [1913, 1922], "body": [{"type": "para", "indent": 4, "text": ["Use a subset of the first input as the ", {"type": "q", "text": ["B"]}, " object.\n    Alternatively, you can hook up the geometry you want to use as\n    ", {"type": "q", "text": ["B"]}, " to the node\u2019s second input."], "extent": [1922, 2081]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["3D Tolerance"], "extent": [2081, 2095], "body": [{"type": "para", "indent": 4, "text": ["Sometimes when you generate polylines (with the ", {"type": "ui", "text": ["Crease"]}, "\n    option), the polylines will have zero-length segments, or small\n    gaps between segments, or twig-like lines branching off the main\n    line."], "extent": [2118, 2329]}, {"type": "para", "indent": 4, "text": ["This node deletes segments smaller than this 3D tolerance\n    (degenerate segments) and joins segment ends within this\n    tolerance, and uses it to suppress twigs."], "extent": [2329, 2499]}, {"type": "para", "indent": 4, "text": ["The default value is ideal for unit-sized geometry. You may need\n    to adjust this value for very large or very small models."], "extent": [2499, 2631]}, {"type": "para", "indent": 4, "text": ["You can also play with this value for odd cases that don\u2019t\n    generate correct polylines. So, if your polylines have twigs and\n    gaps, try increasing this value. Or, if the polylines are\n    connected where there should be gaps or has segments missing,\n    try decreasing this value."], "extent": [2631, 2923]}], "container": true, "attrs": {"channels": "/tol3d"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Pre-Convex Geometry"], "extent": [2923, 2944], "body": [{"type": "para", "indent": 4, "text": ["When enabled, all non-planar polygons are converted into\n    triangles. For planar polygons, they are converted into quads if\n    point or vertex attributes exist."], "extent": [2944, 3113]}], "container": true, "role": "item"}], "container": true, "role": "item_group"}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Boolean"], "extent": [3113, 3127], "body": [{"level": 3, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Type"], "extent": [3127, 3141], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Operation"], "extent": [3141, 3153], "body": [{"type": "para", "indent": 4, "text": ["The type of boolean operation to use to combine the\n    volumes of the A and B objects."], "extent": [3153, 3246]}, {"type": "para", "indent": 4, "text": [{"scheme": "Image", "value": "../images/cookie_boolean_pre.png", "type": "img", "text": ""}], "extent": [3246, 3293]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Union"], "extent": [3293, 3304], "body": [{"type": "para", "indent": 8, "text": ["Adds the volumes of the two objects together,\n        removing any interior geometry."], "extent": [3304, 3399]}, {"type": "para", "indent": 8, "text": [{"scheme": "Image", "value": "../images/cookie_boolean_union.png", "type": "img", "text": ""}], "extent": [3399, 3451]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Intersect"], "extent": [3451, 3466], "body": [{"type": "para", "indent": 8, "text": ["Keeps the intersecting volume of the two objects,\n        removing geometry outside the shared volume."], "extent": [3466, 3578]}, {"type": "para", "indent": 8, "text": [{"scheme": "Image", "value": "../images/cookie_boolean_intersect.png", "type": "img", "text": ""}], "extent": [3578, 3634]}], "container": true}, {"type": "dt", "indent": 4, "text": ["A minus B"], "extent": [3634, 3649], "body": [{"type": "para", "indent": 8, "text": ["Removes the volume of the B object from the A\n        object."], "extent": [3649, 3720]}, {"type": "para", "indent": 8, "text": [{"scheme": "Image", "value": "../images/cookie_boolean_aminusb.png", "type": "img", "text": ""}], "extent": [3720, 3774]}], "container": true}, {"type": "dt", "indent": 4, "text": ["B minus A"], "extent": [3774, 3789], "body": [{"type": "para", "indent": 8, "text": ["Removes the volume of the A object from the B\n        object."], "extent": [3789, 3860]}, {"type": "para", "indent": 8, "text": [{"scheme": "Image", "value": "../images/cookie_boolean_bminusa.png", "type": "img", "text": ""}], "extent": [3860, 3914]}], "container": true}, {"type": "dt", "indent": 4, "text": ["User Defined"], "extent": [3914, 3932], "body": [{"type": "para", "indent": 8, "text": ["Keeps the geometry specified by the checkboxes\n        below."], "extent": [3932, 4011]}], "container": true}], "container": true}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Keep Inside A"], "extent": [4011, 4026], "body": [{"type": "para", "indent": 4, "text": ["Keep the parts of A that are inside B\u2019s volume. This option is only available when ", {"type": "ui", "text": ["Operation"]}, " is ", {"type": "ui", "text": ["User Defined"]}, "."], "extent": [4026, 4149]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Keep Inside B"], "extent": [4149, 4164], "body": [{"type": "para", "indent": 4, "text": ["Keep the parts of B that are inside A\u2019s volume. This option is only available when ", {"type": "ui", "text": ["Operation"]}, " is ", {"type": "ui", "text": ["User Defined"]}, "."], "extent": [4164, 4287]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Keep Outside A"], "extent": [4287, 4303], "body": [{"type": "para", "indent": 4, "text": ["Keep the parts of A that are outside B\u2019s volume. This option is only available when ", {"type": "ui", "text": ["Operation"]}, " is ", {"type": "ui", "text": ["User Defined"]}, "."], "extent": [4303, 4427]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Keep Outside B"], "extent": [4427, 4443], "body": [{"type": "para", "indent": 4, "text": ["Keep the parts of B that are outside A\u2019s volume. This option is only available when ", {"type": "ui", "text": ["Operation"]}, " is ", {"type": "ui", "text": ["User Defined"]}, "."], "extent": [4443, 4567]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Keep Overlap A"], "extent": [4567, 4584], "body": [{"type": "para", "indent": 4, "text": ["Keep parts of A that overlap B\u2019s surface. This option is only available when ", {"type": "ui", "text": ["Operation"]}, " is ", {"type": "ui", "text": ["User Defined"]}, "."], "extent": [4584, 4701]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Keep Overlap B"], "extent": [4701, 4718], "body": [{"type": "para", "indent": 4, "text": ["Keep parts of B that overlap A\u2019s surface. This option is only available when ", {"type": "ui", "text": ["Operation"]}, " is ", {"type": "ui", "text": ["User Defined"]}, "."], "extent": [4718, 4839]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Check for Full Enclosure"], "extent": [4839, 4865], "body": [{"type": "para", "indent": 4, "text": ["This option enables a specific test for the case of\n    disconnected polygons, which uses a ray cast to\n    determine whether the polygon is inside or outside."], "extent": [4865, 5030]}, {"type": "para", "indent": 4, "text": ["Turn this option ", {"type": "em", "text": ["off"]}, " when using open surfaces, and\n    ", {"type": "em", "text": ["on"]}, " when using closed surfaces."], "extent": [5030, 5129]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Assume Input A is Closed"], "extent": [5129, 5155], "body": [{"type": "para", "indent": 4, "text": ["This option causes the full enclosure test to also test along the inside/outside boundaries in order to verify their accuracy."], "extent": [5155, 5287]}, {"type": "para", "indent": 4, "text": ["Turn this option ", {"type": "em", "text": ["on"]}, " if A is composed of closed surfaces, and if there are some polygons from B which are being grouped incorrectly in the output."], "extent": [5287, 5440]}, {"type": "para", "indent": 4, "text": ["This option is only available when ", {"type": "ui", "text": ["Check for Full Enclosure"]}, " is on."], "extent": [5440, 5538]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Assume Input B is Closed"], "extent": [5538, 5564], "body": [{"type": "para", "indent": 4, "text": ["This option causes the full enclosure test to also test along the inside/outside boundaries in order to verify their accuracy."], "extent": [5564, 5700]}, {"type": "para", "indent": 4, "text": ["Turn this option ", {"type": "em", "text": ["on"]}, " if B is composed of closed surfaces, and if there are some polygons from A which are being grouped incorrectly in the output."], "extent": [5700, 5857]}, {"type": "para", "indent": 4, "text": ["This option is only available when ", {"type": "ui", "text": ["Check for Full Enclosure"]}, " is on."], "extent": [5857, 5933]}], "container": true, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 3, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Groups"], "extent": [5933, 5948], "body": [{"type": "para", "indent": 4, "text": ["Contains controls for creating primitive groups for the\n    output geometry."], "extent": [5948, 6032]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 4, "text": ["Create Groups"], "extent": [6032, 6051], "body": [{"type": "para", "indent": 8, "text": ["Create new groups to contain the output geometry."], "extent": [6051, 6110]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Inside/Outside/Overlap A/B"], "extent": [6110, 6142], "body": [{"type": "para", "indent": 8, "text": ["(When ", {"type": "ui", "text": ["Create groups"]}, " is on) Create a group with this\n        name to contain the geometry inside/outside/overlap A or B."], "extent": [6142, 6275]}, {"type": "para", "indent": 8, "text": ["Leave a field blank to avoid creating a group."], "extent": [6275, 6331]}, {"type": "para", "indent": 8, "text": ["If multiple fields have the same name, the group\n        contains the union of the fields."], "extent": [6331, 6431]}, {"type": "para", "indent": 8, "text": ["If a named group already exists, the output geometry is\n        appended to it."], "extent": [6431, 6520]}], "container": true, "role": "item"}], "container": true, "role": "item_group"}]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Consolidate Edges"], "extent": [6520, 6539], "body": [{"type": "para", "indent": 4, "text": ["Consolidate redundant points along boundary edges created\n    between the two volumes."], "extent": [6539, 6631]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Consolidate Tol"], "extent": [6631, 6648], "body": [{"type": "para", "indent": 4, "text": ["Points within this distance will be consolidated."], "extent": [6648, 6703]}], "container": true, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Crease"], "extent": [6703, 6716], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 4, "text": ["Keep Source"], "extent": [6716, 6734], "body": [{"type": "para", "indent": 8, "text": ["Includes the input geometry in the output."], "extent": [6734, 6786]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Autojoin Creases"], "extent": [6786, 6808], "body": [{"type": "para", "indent": 8, "text": ["Connect the crease segments into long continuous polygons."], "extent": [6808, 6876]}], "container": true, "role": "item"}], "container": true, "role": "item_group"}]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Do jitter"], "extent": [6876, 6887], "body": [{"type": "para", "indent": 4, "text": ["Move the second input by a small, random distance before\n    intersection, and move it back afterward. Turn this on if you\n    have coincident faces which prevent the node from cutting\n    properly."], "extent": [6887, 7091]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Jitter seed"], "extent": [7091, 7104], "body": [{"type": "para", "indent": 4, "text": ["Random number seed for the jitter distance."], "extent": [7126, 7175]}], "container": true, "attrs": {"channels": "/seed"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Amount of jitter"], "extent": [7175, 7193], "body": [{"type": "para", "indent": 4, "text": ["Scale of the jitter movement."], "extent": [7223, 7258]}], "container": true, "attrs": {"channels": "/jitteramount"}, "role": "item"}], "container": true, "role": "item_group"}], "text": "Parameters"}, {"level": 1, "id": "inputs", "container": true, "type": "inputs_section", "indent": 0, "role": "section", "extent": [7258, 7266], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 0, "text": ["Geometry A"], "extent": [7266, 7279], "body": [{"type": "para", "indent": 4, "text": ["The first polygonal object, referred to as ", {"type": "q", "text": ["A"]}, " in the parameter\n    editor."], "extent": [7279, 7360]}], "container": true}, {"type": "dt", "indent": 0, "text": ["Geometry B"], "extent": [7360, 7372], "body": [{"type": "para", "indent": 4, "text": ["The second polygonal object, referred to as ", {"type": "q", "text": ["B"]}, " in the parameter\n    editor."], "extent": [7372, 7454]}], "container": true}], "container": true}], "text": "Inputs"}, {"level": 1, "id": "related", "container": true, "type": "related_section", "indent": 0, "role": "section", "extent": [7454, 7463], "body": [{"type": "bullet_group", "body": [{"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/sop/clip", "type": "link", "text": "", "fullpath": "/nodes/sop/clip.html"}], "extent": [7463, 7482]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/sop/surfsect", "type": "link", "text": "", "fullpath": "/nodes/sop/surfsect.html"}], "extent": [7482, 7504]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/sop/break", "type": "link", "text": "", "fullpath": "/nodes/sop/break.html"}], "extent": [7504, 7524]}], "container": true}], "text": "Related"}], "title": ["Cookie"], "summary": ["Combines two polygonal objects with boolean operators, or computes\nthe contour line along the intersection between two polygonal\nobjects."]}