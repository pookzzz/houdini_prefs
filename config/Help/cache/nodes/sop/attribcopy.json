{"type": "root", "attrs": {"type": "node", "context": "sop", "internal": "attribcopy", "icon": "SOP/attribcopy", "tags": "attrs, copy", "version": null, "namespace": null}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["Attribute Copy"], "extent": [0, 19]}, {"type": "summary", "indent": 0, "text": ["Copies attributes between groups of vertices,\npoints, or primitives."], "extent": [110, 186]}, {"type": "para", "indent": 0, "text": ["Attributes are copied from a source group to a destination group. The\nsource and destination group must be of the same type, but there is no\nrestriction on the attribute class."], "extent": [186, 364]}, {"type": "para", "indent": 0, "text": ["Unless ", {"type": "ui", "text": ["Match Attribute"]}, " is enabled when copying,\na general rule is applied when the size of the destination\nis greater than the size of the source. In this case, the elements of\nthe source are repeated in a cyclic fashion. An analogous example\nfollows:"], "extent": [364, 621]}, {"type": "para", "indent": 0, "text": ["Given a source pattern ", {"type": "q", "text": ["ABC"]}, " and a destination pattern of length 8, the\nresulting destination pattern is ", {"type": "q", "text": ["ABCABCAB"]}, "."], "extent": [621, 739]}, {"type": "para", "indent": 0, "text": ["The same logic applies to vertices, points, and primitives. The order in\nwhich the source and destination groups are specified will affect the\nresult of the copy."], "extent": [739, 903]}, {"type": "para", "indent": 0, "text": ["There are two modes when ", {"type": "ui", "text": ["Match Attribute"]}, " is enabled. In the\n", {"type": "ui", "text": ["Match Attribute"]}, " ", {"type": "q", "text": ["By Values"]}, " mode, source and destination points and\nprimitives will be matched up by equal values in the attribute specified\nby the ", {"type": "ui", "text": ["Attribute to Match"]}, " parameter. If there is no matching source\nvalue for a particular destination, then nothing will be copied to that\ndestination. In the case of multiple matching source values, the source\nwith the highest point or primitive number will be used."], "extent": [903, 1386]}, {"type": "para", "indent": 0, "text": ["In the ", {"type": "ui", "text": ["Match Attribute"]}, " ", {"type": "q", "text": ["To Element"]}, " mode, the value in the\nattribute specified by the ", {"type": "ui", "text": ["Attribute to Match"]}, " parameter will be used\nfor each destination element to denote the source element number\nto copy from. Copying will be skipped for destination elements where\nthe specified source element number is not in the valid range\nor is not in the source group. The same logic applies to vertices, points\nand primitives."], "extent": [1386, 1809]}, {"type": "para", "indent": 0, "text": ["If the copied attribute does not exist on the destination geometry, it\nis created automatically."], "extent": [1809, 1907]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Example"], "extent": [1907, 1921], "body": [{"type": "para", "indent": 4, "text": ["Use the AttribCopy Operation to copy UV texture coordinates from one\n    face to another. The group type should be primitives, and the\n    attribute class should be points or vertices (depending on where the\n    UV attribute has been applied)."], "extent": [1921, 2172]}]}, {"level": 1, "id": "parameters", "container": true, "type": "parameters_section", "indent": 0, "role": "section", "extent": [2172, 2184], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 4, "text": ["Source Group"], "extent": [2184, 2202], "body": [{"type": "para", "indent": 8, "text": ["A subset of the source geometry from which to read attribute\n        values."], "extent": [2202, 2288]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Destination Group"], "extent": [2288, 2311], "body": [{"type": "para", "indent": 8, "text": ["A subset of the destination geometry whose attribute values will\n        be overwritten by the values contained in the source geometry."], "extent": [2311, 2456]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Group Type"], "extent": [2456, 2472], "body": [{"type": "para", "indent": 8, "text": ["The type of elements referenced in the Source and Destination\n        Group fields. The Source and Destination Group Types must be\n        identical."], "extent": [2472, 2631]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Match Attribute"], "extent": [2631, 2652], "body": [{"type": "para", "indent": 8, "text": ["When enabled, match source and destination elements differently\n        than just performing a sequential copy."], "extent": [2652, 2781]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 8, "text": ["By Values"], "extent": [2781, 2800], "body": [{"type": "para", "indent": 12, "text": ["Match source and destination points or primitives by equal attribute\n            values. This option is only valid when the source and destination\n            ", {"type": "ui", "text": ["Group Type"]}, " are both set to Points or Primitives."], "extent": [2800, 3025]}], "container": true}, {"type": "dt", "indent": 8, "text": ["To Element"], "extent": [3025, 3045], "body": [{"type": "para", "indent": 12, "text": ["Match destination vertices, points and primitives to the source\n            element number specified by the attribute value for the ", {"type": "ui", "text": ["Attribute\n            to Match"]}, " attribute."], "extent": [3045, 3244]}], "container": true}], "container": true}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Attribute to Match"], "extent": [3244, 3268], "body": [{"type": "para", "indent": 8, "text": ["With ", {"type": "ui", "text": ["Match Attribute"]}, " ", {"type": "q", "text": ["By Values"]}, " enabled, this is the name of the\n        attribute used to match source and destination points or primitives. This\n        attribute must exist on both the source and destination geometry, and\n        should be an integer or string.\n        With ", {"type": "ui", "text": ["Match Attribute"]}, " ", {"type": "q", "text": ["To Element"]}, ", this is the name of the\n        destination attribute which specifies the source element number to copy\n        from. This attribute must exist on the destination geometry, and should\n        be an integer."], "extent": [3268, 3805]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Attribute to Copy"], "extent": [3805, 3828], "body": [{"type": "para", "indent": 8, "text": ["Attribute to copy. ", {"type": "q", "text": ["Color"]}, " and ", {"type": "q", "text": ["Texture UV"]}, " are provided for\n        convenience. Other attributes can be specified by name by\n        selecting ", {"type": "q", "text": ["Other Attribute"]}, "."], "extent": [3828, 4005]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Attribute Name"], "extent": [4005, 4025], "body": [{"type": "para", "indent": 8, "text": ["When ", {"type": "q", "text": ["Other Attribute"]}, " is selected, this is the name of the\n        attribute to copy. Multiple attributes may be specified. If\n        no attribute name is provided, all of the source attributes will be copied."], "extent": [4025, 4246]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Allow P Attribute"], "extent": [4246, 4269], "body": [{"type": "para", "indent": 8, "text": [{"type": "code", "text": ["P"]}, " can be specified in the name to copy points, otherwise ", {"type": "code", "text": ["P"]}, " is\n        ignored even if it matches the pattern."], "extent": [4269, 4392]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["New Name"], "extent": [4392, 4406], "body": [{"type": "para", "indent": 8, "text": ["When enabled, this name will be used for the destination attribute.\n        The second input is optional when this is enabled;\n        the source attribute will be from the first input if there is only one.\n        This supports multiple renames and even wildcard patterns, using ", {"type": "code", "text": ["*"]}, " and ", {"type": "code", "text": ["?"]}, ",\n        so long as the number of patterns is the same as the number of patterns in\n        ", {"type": "ui", "text": ["Attribute Name"]}, ".  For example, if ", {"type": "ui", "text": ["Attribute Name"]}, " is ", {"type": "code", "text": ["*"]}, "\n        and this is ", {"type": "code", "text": ["copied_*"]}, ", attributes like ", {"type": "code", "text": ["P"]}, " and ", {"type": "code", "text": ["N"]}, " will be copied to\n        ", {"type": "code", "text": ["copied_P"]}, " and ", {"type": "code", "text": ["copied_N"]}, ".  It also supports reordering wildcards, so if\n        ", {"type": "ui", "text": ["Attribute Name"]}, " is ", {"type": "code", "text": ["*_*"]}, " and this is ", {"type": "code", "text": ["*(1)_*(0)"]}, ", an attribute\n        named ", {"type": "code", "text": ["a_x"]}, " will be copied to ", {"type": "code", "text": ["x_a"]}, "."], "extent": [4406, 5140]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Attribute Class"], "extent": [5140, 5161], "body": [{"type": "para", "indent": 8, "text": ["Where the attribute is located on the geometry. Vertex, point,\n        primitive, and detail attributes can be copied. ", {"type": "q", "text": ["Use Group Type"]}, "\n        looks for the attribute in the same place as specified by the\n        Group Type parameter. ", {"type": "q", "text": ["Auto Detect"]}, " first looks in the place\n        specified by the Group Type, then looks for the attribute in\n        vertices, points, primitives, and detail (in that order)."], "extent": [5161, 5580]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Copy Local Variable"], "extent": [5580, 5605], "body": [{"type": "para", "indent": 8, "text": ["All local variables referring to the copied attributes are also\n        copied.  This cannot be used if ", {"type": "ui", "text": ["New Name"]}, " is used and different\n        from ", {"type": "ui", "text": ["Attribute Name"]}, "."], "extent": [5605, 5786]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Copy Data"], "extent": [5786, 5801], "body": [{"type": "para", "indent": 8, "text": ["Copies the actual attribute data contained in elements. Disabling this\n        can be useful when you just need to copy over the attribute properties\n        and meta data."], "extent": [5801, 5983]}], "container": true, "role": "item"}], "container": true, "role": "item_group"}], "text": "Parameters"}, {"level": 1, "id": "related", "container": true, "type": "related_section", "indent": 0, "role": "section", "extent": [5983, 5992], "body": [{"type": "bullet_group", "body": [{"blevel": 6, "type": "bullet", "indent": 4, "text": [{"scheme": "Node", "value": "/nodes/sop/attribute", "type": "link", "text": "", "fullpath": "/nodes/sop/attribute.html"}], "extent": [5992, 6019]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": [{"scheme": "Node", "value": "/nodes/sop/attribcreate", "type": "link", "text": "", "fullpath": "/nodes/sop/attribcreate.html"}], "extent": [6019, 6049]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": [{"scheme": "Node", "value": "/nodes/sop/attribmirror", "type": "link", "text": "", "fullpath": "/nodes/sop/attribmirror.html"}], "extent": [6049, 6079]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": [{"scheme": "Node", "value": "/nodes/sop/attribtransfer", "type": "link", "text": "", "fullpath": "/nodes/sop/attribtransfer.html"}], "extent": [6079, 6111]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": [{"scheme": "Node", "value": "/nodes/sop/groupcopy", "type": "link", "text": "", "fullpath": "/nodes/sop/groupcopy.html"}], "extent": [6111, 6138]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": [{"scheme": "Node", "value": "/nodes/sop/point", "type": "link", "text": "", "fullpath": "/nodes/sop/point.html"}], "extent": [6138, 6161]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": [{"scheme": "Node", "value": "/nodes/sop/primitive", "type": "link", "text": "", "fullpath": "/nodes/sop/primitive.html"}], "extent": [6161, 6188]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": [{"scheme": "Node", "value": "/nodes/sop/vertex", "type": "link", "text": "", "fullpath": "/nodes/sop/vertex.html"}], "extent": [6188, 6212]}], "container": true}], "text": "Related"}], "title": ["Attribute Copy"], "summary": ["Copies attributes between groups of vertices,\npoints, or primitives."]}