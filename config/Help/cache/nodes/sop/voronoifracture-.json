{"type": "root", "attrs": {"type": "node", "context": "sop", "icon": "SOP/voronoifracture", "internal": "voronoifracture", "since": "11.0", "tags": "break", "version": "", "namespace": null}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["Voronoi Fracture"], "extent": [108, 129]}, {"type": "summary", "indent": 0, "text": ["Fractures the input geometry by performing a Voronoi decomposition\nof space around the input cell points"], "extent": [129, 242]}, {"type": "para", "indent": 0, "text": ["The Voronoi fracture SOP takes two primary inputs: the mesh to\nfracture, and the points around which to build each Voronoi cell.\nOften these points will be generated by either the\n", {"scheme": "Node", "value": "/nodes/sop/scatter", "type": "link", "text": ["Scatter SOP"], "fullpath": "/nodes/sop/scatter.html"}, ", or the\n", {"scheme": "Node", "value": "/nodes/sop/pointsfromvolume", "type": "link", "text": ["Points From Volume SOP"], "fullpath": "/nodes/sop/pointsfromvolume.html"}, ", but any source of\npoints will work.  For a solid fracture (where the interior\nsurface of the object is built for each piece) it is very useful to\nhave all the points reside within the volume, in which case one\nfractured piece will be generated for for each cell point.  Pieces cut by\nthis SOP can be further ", {"scheme": null, "value": "#clustering", "type": "link", "text": ["clustered"], "fullpath": "/nodes/sop/voronoifracture-.html#clustering", "fragment": "#clustering"}, " together based on attribute\nvalues on the input points.  An optional third input can provide an SDF Volume\nto be used in depth sampling when generating ", {"scheme": null, "value": "#interiordetail", "type": "link", "text": ["detail"], "fullpath": "/nodes/sop/voronoifracture-.html#interiordetail", "fragment": "#interiordetail"}, " on the\ninterior surfaces."], "extent": [242, 1049]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Tips"], "extent": [1049, 1060], "body": [{"type": "bullet_group", "body": [{"blevel": 6, "type": "bullet", "indent": 4, "text": ["Using points scattered in a density volume generated from the\n      geometry using ", {"scheme": "Node", "value": "/nodes/sop/isooffset", "type": "link", "text": ["IsoOffset"], "fullpath": "/nodes/sop/isooffset.html"}, " is a flexible way\n      to generate cell points, as you can modulate the density in the volume\n      before scattering to get more points within particular regions of the\n      object.  Where there is higher point density, the Fracture SOP will\n      generate more, smaller pieces."], "extent": [1060, 1462]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": ["Mesh complexity slows down fracturing more than anything.\n      PolyReduce before fracturing if you can."], "extent": [1462, 1573]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": ["When testing fractures, turning off ", {"type": "ui", "text": ["Create Inside Surface"]}, " will\n      speed things up and should look the same on the surface of the\n      object."], "extent": [1573, 1729]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": ["If you have problems with insufficient point density in\n      long appendages or something in the input object, try\n      ", {"scheme": "Node", "value": "/nodes/sop/scatter", "type": "link", "text": ["scattering"], "fullpath": "/nodes/sop/scatter.html"}, " points after using\n      ", {"scheme": "Node", "value": "/nodes/sop/isooffset", "type": "link", "text": ["IsoOffset"], "fullpath": "/nodes/sop/isooffset.html"}, " and scaling the density up in those\n      areas."], "extent": [1729, 1992]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": ["You can object merge the ", {"type": "code", "text": ["CONSTRAINT_NETWORK SOP"]}, " from inside of\n      this node to recover the connectivity graph of the pieces.\n      This is useful for feeding into a glue constraint network."], "extent": [1992, 2195]}], "container": true}]}, {"level": 1, "id": "inputs", "container": true, "type": "inputs_section", "indent": 0, "role": "section", "extent": [2195, 2203], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Geometry to Fracture"], "extent": [2203, 2229], "body": [{"type": "para", "indent": 8, "text": ["The polygonal geometry that will be fractured according to the\n        Voronoi decomposition."], "extent": [2229, 2332]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Points for Voronoi Cells"], "extent": [2332, 2362], "body": [{"type": "para", "indent": 8, "text": ["Input points, where each point represents a Voronoi cell around\n        which to fracture the geometry."], "extent": [2362, 2475]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Optional SDF For Depth Sampling"], "extent": [2475, 2512], "body": [{"type": "para", "indent": 8, "text": ["An optional SDF Volume, usually created by\n        ", {"scheme": "Node", "value": "/nodes/sop/isooffset", "type": "link", "text": ["IsoOffset"], "fullpath": "/nodes/sop/isooffset.html"}, ", to use for depth sampling when\n        creating ", {"scheme": null, "value": "#interiordetail", "type": "link", "text": ["interior detail"], "fullpath": "/nodes/sop/voronoifracture-.html#interiordetail", "fragment": "#interiordetail"}, ". If not connected, this node will generate a default one."], "extent": [2512, 2744]}], "container": true}], "container": true}], "text": "Inputs"}, {"level": 1, "id": "parameters", "container": true, "type": "parameters_section", "indent": 0, "role": "section", "extent": [2744, 2756], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Group to Fracture"], "extent": [2756, 2776], "body": [{"type": "para", "indent": 4, "text": ["The geometry to be fractured."], "extent": [2776, 2815]}, {"type": "para", "indent": 4, "text": ["If no group is specified, the full input geometry will be\n    fractured."], "extent": [2815, 2893]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Fuse Points"], "extent": [2893, 2906], "body": [{"type": "para", "indent": 4, "text": ["The incoming geometry will have its points fused together.  This\n    can help detect closed objects to provide proper shattering of\n    solid objects where points were uniqued for shading.  However, it\n    can also change the incoming topology, so if the geometry has\n    already been properly fused, this should not be used."], "extent": [2906, 3237]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Update Fused Point Normals"], "extent": [3237, 3265], "body": [{"type": "para", "indent": 4, "text": ["After fusing point normals may be come incorrect.  This will rebuild\n    the point normals if fusing is enabled.  If custom point normals\n    need to be maintained, this should be disabled."], "extent": [3265, 3460]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Create Inside Surfaces"], "extent": [3460, 3484], "body": [{"type": "para", "indent": 4, "text": ["Creates inside faces. "], "extent": [3484, 3512]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Connect Inside Edges"], "extent": [3512, 3534], "body": [{"type": "para", "indent": 4, "text": ["Connects the inside faces of the fractured geometry to the corresponding outside faces."], "extent": [3534, 3627]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Cusp Interior Normals"], "extent": [3627, 3650], "body": [{"type": "para", "indent": 4, "text": ["Computes vertex normals on the edges of the interior geometry, so that they will have a cusped appearance."], "extent": [3671, 3783]}], "container": true, "attrs": {"id": "cuspnormals"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Cusp Interior Normals Angle"], "extent": [3783, 3812], "body": [{"type": "para", "indent": 4, "text": ["Computes vertex normals on the edges of the interior geometry with angles greater than this angle, so that they will have a cusped appearance."], "extent": [3831, 3979]}], "container": true, "attrs": {"id": "cuspangle"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Cusp Exterior Normals"], "extent": [3979, 4002], "body": [{"type": "para", "indent": 4, "text": ["Computes vertex normals on the edges of the input geometry, so that they will have a cusped appearance.\n    If the input geometry already has normals, you may want to disable this."], "extent": [4028, 4214]}], "container": true, "attrs": {"id": "cuspouternormals"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Cusp Exterior Normals Angle"], "extent": [4214, 4243], "body": [{"type": "para", "indent": 4, "text": ["Computes vertex normals on the edges of the input geometry with angles greater than this angle, so that they will have a cusped appearance.\n    If the input geometry already has normals, you may want to disable this."], "extent": [4267, 4489]}], "container": true, "attrs": {"id": "cuspouterangle"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Cusp Interior Edges by Uniquing Points"], "extent": [4489, 4529], "body": [{"type": "para", "indent": 4, "text": ["Cusps the edges of the interior geometry by duplicating points.  This can result in disconnected geometry, so ", {"type": "ui", "text": ["Cusp Interior Normals"]}, " is recommended instead."], "extent": [4529, 4694]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Visualize Pieces"], "extent": [4694, 4712], "body": [{"type": "para", "indent": 4, "text": ["Allows you to visualize fractured geometry by applying a random color to each piece."], "extent": [4712, 4802]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Use Cell Point Group"], "extent": [4802, 4824], "body": [{"type": "para", "indent": 4, "text": ["Only fracture pieces around the input points in the group or\n    pattern specified in the ", {"type": "ui", "text": ["Cell Point Group"]}, " parameter."], "extent": [4824, 4955]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Cell Point Group"], "extent": [4955, 4973], "body": [{"type": "para", "indent": 4, "text": ["The point group from the input cell points around which to\n    fracture."], "extent": [4973, 5051]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Cluster Display Mode"], "extent": [5051, 5073], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Ignore Clustering"], "extent": [5073, 5096], "body": [{"type": "para", "indent": 8, "text": ["When ", {"type": "ui", "text": ["Use Cell Point Group"]}, " and ", {"type": "ui", "text": ["Cluster"]}, " are enabled, only cut\n        those pieces directly specified in the ", {"type": "ui", "text": ["Cell Point Group"]}, " parameter,\n        ignoring any clustered pieces."], "extent": [5096, 5290]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Keep Any Clustered Pieces"], "extent": [5290, 5321], "body": [{"type": "para", "indent": 8, "text": ["Fracture and output any pieces clustered to the specified\n        pieces as well."], "extent": [5321, 5411]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Keep Clustered Pieces Only For Primary Point"], "extent": [5411, 5461], "body": [{"type": "para", "indent": 8, "text": ["When clustering, each piece is associated with a primary\n        point which is the point with the lowest point number in the cluster.\n        Only output pieces for this cluster if this primary point is specified\n        in ", {"type": "ui", "text": ["Cell Point Group"]}, "."], "extent": [5461, 5721]}], "container": true}], "container": true}], "container": true, "role": "item"}], "container": true, "role": "item_group"}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Cut"], "extent": [5721, 5731], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Triangulation"], "extent": [5731, 5747], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Auto Detect"], "extent": [5747, 5765], "body": [{"type": "para", "indent": 8, "text": ["Determine whether the input points are 1D, 2D, or 3D and\n        generate a triangulation for them."], "extent": [5765, 5873]}], "container": true}, {"type": "dt", "indent": 4, "text": ["2D"], "extent": [5873, 5881], "body": [{"type": "para", "indent": 8, "text": ["Assume points are 2D and triangulate."], "extent": [5881, 5927]}], "container": true}, {"type": "dt", "indent": 4, "text": ["3D"], "extent": [5927, 5935], "body": [{"type": "para", "indent": 8, "text": ["Assume points are 3D and tetrahedralize."], "extent": [5935, 5984]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Use Existing"], "extent": [5984, 6002], "body": [{"type": "para", "indent": 8, "text": ["Use an existing triangulation on the input points."], "extent": [6002, 6066]}], "container": true}], "container": true}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Connectivity Partition"], "extent": [6066, 6090], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["None"], "extent": [6090, 6100], "body": [{"type": "para", "indent": 8, "text": ["Do not further partition pieces into groups by connectivity."], "extent": [6100, 6169]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Overwrite Piece Numbering"], "extent": [6169, 6200], "body": [{"type": "para", "indent": 8, "text": ["Normally each input cell point will create one output piece\n        group.  However, with concave objects this can mean that\n        disconnected pieces of geometry are placed in the same piece\n        group.  Enabling this option will further divide the pieces\n        into separate, connected groups of geometry.  This option\n        allows the piece numbers to be overwritten by this operation,\n        which is fast and acceptable if you don\u2019t need the piece\n        numbers to match the input point numbers."], "extent": [6200, 6721]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Maintain Piece Numbering"], "extent": [6721, 6751], "body": [{"type": "para", "indent": 8, "text": ["This option uses a slower algorithm to ensure that piece\n        numbers remain consistent with input point numbers."], "extent": [6751, 6881]}], "container": true}], "container": true}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Cut Plane Offset"], "extent": [6881, 6899], "body": [{"type": "para", "indent": 4, "text": ["Offsets the cut plane between adjacent cell points before cutting.\n    Increasing this has the effect of putting space between each fractured\n    piece."], "extent": [6899, 7061]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Optimize Cutting Based on Clustering"], "extent": [7061, 7099], "body": [{"type": "para", "indent": 4, "text": ["When clustering is enabled, avoid cutting any pieces that are\n    fully surrounded by pieces in the same cluster."], "extent": [7099, 7226]}, {"type": "note_group", "body": [{"type": "note", "indent": 4, "role": "item", "extent": [7226, 7236], "body": [{"type": "para", "indent": 8, "text": ["Enabling this option means that the geometry will be\n        re-fractured any time the ", {"type": "ui", "text": ["Cluster"]}, " parameters are changed."], "extent": [7236, 7372]}], "container": true}], "container": true, "role": "item_group"}], "container": true, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 2, "id": "clustering", "container": true, "type": "h", "indent": 0, "text": ["Cluster"], "extent": [7372, 7399], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Cluster Pieces"], "extent": [7399, 7416], "body": [{"type": "para", "indent": 4, "text": ["Fuse the individual pieces into larger clusters based on their\n    input points sharing a common, non-zero cluster attribute value.\n    Values for this attribute can come from attributes on the input\n    points, or from noise as specified below."], "extent": [7416, 7671]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Add Cluster Noise"], "extent": [7671, 7690], "body": [{"type": "para", "indent": 4, "text": ["Add cellular noise to any input points with a zero cluster\n    attribute value."], "extent": [7690, 7779]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Size"], "extent": [7779, 7785], "body": [{"type": "para", "indent": 4, "text": ["The size of the cells for the noise added to the input points.  This \n    roughly corresponds to the size of the clusters."], "extent": [7785, 7913]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Offset"], "extent": [7913, 7921], "body": [{"type": "para", "indent": 4, "text": ["The offset of the cellular noise added to the input points."], "extent": [7921, 7986]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Jitter"], "extent": [7986, 7994], "body": [{"type": "para", "indent": 4, "text": ["The jitter of the cellular noise added to the input points."], "extent": [7994, 8063]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Random Detachment"], "extent": [8063, 8082], "body": [{"type": "para", "indent": 4, "text": ["Randomly detach pieces from clusters."], "extent": [8082, 8129]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Detach Seed"], "extent": [8129, 8142], "body": [{"type": "para", "indent": 4, "text": ["The random seed used for detachment."], "extent": [8142, 8188]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Detach Ratio"], "extent": [8188, 8202], "body": [{"type": "para", "indent": 4, "text": ["The probability that a particular piece will be detached."], "extent": [8202, 8265]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Create Constraint Network"], "extent": [8265, 8292], "body": [{"type": "para", "indent": 4, "text": ["If selected, the constraint network in the internal ", {"type": "code", "text": ["CONSTRAINT_NETWORK SOP"]}, " will have its primitive values overwritten if the edge marks a connection between two clustered pieces.  Also, fusing won\u2019t be performed, since the network will be presumed to handle holding the clusters together."], "extent": [8292, 8588]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Within Cluster Constraint Strength"], "extent": [8588, 8624], "body": [{"type": "para", "indent": 4, "text": ["The strength of glue bonds between two pieces in the same cluster."], "extent": [8624, 8696]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Between Cluster Constraint Strength"], "extent": [8696, 8733], "body": [{"type": "para", "indent": 4, "text": ["The strength of glue bonds between two pieces in different clusters."], "extent": [8733, 8811]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Cluster Attribute"], "extent": [8811, 8830], "body": [{"type": "para", "indent": 4, "text": ["The name of the cluster attribute."], "extent": [8830, 8874]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Attribute Tolerance"], "extent": [8874, 8895], "body": [{"type": "para", "indent": 4, "text": ["Pieces will be considered in the same cluster if their cluster\n    attribute value is within this tolerance."], "extent": [8895, 9013]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Fuse Tolerance"], "extent": [9013, 9029], "body": [{"type": "para", "indent": 4, "text": ["Pieces in the same cluster are fused together with this tolerance."], "extent": [9029, 9105]}], "container": true, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 2, "id": "interiordetail", "container": true, "type": "h", "indent": 0, "text": ["Interior Detail"], "extent": [9105, 9145], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Add Interior Detail"], "extent": [9145, 9167], "body": [{"type": "para", "indent": 4, "text": ["Add additional polygons to the interior surfaces created when\n    ", {"type": "ui", "text": ["Create Inside Surfaces"]}, " is enabled."], "extent": [9167, 9277]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Visualize Noise Scale"], "extent": [9277, 9300], "body": [{"type": "para", "indent": 4, "text": ["Add color to the pieces to indicate the amount of noise applied at\n    each point."], "extent": [9300, 9388]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Triangulate Non-Planar Detail"], "extent": [9388, 9419], "body": [{"type": "para", "indent": 4, "text": ["The ", {"type": "ui", "text": ["Add Interior Detail"]}, " option can create non-planar quadrilaterals.\n    This option will triangulate the interior detail."], "extent": [9419, 9555]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Detail Size"], "extent": [9555, 9568], "body": [{"type": "para", "indent": 4, "text": ["The size of the polygons added to the interior surfaces."], "extent": [9568, 9634]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Noise Type"], "extent": [9634, 9646], "body": [{"type": "para", "indent": 4, "text": ["The type of noise added to the interior points."], "extent": [9646, 9703]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Frequency"], "extent": [9703, 9714], "body": [{"type": "para", "indent": 4, "text": ["The frequency of the noise added to the interior points."], "extent": [9714, 9776]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Offset"], "extent": [9776, 9784], "body": [{"type": "para", "indent": 4, "text": ["The offset of the noise added to the interior points."], "extent": [9784, 9847]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Turbulence"], "extent": [9847, 9859], "body": [{"type": "para", "indent": 4, "text": ["The turbulence of the noise added to the interior points."], "extent": [9859, 9926]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Depth Volume Resolution"], "extent": [9926, 9951], "body": [{"type": "para", "indent": 4, "text": ["Resolution of the default depth sampling SDF."], "extent": [9951, 10006]}, {"type": "para", "indent": 4, "text": ["The amplitude of the noise added to the interior points is scaled\n    by the depth of the point within the surface of the original geometry,\n    calculated by sampling an SDF of the geometry.  If an SDF is not\n    connected to the third input of the SOP, a default one will be\n    created at this resolution."], "extent": [10006, 10324]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Clamp Displacement Amount to Depth"], "extent": [10324, 10360], "body": [{"type": "para", "indent": 4, "text": ["Limit the amount of displacement done at a point by its depth\n    within the surface."], "extent": [10360, 10455]}, {"type": "para", "indent": 4, "text": ["When adding high amplitude noise to the interior points, it\u2019s\n    possible that the interior surface could interpenetrate the exterior.\n    This option will clamp the amount of displacement at a particular\n    point by the depth within the surface. "], "extent": [10455, 10714]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Clamp Depth Percentage"], "extent": [10714, 10738], "body": [{"type": "para", "indent": 4, "text": ["The percentage of the depth within the surface to which the\n    displacement should be clamped."], "extent": [10738, 10843]}, {"type": "para", "indent": 4, "text": ["Because an SDF is not a perfect representation of depth, this\n    option allows you to clamp to a percentage of the depth.  Lowering\n    this can guarantee no interpenetration, at the expense of more\n    clamping of the interior noise."], "extent": [10843, 11088]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Depth / Noise Bias"], "extent": [11088, 11108], "body": [{"type": "para", "indent": 4, "text": ["The value for the bias curve that maps depth within the surface to\n    the amplitude of the noise applied."], "extent": [11108, 11220]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Use Depth / Noise Ramp"], "extent": [11220, 11244], "body": [{"type": "para", "indent": 4, "text": ["Use a ramp control for more precise control of the depth / noise\n    mapping."], "extent": [11244, 11331]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Depth / Noise Ramp"], "extent": [11331, 11351], "body": [{"type": "para", "indent": 4, "text": ["The ramp that maps from depth within the surface to the amplitude\n    of the noise applied."], "extent": [11351, 11448]}], "container": true, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Groups"], "extent": [11448, 11461], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Create Output Groups"], "extent": [11461, 11484], "body": [{"type": "para", "indent": 4, "text": ["Create groups containing each individual piece, as well as the\n    interior and exterior geometry."], "extent": [11484, 11588]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Piece Group Prefix"], "extent": [11588, 11608], "body": [{"type": "para", "indent": 4, "text": ["The group name prefix applied to each piece created by the\n    fracture."], "extent": [11608, 11686]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Interior Group"], "extent": [11686, 11702], "body": [{"type": "para", "indent": 4, "text": ["The group containing any primitives in the interior surfaces\n    created during fracturing."], "extent": [11702, 11803]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Exterior Group"], "extent": [11803, 11819], "body": [{"type": "para", "indent": 4, "text": ["The group containing the primitives in the original input\n    geometry."], "extent": [11819, 11900]}], "container": true, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Attributes"], "extent": [11900, 11917], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Create Name Attribute"], "extent": [11917, 11941], "body": [{"type": "para", "indent": 4, "text": ["Create a primitive attribute called ", {"type": "q", "text": ["name"]}, " identifying primitives belonging\n    to each piece."], "extent": [11941, 12041]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Name Prefix"], "extent": [12041, 12054], "body": [{"type": "para", "indent": 4, "text": ["The prefix applied to the name of each piece created by the fracture."], "extent": [12054, 12129]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Copy Cell Point Attributes"], "extent": [12129, 12157], "body": [{"type": "para", "indent": 4, "text": ["Copy attributes from the input cell points to the output piece\n    geometry."], "extent": [12157, 12243]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["To Piece Points"], "extent": [12243, 12260], "body": [{"type": "para", "indent": 4, "text": ["The attributes to copy from the cell points to the points of the\n    output piece geometry."], "extent": [12260, 12357]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["To Piece Primitives"], "extent": [12357, 12378], "body": [{"type": "para", "indent": 4, "text": ["The attributes to copy from the cell points to the primitives of\n    the output piece geometry."], "extent": [12378, 12479]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Keep Internal Attributes"], "extent": [12479, 12505], "body": [{"type": "para", "indent": 4, "text": ["Keep various attributes that are used during the fracturing\n    process."], "extent": [12505, 12587]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Primitive Piece"], "extent": [12587, 12604], "body": [{"type": "para", "indent": 4, "text": ["The name of the attribute containing the piece number with which\n    each primitive is associated."], "extent": [12604, 12708]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Primitive Cell Point"], "extent": [12708, 12730], "body": [{"type": "para", "indent": 4, "text": ["The name of the attribute on primitives that will store which\n    of the fracture points it comes from."], "extent": [12730, 12843]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Primitive Clip Point"], "extent": [12843, 12865], "body": [{"type": "para", "indent": 4, "text": ["The name of the attribute on interior surface primitives that\n    correspond to the other piece adjacent at that surface."], "extent": [12865, 12996]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Primitive Outside"], "extent": [12996, 13015], "body": [{"type": "para", "indent": 4, "text": ["The name of the attribute indicating if a primitive is exterior or\n    interior."], "extent": [13015, 13105]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Point Depth"], "extent": [13105, 13118], "body": [{"type": "para", "indent": 4, "text": ["The name of the attribute containing the depth of a point within\n    the surface of the object when creating interior detail."], "extent": [13118, 13249]}], "container": true, "role": "item"}], "container": true, "role": "item_group"}]}], "text": "Parameters"}, {"level": 1, "id": "related", "container": true, "type": "related_section", "indent": 0, "role": "section", "extent": [13249, 13258], "body": [{"type": "bullet_group", "body": [{"blevel": 6, "type": "bullet", "indent": 4, "text": [{"scheme": null, "value": "/shelf/shatter", "type": "link", "text": ["Shatter"], "fullpath": "/shelf/shatter.html"}], "extent": [13258, 13289]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": [{"scheme": null, "value": "/dyno/voronoifracture", "type": "link", "text": ["How to control the effects of voronoi fracture"], "fullpath": "/dyno/voronoifracture.html"}], "extent": [13289, 13369]}], "container": true}], "text": "Related"}], "title": ["Voronoi Fracture"], "summary": ["Fractures the input geometry by performing a Voronoi decomposition\nof space around the input cell points"]}