{"type": "root", "attrs": {"type": "node", "context": "sop", "internal": "labs::building_from_patterns::1.0", "icon": "SOP/labs::building_from_patterns::1.0", "version": "1.1", "namespace": "labs"}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["Labs Building from Patterns"], "extent": [126, 158]}, {"type": "summary", "indent": 0, "text": ["Creates buildings from blockout geometry defined by a pattern of floor modules. "], "extent": [158, 248]}, {"type": "para", "indent": 0, "text": ["This node defines building patterns using Floor Descriptions generated by Labs Building Generator Utility nodes. These patterns can be repeated or occur at set intervals along each floor, defining the building style from the ground up."], "extent": [248, 486]}, {"level": 1, "id": "parameters", "container": true, "type": "parameters_section", "indent": 0, "role": "section", "extent": [486, 498], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 4, "text": ["Random Fill Patterns"], "extent": [498, 525], "body": [], "container": true, "attrs": {"id": "btn_random_fill            Randomly assigns a building pattern based on available floor names."}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Show Floors"], "extent": [643, 660], "body": [], "container": true, "attrs": {"id": "btn_showfloors            Generates the names of floors that can be used in the Pattern parameter."}, "role": "item"}], "container": true, "role": "item_group"}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 4, "text": ["Patterns"], "extent": [782, 801], "body": [{"level": 3, "id": null, "container": true, "type": "h", "indent": 4, "text": ["Add Building Styles"], "extent": [801, 834], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 4, "text": ["Group"], "extent": [834, 846], "body": [{"type": "para", "indent": 8, "text": ["Name of the building group (not building sides) to apply the specified pattern to."], "extent": [866, 966]}], "container": true, "attrs": {"id": "group#"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Pattern"], "extent": [966, 979], "body": [{"type": "para", "indent": 8, "text": ["Pattern arrangement of floors that will fill the Blockout object. Floor names in ", {"type": "code", "text": ["<>"]}, " brackets will repeat along the object, and floor names in ", {"type": "code", "text": ["[]"]}, " brackets will occur a single time unless succeeded by a number, then it will repeat that many times.\n        ", {"tag": "p", "attrs": {}, "type": "xml", "text": [{"type": "ui", "text": ["Rigid"]}, ":  ", {"type": "code", "text": ["[F], [F-G], [F][G], [F-G-F]."]}]}, "\n        ", {"tag": "p", "attrs": {}, "type": "xml", "text": [{"type": "ui", "text": ["Rigid (repeated)"]}, ":  ", {"type": "code", "text": ["[F]3, [F-G]2."]}]}, "\n        ", {"tag": "p", "attrs": {}, "type": "xml", "text": [{"type": "ui", "text": ["Fill (repeated)"]}, ":  ", {"type": "code", "text": ["<F>, <F-G>, <F-G-F>."]}]}, "\n        ", {"tag": "p", "attrs": {}, "type": "xml", "text": [{"type": "ui", "text": ["Variations"]}, ":  As long as the given floor owns variations."]}, "\n        ", {"tag": "p", "attrs": {}, "type": "xml", "text": [{"type": "ui", "text": ["Incorrect"]}, ":  ", {"type": "code", "text": ["<*>, [*], <F*>, [F-G*], <F>2, <F><G>, missing Fill modules."]}]}], "extent": [1001, 1609]}], "container": true, "attrs": {"id": "pattern#"}, "role": "item"}], "container": true, "role": "item_group"}]}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 4, "text": ["Settings"], "extent": [1609, 1628], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 4, "text": ["Pack and Instance"], "extent": [1628, 1651], "body": [], "container": true, "attrs": {"id": "pack_modules            Pack and instance the output geometry."}, "role": "item"}], "container": true, "role": "item_group"}, {"level": 3, "id": null, "container": true, "type": "h", "indent": 4, "text": ["Overwrite Floors"], "extent": [1729, 1756], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 4, "text": ["Force Height Scaling"], "extent": [1756, 1782], "body": [], "container": true, "attrs": {"id": "height_scale            Ensures that incoming overwriting patterns are scaled properly to the building."}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Override Radius"], "extent": [1909, 1930], "body": [], "container": true, "attrs": {"id": "override_maxdist            The distance to search for geometry with overwriting patterns. This geometry is wired into the fourth input with the overwriting pattern set as the 'floor_pattern' primitive string attribute. The building points will cast out a ray to determine if an intersection with this geometry is made."}, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 3, "id": null, "container": true, "type": "h", "indent": 4, "text": ["Point Cloud Output"], "extent": [2275, 2306], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 4, "text": ["Get Instances from Patterns"], "extent": [2306, 2340], "body": [], "container": true, "attrs": {"id": "get_instance            Copies instance attribute from input modules to the point cloud output."}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Game Engine"], "extent": [2459, 2476], "body": [], "container": true, "attrs": {"id": "engine            Name of the engine the point cloud will be imported into. "}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Output Orient Attribute for Rotations"], "extent": [2576, 2619], "body": [], "container": true, "attrs": {"id": "input            Outputs the orientation of each point as the Orient attribute."}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Module Pivot Location"], "extent": [2722, 2749], "body": [], "container": true, "attrs": {"id": "set_middle            The location of points in relation to their corresponding primitive."}, "role": "item"}], "container": true, "role": "item_group"}]}]}], "text": "Parameters"}, {"level": 1, "id": "related", "container": true, "type": "related_section", "indent": 0, "role": "section", "extent": [2878, 2887], "body": [{"type": "bullet_group", "body": [{"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/sop/labs--building_generator-4.0 ", "type": "link", "text": ["Labs Building Generator"], "fullpath": "/nodes/sop/labs--building_generator-4.0 .html"}], "extent": [2887, 2954]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/sop/labs--sop_building_generator_utility", "type": "link", "text": ["Labs Building Generator Utility"], "fullpath": "/nodes/sop/labs--sop_building_generator_utility.html"}], "extent": [2954, 3035]}], "container": true}], "text": "Related"}], "title": ["Labs Building from Patterns"], "summary": ["Creates buildings from blockout geometry defined by a pattern of floor modules. "]}