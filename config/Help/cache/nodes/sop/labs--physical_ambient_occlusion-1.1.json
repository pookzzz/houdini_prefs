{"type": "root", "attrs": {"type": "node", "context": "sop", "internal": "labs::physical_ambient_occlusion::1.1", "icon": "SOP/labs::physical_ambient_occlusion::1.1", "since": "19.5", "version": "1.1", "namespace": "labs"}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["Labs Physical Ambient Occlusion"], "extent": [150, 186]}, {"type": "summary", "indent": 0, "text": ["Computes ambient occlusion, generates dirt masks, as well as identifies peaks and valleys on meshes."], "extent": [186, 295]}, {"type": "para", "indent": 0, "text": ["This node can perform 4 types of mesh analysis akin to the concept of ambient occlusion. The ", {"type": "ui", "text": ["Physical Ambient Occlusion"]}, " mode is more physically-grounded. The ", {"type": "ui", "text": ["Valleys"]}, ", ", {"type": "ui", "text": ["Peaks"]}, ", and ", {"type": "ui", "text": ["Dirt Buildup"]}, " modes have more artistic interpretations."], "extent": [295, 545]}, {"type": "para", "indent": 0, "text": ["When computing ambient occlusion, this node uses ", {"scheme": null, "value": "https://en.wikipedia.org/wiki/Geodesic_polyhedron", "type": "link", "text": ["high-frequency icosahedral"], "exists": true}, " sampling. This new method is more efficient and stable compared to the classical random-direction sampling. Icosahedral samples have much more uniform distributions. It also eliminates the need for a random seed parameter, making the controls more intuitive, as it is perhaps more natural to think of ambient occlusion as being intrinsic to the mesh rather than dependent upon a random factor."], "extent": [545, 1068]}, {"type": "para", "indent": 0, "text": ["For this same reason, the icosahedral sampling method is also used to identify peaks and valleys."], "extent": [1068, 1167]}, {"type": "para", "indent": 0, "text": ["Dirt mask generation still uses random-direction sampling because the visual noise in this case is desired."], "extent": [1167, 1276]}, {"level": 1, "id": "parameters", "container": true, "type": "parameters_section", "indent": 0, "role": "section", "extent": [1276, 1288], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 4, "text": ["Mode"], "extent": [1288, 1299], "body": [{"type": "para", "indent": 8, "text": ["The type of mesh analysis to perform."], "extent": [1317, 1372]}, {"type": "para", "indent": 8, "text": [{"type": "ui", "text": ["Physical Ambient Occlusion"]}, ": Computes ambient occlusion using a physically-plausible weighting scheme."], "extent": [1372, 1499]}, {"type": "para", "indent": 8, "text": [{"type": "ui", "text": ["Valleys"]}, ": Identifies areas with high concavity. The valley areas have lower output values."], "extent": [1499, 1614]}, {"type": "para", "indent": 8, "text": [{"type": "ui", "text": ["Peaks"]}, ": Identifies areas with high convexity. The peak areas have higher output values."], "extent": [1614, 1726]}, {"type": "para", "indent": 8, "text": [{"type": "ui", "text": ["Dirt Buildup"]}, ": Creates a dirt mask somewhat similar to ambient occlusion but algorithmically more noisy and random."], "extent": [1726, 1866]}], "container": true, "attrs": {"id": "mode"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Sample Frequency"], "extent": [1866, 1888], "body": [{"type": "para", "indent": 8, "text": ["The frequency of the ", {"scheme": null, "value": "https://en.wikipedia.org/wiki/Geodesic_polyhedron#Class_I", "type": "link", "text": ["class I icosahedral geodesic polyhedra"], "exists": true}, " used to generate the ambient occlusion samples."], "extent": [1912, 2097]}], "container": true, "attrs": {"id": "samplefreq"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Sample Count"], "extent": [2097, 2115], "body": [{"type": "para", "indent": 8, "text": ["The number of random-direction samples."], "extent": [2140, 2197]}], "container": true, "attrs": {"id": "samplecount"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Neighbourhood Radius"], "extent": [2197, 2223], "body": [{"type": "para", "indent": 8, "text": ["The radius of the neighbourhood to take into account when generating the results. In other words, it is the maximum trace distance of each sample."], "extent": [2246, 2410]}], "container": true, "attrs": {"id": "raylength"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Visibility Exponent"], "extent": [2410, 2435], "body": [{"type": "para", "indent": 8, "text": ["Visually affects the contrast of the output values. The contribution of each sample hit is weighted by the distance of the hit relatively to the maximum trace distance. The further away the hit is, the less it contributes to the weighted sum. This parameter controls how drastic that contribution fall-off is. The default value of 0.5 has a physically-plausible explanation."], "extent": [2452, 2844]}], "container": true, "attrs": {"id": "exp"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Random Seed"], "extent": [2844, 2861], "body": [{"type": "para", "indent": 8, "text": ["The seed used to generate the random sample directions."], "extent": [2883, 2948]}], "container": true, "attrs": {"id": "randseed"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Blurring Iterations"], "extent": [2948, 2973], "body": [{"type": "para", "indent": 8, "text": ["The number of times the output values are blurred."], "extent": [2996, 3064]}], "container": true, "attrs": {"id": "bluriters"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Blurring Step Size"], "extent": [3064, 3088], "body": [{"type": "para", "indent": 8, "text": ["The blurring amount in each iteration. Lower step sizes combined with higher blurring iterations can better retain large-scale variations while smoothing out small-scale variations."], "extent": [3110, 3309]}], "container": true, "attrs": {"id": "stepsize"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Output Attribute"], "extent": [3309, 3331], "body": [{"type": "para", "indent": 8, "text": ["The name of the output attribute. This attribute\u2019s meaning depends on which ", {"type": "ui", "text": ["Mode"]}, " is selected."], "extent": [3357, 3472]}], "container": true, "attrs": {"id": "outputattrib"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Normalize Output"], "extent": [3472, 3494], "body": [{"type": "para", "indent": 8, "text": ["Normalizes the output values to 0-1 range."], "extent": [3517, 3569]}], "container": true, "attrs": {"id": "normalize"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Invert Output"], "extent": [3569, 3588], "body": [{"type": "para", "indent": 8, "text": ["Outputs one minus the original output values."], "extent": [3608, 3671]}], "container": true, "attrs": {"id": "invert"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Remap Output"], "extent": [3671, 3689], "body": [{"type": "para", "indent": 8, "text": ["Remaps the output values."], "extent": [3708, 3751]}], "container": true, "attrs": {"id": "remap"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Remap Ramp"], "extent": [3751, 3767], "body": [{"type": "para", "indent": 8, "text": ["Controls how the output values are remapped."], "extent": [3790, 3844]}], "container": true, "attrs": {"id": "remapramp"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Visualize Output"], "extent": [3844, 3866], "body": [{"type": "para", "indent": 8, "text": ["Adds a color attribute to visualize the output values."], "extent": [3883, 3955]}], "container": true, "attrs": {"id": "vis"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Visualization Ramp"], "extent": [3955, 3979], "body": [{"type": "para", "indent": 8, "text": ["Controls how the output values are visualized."], "extent": [4000, 4064]}], "container": true, "attrs": {"id": "visramp"}, "role": "item"}], "container": true, "role": "item_group"}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 4, "text": ["Advanced"], "extent": [4064, 4083], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 4, "text": ["Cone Axis"], "extent": [4083, 4107], "body": [{"type": "para", "indent": 8, "text": ["Selects what to use as the central axis of the sampling cone."], "extent": [4129, 4212]}], "container": true, "attrs": {"id": "coneaxis"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Half-Cone Angle"], "extent": [4212, 4233], "body": [{"type": "para", "indent": 8, "text": ["In degrees, the limiting angle between any sample direction and the cone axis."], "extent": [4260, 4356]}], "container": true, "attrs": {"id": "halfconeangle"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Ray Offset"], "extent": [4356, 4372], "body": [{"type": "para", "indent": 8, "text": ["Offsets the trace origin of each sample from the mesh surface in the direction of the cone axis by this amount. This is typically used to prevent false hits."], "extent": [4395, 4570]}], "container": true, "attrs": {"id": "rayoffset"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Visualize Samples (Slow)"], "extent": [4570, 4600], "body": [{"type": "para", "indent": 8, "text": ["Creates polylines on each point to visualize all the samples. This is very slow and mostly for debug purposes."], "extent": [4624, 4752]}], "container": true, "attrs": {"id": "vissamples"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Sample Display Scale"], "extent": [4752, 4778], "body": [{"type": "para", "indent": 8, "text": ["Scales down the visualized trace distance to avoid visual chaos. When this is set to 1, the length of the visualized samples matches the value of ", {"type": "ui", "text": ["Neighbourhood Radius"]}, "."], "extent": [4803, 4992]}], "container": true, "attrs": {"id": "samplescale"}, "role": "item"}], "container": true, "role": "item_group"}]}], "text": "Parameters"}, {"level": 1, "id": "examples", "container": true, "type": "examples_section", "indent": 0, "role": "section", "extent": [4992, 5002], "body": [{"type": "bullet_group", "body": [{"blevel": 6, "type": "bullet", "indent": 4, "text": [{"scheme": null, "value": "https://github.com/sideeffects/SideFXLabs/blob/Development/hip/examples/physical_ambient_occlusion/physical_ambient_occlusion.1.1.hip", "type": "link", "text": ["Example File"], "exists": true}], "extent": [5002, 5159]}], "container": true}], "text": "Examples"}], "title": ["Labs Physical Ambient Occlusion"], "summary": ["Computes ambient occlusion, generates dirt masks, as well as identifies peaks and valleys on meshes."]}