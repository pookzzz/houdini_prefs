{"type": "root", "attrs": {"type": "node", "context": "sop", "icon": "SOP/mpmsolver", "internal": "mpmsolver", "tags": "MPM", "version": "1.0", "since": "20.5", "namespace": null}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["MPM Solver"], "extent": [107, 122]}, {"type": "summary", "indent": 0, "text": ["Solves the MPM simulation described by its inputs and parameters."], "extent": [122, 196]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Overview"], "extent": [196, 211], "body": [{"type": "para", "indent": 0, "text": ["The ", {"scheme": "Node", "value": "/nodes/sop/mpmsolver", "type": "link", "text": ["MPM Solver"], "fullpath": "/nodes/sop/mpmsolver.html"}, " can simulate many material types in a multi-physic context. MPM is an extension of FLIP to solid mechanics that was first introduced to graphics to simulate snow. It is particularly efficient at solving elastoplastic ", {"type": "q", "text": ["chunky"]}, " materials where large chunks are expected to stick together, such as with snow and soil. It is also possible to simulate complex interactions like water carrying large chunks of soil or concrete."], "extent": [211, 671]}, {"type": "para", "indent": 0, "text": ["The different materials are defined using the ", {"scheme": "Node", "value": "/nodes/sop/mpmsource", "type": "link", "text": ["MPM Source"], "fullpath": "/nodes/sop/mpmsource.html"}, " while colliders are expected to come from the ", {"scheme": "Node", "value": "/nodes/sop/mpmcollider", "type": "link", "text": ["MPM Collider"], "fullpath": "/nodes/sop/mpmcollider.html"}, ". The solver also requires the global resolution and start frame to be defined by the ", {"scheme": "Node", "value": "/nodes/sop/mpmcontainer", "type": "link", "text": ["MPM Container"], "fullpath": "/nodes/sop/mpmcontainer.html"}, ". It uses sparse background grids and does not require a domain to be specified, although it can often be a useful optimization in practice. The solver is fully written in OpenCL to take advantage of the powerful GPUs available in most workstations."], "extent": [671, 1204]}]}, {"level": 1, "id": "inputs", "container": true, "type": "inputs_section", "indent": 0, "role": "section", "extent": [1204, 1212], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 0, "text": ["MPM Sources"], "extent": [1212, 1226], "body": [{"type": "para", "indent": 4, "text": ["All ", {"scheme": "Node", "value": "/nodes/sop/mpmsource", "type": "link", "text": ["MPM Sources"], "fullpath": "/nodes/sop/mpmsource.html"}, " merged as a single geometry."], "extent": [1226, 1297]}], "container": true}, {"type": "dt", "indent": 0, "text": ["MPM Colliders"], "extent": [1297, 1312], "body": [{"type": "para", "indent": 4, "text": ["All ", {"scheme": "Node", "value": "/nodes/sop/mpmcollider", "type": "link", "text": ["MPM Colliders"], "fullpath": "/nodes/sop/mpmcollider.html"}, " merged as a single geometry."], "extent": [1312, 1387]}], "container": true}, {"type": "dt", "indent": 0, "text": ["MPM Container"], "extent": [1387, 1402], "body": [{"type": "para", "indent": 4, "text": ["The ", {"scheme": "Node", "value": "/nodes/sop/mpmcontainer", "type": "link", "text": ["MPM Container"], "fullpath": "/nodes/sop/mpmcontainer.html"}, " that defines the start frame, global resolution, and domain boundaries of the simulation if any."], "extent": [1402, 1550]}, {"type": "note_group", "body": [{"type": "note", "indent": 4, "role": "item", "extent": [1550, 1560], "body": [{"type": "para", "indent": 8, "text": ["The ", {"scheme": "Node", "value": "/nodes/sop/mpmcontainer", "type": "link", "text": ["MPM Container"], "fullpath": "/nodes/sop/mpmcontainer.html"}, " should also be referenced or connected by all ", {"scheme": "Node", "value": "/nodes/sop/mpmsource", "type": "link", "text": ["MPM Sources"], "fullpath": "/nodes/sop/mpmsource.html"}, " and ", {"scheme": "Node", "value": "/nodes/sop/mpmcollider", "type": "link", "text": ["MPM Colliders"], "fullpath": "/nodes/sop/mpmcollider.html"}, " used in the simulation."], "extent": [1560, 1755]}], "container": true}], "container": true, "role": "item_group"}], "container": true}], "container": true}], "text": "Inputs"}, {"level": 1, "id": "parameters", "container": true, "type": "parameters_section", "indent": 0, "role": "section", "extent": [1755, 1767], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Reset Simulation"], "extent": [1767, 1786], "body": [{"type": "para", "indent": 4, "text": ["Clears the entire simulation cache."], "extent": [1806, 1856]}], "container": true, "attrs": {"id": "resimulate"}, "role": "item"}], "container": true, "role": "item_group"}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Solver"], "extent": [1856, 1869], "body": [{"level": 3, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Iterations"], "extent": [1869, 1889], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Time Scale"], "extent": [1889, 1902], "body": [{"type": "para", "indent": 4, "text": ["Multiplier applied to the timestep used by the solver."], "extent": [1921, 1985]}], "container": true, "attrs": {"id": "timescale"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Global Substeps"], "extent": [1985, 2002], "body": [{"type": "para", "indent": 4, "text": ["The number of DOP substeps for each simulated frame. This should generally be kept to ", {"type": "code", "text": ["1"]}, " for performance reasons, but could be increased to achieve smooth continuous emission."], "extent": [2026, 2208]}], "container": true, "attrs": {"id": "globalsubsteps"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["CFL Condition"], "extent": [2208, 2223], "body": [{"type": "para", "indent": 4, "text": ["The fraction of voxel width that a particle is allowed to travel within a single timestep."], "extent": [2245, 2345]}], "container": true, "attrs": {"id": "cflcondition"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Material Condition"], "extent": [2345, 2365], "body": [{"type": "para", "indent": 4, "text": ["A multiplier on the maximum timestep allowed based on the simulated material properties. To maintain the integrity of stiff materials, impulses need to travel very fast through the material. This imposes a constraint on the maximum allowed timestep similar to the ", {"type": "ui", "text": ["CFL Condition"]}, ". Increasing this value or reducing the stiffness of the simulated materials will relax this constraint and could speed up the simulation."], "extent": [2392, 2821]}], "container": true, "attrs": {"id": "materialcondition"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Substeps Min/Max"], "extent": [2821, 2839], "body": [{"type": "para", "indent": 4, "text": ["Limits on the minimum and maximum number of substeps."], "extent": [2861, 2924]}, {"type": "para", "indent": 4, "text": ["The solver dynamically picks the lowest substep count based on the type and speed of the material. Although the max value is set at 10,000 by default, it doesn\u2019t mean 10,000 are necessarily being used. You can see the actual substep count on the outputted geometry as a detail attribute. The high default value is to account for stiffer materials, like concrete or metal, that will require more substeps and are expected to be slow."], "extent": [2924, 3362]}, {"type": "tip_group", "body": [{"type": "tip", "indent": 4, "role": "item", "extent": [3362, 3371], "body": [{"type": "para", "indent": 8, "text": ["When facing instability, it is recommended to look at the ", {"scheme": "Node", "value": "/nodes/sop/mpmsolver", "type": "link", "text": ["MPM Solver"], "fullpath": "/nodes/sop/mpmsolver.html"}, "'s detail attributes to find the number substeps actually being computed on each frame. Using this information, it is often easy to raise the minimum substeps or reduce the ", {"type": "ui", "text": ["CFL"]}, " / ", {"type": "ui", "text": ["Material Condition"]}, " to prevent it from dipping below a certain number which will often solve the issue."], "extent": [3371, 3759]}], "container": true}], "container": true, "role": "item_group"}, {"type": "note_group", "body": [{"type": "note", "indent": 4, "role": "item", "extent": [3759, 3769], "body": [{"type": "para", "indent": 8, "text": ["Both the ", {"type": "ui", "text": ["CFL"]}, " and ", {"type": "ui", "text": ["Material Conditions"]}, " impose their own independent constraint on the maximum timestep allowed. The most strict constraint will drive the timestep while the more permissive one will have little impact. This means that, when simulating very stiff materials (bounded by the ", {"type": "ui", "text": ["Material Condition"]}, " like metal or concrete), objects will be allowed to move relatively fast without noticeable changes on the number of substeps required by the ", {"type": "ui", "text": ["CFL Condition"]}, ". "], "extent": [3769, 4261]}], "container": true}], "container": true, "role": "item_group"}], "container": true, "attrs": {"id": "substeprange"}, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 3, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Forces"], "extent": [4261, 4276], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Gravity"], "extent": [4276, 4286], "body": [{"type": "para", "indent": 4, "text": ["The gravity acceleration."], "extent": [4303, 4338]}], "container": true, "attrs": {"id": "gravity"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Air Drag"], "extent": [4338, 4348], "body": [{"type": "para", "indent": 4, "text": ["The amount of air resistance bringing the material to match the wind\u2019s velocity."], "extent": [4365, 4455]}], "container": true, "attrs": {"id": "airdrag"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Wind Velocity"], "extent": [4455, 4470], "body": [{"type": "para", "indent": 4, "text": ["The uniform wind\u2019s velocity."], "extent": [4492, 4530]}], "container": true, "attrs": {"id": "windvelocity"}, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 3, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Ground Plane"], "extent": [4530, 4551], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Enable"], "extent": [4551, 4560], "body": [{"type": "para", "indent": 4, "text": ["Creates a ground plane."], "extent": [4582, 4615]}], "container": true, "attrs": {"id": "groundactive"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Response"], "extent": [4615, 4625], "body": [{"type": "para", "indent": 4, "text": ["Defines how the ground plane should affect the material on contact."], "extent": [4649, 4726]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Bounce"], "extent": [4726, 4738], "body": [{"type": "para", "indent": 8, "text": ["Bounce or stop the material depending on its constitutive model."], "extent": [4738, 4820]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Delete"], "extent": [4820, 4832], "body": [{"type": "para", "indent": 8, "text": ["Delete material points."], "extent": [4832, 4873]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "groundresponse"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Position"], "extent": [4873, 4883], "body": [{"type": "para", "indent": 4, "text": ["Location of the ground plane in space."], "extent": [4902, 4950]}], "container": true, "attrs": {"id": "groundpos"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Up Direction"], "extent": [4950, 4964], "body": [{"type": "para", "indent": 4, "text": ["Normal vector or orientation of the ground plane."], "extent": [4982, 5041]}], "container": true, "attrs": {"id": "groundup"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Rotate"], "extent": [5041, 5049], "body": [{"type": "para", "indent": 4, "text": ["Rotation applied to the normal vector of the ground plane."], "extent": [5068, 5136]}], "container": true, "attrs": {"id": "groundrot"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Uniform Scale"], "extent": [5136, 5151], "body": [{"type": "para", "indent": 4, "text": ["Scaling factor applied to the infinite ground plane visualization in the viewport."], "extent": [5172, 5264]}], "container": true, "attrs": {"id": "groundscale"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Friction"], "extent": [5264, 5274], "body": [{"type": "para", "indent": 4, "text": ["Amount of friction applied from the ground plane to the material, when in contact."], "extent": [5298, 5390]}], "container": true, "attrs": {"id": "groundfriction"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Sticky"], "extent": [5390, 5398], "body": [{"type": "para", "indent": 4, "text": ["Allows projection of the material velocity even when moving away from the ground plane. This prevents the material from detaching from the ground plane, making it sticky if friction is high enough. If the dot product between the normal vector of the ground plane and the velocity of the material is smaller than this value, the velocity of the material gets projected onto the ground plane."], "extent": [5420, 5820]}], "container": true, "attrs": {"id": "groundsticky"}, "role": "item"}], "container": true, "role": "item_group"}]}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Advanced"], "extent": [5820, 5835], "body": [{"level": 3, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Simulation"], "extent": [5835, 5855], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Cache Memory (MB)"], "extent": [5855, 5879], "body": [{"type": "para", "indent": 4, "text": ["Amount of memory to use to cache the simulation."], "extent": [5901, 5959]}], "container": true, "attrs": {"id": "cachemaxsize"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Rebuild Background Grids with OpenCL"], "extent": [5959, 5997], "body": [{"type": "para", "indent": 4, "text": ["Rebuild the VDB sparse background grids on the OpenCL device (GPU) instead of the host (CPU). This feature is turned off by default because of its high memory consumption which imposes a rather restrictive upper bound on the maximum resolution that can be simulated on a standard GPU."], "extent": [6021, 6315]}], "container": true, "attrs": {"id": "gpugridrebuild"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Assume Unchanging Material Properties"], "extent": [6315, 6354], "body": [{"type": "para", "indent": 4, "text": ["Assumes that the material properties are constant throughout the simulation. This is an optimization that prevents the solver from recomputing the ", {"type": "ui", "text": ["Material Condition"]}, " on every frame. This should be turned off if different materials are sourced on different frames or if the dive target inside the solver is dynamically modifying the material properties as the simulation runs. Turning this off will slow down the simulation but will ensure stability by keeping the ", {"type": "ui", "text": ["Material Condition"]}, " consistent."], "extent": [6379, 6891]}], "container": true, "attrs": {"id": "staticmaterials"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Enable Particle-Level Collisions"], "extent": [6891, 6925], "body": [{"type": "para", "indent": 4, "text": ["Allows a second collision step to be performed directly on the material points. This adds some computation but yields more accurate collisions. In general, this can be turned off unless very precise collisions are required such as with thin colliders."], "extent": [6958, 7219]}], "container": true, "attrs": {"id": "particlelevelcollisions"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Move Outside Colliders"], "extent": [7219, 7243], "body": [{"type": "para", "indent": 4, "text": ["Specifies how particles sinking into colliders should be treated."], "extent": [7273, 7348]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Don\u2019t Move Outside Colliders"], "extent": [7348, 7382], "body": [{"type": "para", "indent": 8, "text": ["Only apply the collision response to the particles' velocity. While more accurate, this won\u2019t prevent particles from sinking into the colliders."], "extent": [7382, 7544]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Position-Based Move Outside Colliders"], "extent": [7544, 7587], "body": [{"type": "para", "indent": 8, "text": ["Apply the collision response to the particles' velocity and move them out of the colliders acting on position directly. This can lead to a loss of volume."], "extent": [7587, 7759]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Velocity-Based Move Outside Colliders"], "extent": [7759, 7802], "body": [{"type": "para", "indent": 8, "text": ["Apply the collision response to the particles' velocity and further adjust the velocity such that the particles are moved outside of the colliders during the next integration step. This is the most accurate way to make sure particles do not sink inside the collider but can lead to instability."], "extent": [7802, 8119]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "moveoutsidecolliders"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Enable Affine Velocity (C) Clamping"], "extent": [8119, 8156], "body": [{"type": "para", "indent": 4, "text": ["Limits the magnitude of the ", {"type": "ui", "text": ["Affine Velocity"]}, " matrix ", {"type": "code", "text": ["C"]}, "'s determinant. This prevents ", {"type": "code", "text": ["C"]}, " from becoming unreasonably large which often leads to ", {"type": "code", "text": ["inf"]}, " and ", {"type": "code", "text": ["nan"]}, " velocities. Instability should always be resolved with more substeps or by modifying the material properties, but this parameter can prevent some issues without affecting the amount of energy in the simulation."], "extent": [8175, 8562]}], "container": true, "attrs": {"id": "cclamping"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Min/Max Voxel Dilation"], "extent": [8562, 8586], "body": [{"type": "para", "indent": 4, "text": ["Imposes constraints on the dilation of the sparse background grid in terms of voxel. The sparse background grid is only rebuilt every DOP substep (once per frame by default). To make sure material points do not land in inactive regions of the grid, it is being dilated to account for the motion that takes place between two consecutive DOP substeps."], "extent": [8614, 8969]}, {"type": "tip_group", "body": [{"type": "tip", "indent": 4, "role": "item", "extent": [8969, 8978], "body": [{"type": "para", "indent": 8, "text": ["Particles trying to move outside of the activated regions will be stopped at the boundary. Increasing the maximum dilation will solve this issue."], "extent": [8978, 9133]}], "container": true}], "container": true, "role": "item_group"}, {"type": "note_group", "body": [{"type": "note", "indent": 4, "role": "item", "extent": [9133, 9143], "body": [{"type": "para", "indent": 8, "text": ["Keep in mind that the dilation is defined in terms of voxels and not world units. Doubling the resolution of the simulation will effectively reduce by half the minimum and maximum padding in world units."], "extent": [9143, 9360]}], "container": true}], "container": true, "role": "item_group"}], "container": true, "attrs": {"id": "minmaxvoxelpadding"}, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 3, "id": null, "container": true, "type": "h", "indent": 0, "text": ["OpenCL"], "extent": [9360, 9375], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Finish Kernels"], "extent": [9375, 9392], "body": [{"type": "para", "indent": 4, "text": ["When Finish Kernels is disabled, no attempt is to wait for the\n    OpenCL kernels to complete before continuing the next solver.\n    This lets them run in the background until their results\n    are actually needed.  To simplify debugging, it is useful\n    to ensure kernels are finished to make sure errors are detected\n    in the right spot."], "extent": [5741, 6090]}], "container": true, "attrs": {"id": "finish"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Recompile Kernel"], "extent": [9442, 9460], "body": [{"type": "para", "indent": 4, "text": ["When loading kernels from disk the kernel is cached to avoid\n    regenerating it every solve.  Turning this on forces the re-loading\n    and recompiling of the kernel.  This is useful if #include files\n    refer to code that has changed, or the kernel file is changed\n    in an external text editor."], "extent": [3112, 3417]}, {"type": "para", "indent": 4, "text": ["It should always be disabled when prototyping is complete."], "extent": [3417, 3481]}], "container": true, "attrs": {"id": "recompile"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Kernel Options"], "extent": [9521, 9537], "body": [{"type": "para", "indent": 4, "text": ["Specify any desired compile flags for the kernel.   The most common\n    is to use -D to provide #define directives for the pre-processor."], "extent": [1364, 1507]}, {"type": "note_group", "body": [{"type": "note", "indent": 4, "role": "item", "extent": [1507, 1517], "body": [{"type": "para", "indent": 8, "text": ["The Apple OSX OpenCL compiler requires only a single space between kernel options!\n        Houdini defines additional flags while compiling kernels depending on the\n        OpenCL device.  The flags ", {"type": "code", "text": ["H_GPU"]}, " or ", {"type": "code", "text": ["H_CPU"]}, " distinguish between GPU and\n        CPU devices, and ", {"type": "code", "text": ["H_NVIDIA"]}, ", ", {"type": "code", "text": ["H_AMD"]}, ", ", {"type": "code", "text": ["H_INTEL"]}, ", or ", {"type": "code", "text": ["H_APPLE"]}, "\n        signify the hardware vendor.  You can set the environment variable\n        ", {"type": "code", "text": ["HOUDINI_OCL_REPORT_BUILD_LOGS"]}, " to 1 before running Houdini to get a\n        dump of all kernels compiled along with their preprocessor flags."], "extent": [1517, 2068]}], "container": true}], "container": true, "role": "item_group"}], "container": true, "attrs": {"id": "kerneloptions"}, "role": "item"}], "container": true, "role": "item_group"}]}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Visualize"], "extent": [9601, 9617], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Show Container"], "extent": [9617, 9634], "body": [{"type": "para", "indent": 4, "text": ["Displays the ", {"scheme": "Node", "value": "/nodes/sop/mpmcontainer", "type": "link", "text": ["MPM Container"], "fullpath": "/nodes/sop/mpmcontainer.html"}, "'s guide geometry."], "extent": [9659, 9737]}], "container": true, "attrs": {"id": "showdomaincolor"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Show Colliders"], "extent": [9737, 9753], "body": [{"type": "para", "indent": 4, "text": ["Displays the ", {"scheme": "Node", "value": "/nodes/sop/mpmcollider", "type": "link", "text": ["MPM Colliders"], "fullpath": "/nodes/sop/mpmcollider.html"}, "' guide geometry."], "extent": [9776, 9852]}], "container": true, "attrs": {"id": "showcolliders"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Show Colliders"], "extent": [9852, 9868], "body": [{"type": "para", "indent": 4, "text": ["Defines the display color of the ", {"scheme": "Node", "value": "/nodes/sop/mpmcollider", "type": "link", "text": ["MPM Colliders"], "fullpath": "/nodes/sop/mpmcollider.html"}, "' geometry."], "extent": [9896, 9986]}], "container": true, "attrs": {"id": "showcolliderscolor"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Show Ground Plane"], "extent": [9986, 10005], "body": [{"type": "para", "indent": 4, "text": ["Displays the ", {"scheme": "Node", "value": "/nodes/sop/mpmsolver", "type": "link", "text": ["MPM Solver"], "fullpath": "/nodes/sop/mpmsolver.html"}, "'s ground plane guide geometry."], "extent": [10025, 10110]}], "container": true, "attrs": {"id": "showground"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Show Ground Plane"], "extent": [10110, 10129], "body": [{"type": "para", "indent": 4, "text": ["Defines the display color of the ", {"scheme": "Node", "value": "/nodes/sop/mpmsolver", "type": "link", "text": ["MPM Solver"], "fullpath": "/nodes/sop/mpmsolver.html"}, "'s ground plane geometry."], "extent": [10154, 10253]}], "container": true, "attrs": {"id": "showgroundcolor"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Show Background Grid"], "extent": [10253, 10275], "body": [{"type": "para", "indent": 4, "text": ["Displays the VDB background grids' geometry."], "extent": [10295, 10349]}], "container": true, "attrs": {"id": "showbggrid"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Show BG Grid"], "extent": [10349, 10363], "body": [{"type": "para", "indent": 4, "text": ["Defines the display color of the VDB background grids' geometry."], "extent": [10388, 10467]}], "container": true, "attrs": {"id": "showbggridcolor"}, "role": "item"}], "container": true, "role": "item_group"}, {"level": 3, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Particles Color From Attribute"], "extent": [10467, 10506], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Point Attribute Name"], "extent": [10506, 10529], "body": [{"type": "para", "indent": 4, "text": ["Point attribute to remap to a color for visualization in the viewport."], "extent": [10554, 10634]}], "container": true, "attrs": {"id": "pointattribname"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["\u00a0 Min"], "extent": [10634, 10641], "body": [{"type": "para", "indent": 4, "text": ["Point attribute minimum to map to the ", {"type": "code", "text": ["0"]}, " of the color ramp."], "extent": [10660, 10730]}], "container": true, "attrs": {"id": "attribmin"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["\u00a0 Max"], "extent": [10730, 10737], "body": [{"type": "para", "indent": 4, "text": ["Point attribute maximum to map to the ", {"type": "code", "text": ["1"]}, " of the color ramp."], "extent": [10756, 10826]}], "container": true, "attrs": {"id": "attribmax"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Remap to Color"], "extent": [10826, 10842], "body": [{"type": "para", "indent": 4, "text": ["Remap the fitted point attribute values to colors."], "extent": [10864, 10924]}], "container": true, "attrs": {"id": "remaptocolor"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Enable Display as Sphere"], "extent": [10924, 10950], "body": [{"type": "para", "indent": 4, "text": ["Render particles as spheres in the viewport.\n    Override the particle rendering method defined by the ", {"scheme": "Node", "value": "/nodes/sop/mpmsource", "type": "link", "text": ["MPM Sources"], "fullpath": "/nodes/sop/mpmsource.html"}, "."], "extent": [10981, 11127]}], "container": true, "attrs": {"id": "enabledisplayassphere"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Display Particles as Spheres"], "extent": [11127, 11157], "body": [{"type": "para", "indent": 4, "text": ["Render particles as spheres in the viewport."], "extent": [11182, 11236]}], "container": true, "attrs": {"id": "displayassphere"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Enable Point Scale"], "extent": [11236, 11256], "body": [{"type": "para", "indent": 4, "text": ["Override the point scale defined by the ", {"scheme": "Node", "value": "/nodes/sop/mpmsource", "type": "link", "text": ["MPM Sources"], "fullpath": "/nodes/sop/mpmsource.html"}, "."], "extent": [11282, 11365]}], "container": true, "attrs": {"id": "enablepscalemult"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Point Scale"], "extent": [11365, 11378], "body": [{"type": "para", "indent": 4, "text": ["Multiplies the ", {"type": "code", "text": ["pscale"]}, " attribute. This is strictly used for visualization and meshing post-simulation. The volume of each particle is always computed using the global particle separation cubed."], "extent": [11398, 11602]}], "container": true, "attrs": {"id": "pscalemult"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Display Pinned-to-Animation Guide"], "extent": [11602, 11637], "body": [{"type": "para", "indent": 4, "text": ["Display a blue wireframe sphere around the pinned particles."], "extent": [11660, 11730]}], "container": true, "attrs": {"id": "displaypinned"}, "role": "item"}], "container": true, "role": "item_group"}]}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Output"], "extent": [11730, 11743], "body": [{"level": 3, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Point Attributes"], "extent": [11743, 11769], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Deformation Gradient (", {"type": "code", "text": ["F"]}, ")"], "extent": [11769, 11798], "body": [{"type": "para", "indent": 4, "text": ["Exports the 3\u00d73 ", {"type": "ui", "text": ["Deformation Gradient"]}, " matrix ", {"type": "code", "text": ["F"]}, " as a point attribute."], "extent": [11815, 11894]}, {"type": "tip_group", "body": [{"type": "tip", "indent": 4, "role": "item", "extent": [11894, 11903], "body": [{"type": "para", "indent": 8, "text": ["This attribute keeps track of the local rotation and all local elastic deformations (", {"type": "code", "text": ["scale"]}, ", ", {"type": "code", "text": ["shear"]}, "). It can be used to copy geometry onto the simulated material points."], "extent": [11903, 12088]}], "container": true}], "container": true, "role": "item_group"}], "container": true, "attrs": {"id": "exportf"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Affine Velocity (", {"type": "code", "text": ["C"]}, ")"], "extent": [12088, 12111], "body": [{"type": "para", "indent": 4, "text": ["Exports the 3\u00d73 ", {"type": "ui", "text": ["Affine Velocity"]}, " matrix ", {"type": "code", "text": ["C"]}, " as a point attribute."], "extent": [12128, 12206]}], "container": true, "attrs": {"id": "exportc"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Velocity (", {"type": "code", "text": ["v"]}, ")"], "extent": [12206, 12222], "body": [{"type": "para", "indent": 4, "text": ["Exports the particle velocity ", {"type": "code", "text": ["v"]}, " as a point attribute."], "extent": [12239, 12304]}], "container": true, "attrs": {"id": "exportv"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Plastic Compression/Stretching (", {"type": "code", "text": ["Jp"]}, ")"], "extent": [12304, 12343], "body": [{"type": "para", "indent": 4, "text": ["Exports the determinant of the ", {"type": "ui", "text": ["Deformation Gradient"]}, "'s plastic component ", {"type": "code", "text": ["Jp"]}, " as a point attribute."], "extent": [12361, 12469]}, {"type": "tip_group", "body": [{"type": "tip", "indent": 4, "role": "item", "extent": [12469, 12478], "body": [{"type": "para", "indent": 8, "text": ["This attribute keeps track of how much compression and stretching was applied to the material as plastic deformation. Values below ", {"type": "code", "text": ["1.0"]}, " represents compression while values above ", {"type": "code", "text": ["1.0"]}, " represent stretching. The stretching information can easily drive secondary emission of dust or debris as it highlights where things are breaking and tearing."], "extent": [12478, 12835]}], "container": true}], "container": true, "role": "item_group"}], "container": true, "attrs": {"id": "exportjp"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Elastic Compression/Stretching (", {"type": "code", "text": ["Je"]}, ")"], "extent": [12835, 12874], "body": [{"type": "para", "indent": 4, "text": ["Exports the determinant of the ", {"type": "ui", "text": ["Deformation Gradient"]}, "'s elastic component ", {"type": "code", "text": ["Je"]}, " as a point attribute."], "extent": [12892, 13004]}], "container": true, "attrs": {"id": "exportje"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Radius (", {"type": "code", "text": ["pscale"]}, ")"], "extent": [13004, 13023], "body": [{"type": "para", "indent": 4, "text": ["Exports the particle radius ", {"type": "code", "text": ["pscale"]}, " as a float point attribute."], "extent": [13045, 13119]}], "container": true, "attrs": {"id": "exportpscale"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Unique Identifier (", {"type": "code", "text": ["id"]}, ")"], "extent": [13119, 13145], "body": [{"type": "para", "indent": 4, "text": ["Exports unique particle identifier ", {"type": "code", "text": ["id"]}, " as a point attribute."], "extent": [13163, 13234]}], "container": true, "attrs": {"id": "exportid"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Pinned (", {"type": "code", "text": ["pintotanimation"]}, ")"], "extent": [13234, 13262], "body": [{"type": "para", "indent": 4, "text": ["Exports the pinned particles' flag as the ", {"type": "code", "text": ["pintoanimation"]}, " integer point attribute."], "extent": [13292, 13385]}], "container": true, "attrs": {"id": "exportpintoanimation"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Age (", {"type": "code", "text": ["age"]}, ")"], "extent": [13385, 13398], "body": [{"type": "para", "indent": 4, "text": ["Exports the particle age as the ", {"type": "code", "text": ["age"]}, " float point attribute."], "extent": [13417, 13487]}], "container": true, "attrs": {"id": "exportage"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Source Name (", {"type": "code", "text": ["source_name"]}, ")"], "extent": [13487, 13516], "body": [{"type": "para", "indent": 4, "text": ["Exports the particles' source name as the ", {"type": "code", "text": ["sourcename"]}, " string point attribute. This attribute is defined by the ", {"scheme": "Node", "value": "/nodes/sop/mpmsource", "type": "link", "text": ["MPM Sources"], "fullpath": "/nodes/sop/mpmsource.html"}, " for post-sim manipulations."], "extent": [13542, 13724]}], "container": true, "attrs": {"id": "exportsourcename"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Extra Attributes"], "extent": [13724, 13742], "body": [{"type": "para", "indent": 4, "text": ["Exports additional point attributes by name."], "extent": [13772, 13826]}], "container": true, "attrs": {"id": "pointextraattributes"}, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 3, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Detail Attributes"], "extent": [13826, 13852], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Substep Count (", {"type": "code", "text": ["substepcount"]}, ")"], "extent": [13852, 13885], "body": [{"type": "para", "indent": 4, "text": ["Exports the actual number of computed substeps ", {"type": "code", "text": ["substepcount"]}, " as an integer detail attribute."], "extent": [13913, 14016]}], "container": true, "attrs": {"id": "exportsubstepcount"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Voxel Size (", {"type": "code", "text": ["dx"]}, ")"], "extent": [14016, 14035], "body": [{"type": "para", "indent": 4, "text": ["Exports the voxel width of the background grid ", {"type": "code", "text": ["dx"]}, " as a float detail attribute."], "extent": [14053, 14143]}], "container": true, "attrs": {"id": "exportdx"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Grid Scale (", {"type": "code", "text": ["gridscale"]}, ")"], "extent": [14143, 14169], "body": [{"type": "para", "indent": 4, "text": ["Exports the ", {"type": "code", "text": ["gridscale"]}, " float detail attribute that defines the voxel size of the background grid in terms of the particle separation."], "extent": [14194, 14338]}], "container": true, "attrs": {"id": "exportgridscale"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Particle Separation (", {"type": "code", "text": ["particlesep"]}, ")"], "extent": [14338, 14375], "body": [{"type": "para", "indent": 4, "text": ["Exports the particle separation ", {"type": "code", "text": ["particlesep"]}, " as a float detail attribute."], "extent": [14402, 14486]}], "container": true, "attrs": {"id": "exportparticlesep"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Extra Attributes"], "extent": [14486, 14504], "body": [{"type": "para", "indent": 4, "text": ["Exports additional detail attributes by name."], "extent": [14535, 14590]}], "container": true, "attrs": {"id": "detailextraattributes"}, "role": "item"}], "container": true, "role": "item_group"}]}]}], "text": "Parameters"}, {"level": 1, "id": "related", "container": true, "type": "related_section", "indent": 0, "role": "section", "extent": [14590, 14599], "body": [{"type": "bullet_group", "body": [{"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/sop/mpmsource", "type": "link", "text": ["MPM Source"], "fullpath": "/nodes/sop/mpmsource.html"}], "extent": [14599, 14633]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/sop/mpmcollider", "type": "link", "text": ["MPM Collider"], "fullpath": "/nodes/sop/mpmcollider.html"}], "extent": [14633, 14671]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/sop/mpmcontainer", "type": "link", "text": ["MPM Container"], "fullpath": "/nodes/sop/mpmcontainer.html"}], "extent": [14671, 14712]}], "container": true}], "text": "Related"}], "title": ["MPM Solver"], "summary": ["Solves the MPM simulation described by its inputs and parameters."], "included": ["/nodes/sop/opencl"]}