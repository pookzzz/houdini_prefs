{"type": "root", "attrs": {"icon": "/nodes/sop/MOPS--MOPS_Convert-1.0/mops_TD_tools_05.svg", "type": "node", "context": "sop", "internal": "MOPS_Convert", "version": "1.0", "namespace": "MOPS"}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["MOPs Convert"], "extent": [0, 17]}, {"type": "summary", "indent": 0, "text": [" Converts existing primitives to MOPs-compatible packed primitives. "], "extent": [55, 131]}, {"type": "para", "indent": 0, "text": ["MOPs Convert can convert existing primitives, packed or not, into MOPs-compatible packed primitives. This could be used to allow for MOPs operations on voronoi-shattered pieces, for example.\nThis operator adds and/or modifies the following point attributes: s@name, i@id, f@mops_falloff, and v@rest."], "extent": [131, 432]}, {"type": "para", "indent": 0, "text": ["By default, this node creates packed fragments, which are more efficient if all of your pieces are unique. However, packed fragments cannot preview Falloff in the viewport."], "extent": [432, 606]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Overview"], "extent": [606, 621], "body": []}, {"level": 1, "id": "inputs", "container": true, "type": "inputs_section", "indent": 0, "role": "section", "extent": [621, 630], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 0, "text": ["Primitives To Convert"], "extent": [630, 654], "body": [{"type": "para", "indent": 4, "text": ["The primitives to convert into MOPs packed primitives."], "extent": [654, 718]}], "container": true}], "container": true}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["General"], "extent": [718, 732], "body": []}], "text": "Inputs"}, {"level": 1, "id": "parameters", "container": true, "type": "parameters_section", "indent": 0, "role": "section", "extent": [732, 745], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Unpack"], "extent": [745, 754], "body": [{"type": "para", "indent": 4, "text": ["Unpack incoming packed primitives before conversion."], "extent": [773, 835]}], "container": true, "attrs": {"id": "do_unpack"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Transfer Attributes"], "extent": [835, 856], "body": [{"type": "para", "indent": 4, "text": ["If these attributes exist on the source geometry, transfer them to the MOPs packed primitives."], "extent": [885, 989]}], "container": true, "attrs": {"id": "transfer_attributes"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Use Existing Name Attr"], "extent": [989, 1013], "body": [{"type": "para", "indent": 4, "text": ["If the incoming primitives have an s@name attribute, this will be used when assembling the MOPs packed primitives so that primitives with matching names are treated as a single object."], "extent": [1031, 1225]}], "container": true, "attrs": {"id": "use_name"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Name Prefix"], "extent": [1225, 1238], "body": [{"type": "para", "indent": 4, "text": ["The prefix to use for the generated s@name attribute. Objects going into a Packed RBD simulation must have unique s@name attributes to solve as separate pieces."], "extent": [1254, 1424]}], "container": true, "attrs": {"id": "prefix"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Use Existing Id Attr"], "extent": [1424, 1446], "body": [{"type": "para", "indent": 4, "text": ["If the incoming primitives have an i@id attribute, use this as the i@id of the output MOPs packed primitives."], "extent": [1462, 1581]}], "container": true, "attrs": {"id": "use_id"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Start Number"], "extent": [1581, 1595], "body": [{"type": "para", "indent": 4, "text": ["The starting number to use for both the i@id attribute and the s@name suffix."], "extent": [1615, 1702]}], "container": true, "attrs": {"id": "startindex"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Create Packed Fragments"], "extent": [1702, 1727], "body": [{"type": "para", "indent": 4, "text": ["Create packed fragments instead of standard packed primitives. This means that each chunk contains a reference to the entire original geometry, which can speed up performance if each piece is unique, such as from a voronoi shatter.\n    NOTE: As of Houdini 16.5.439, packed fragments cannot display any color attributes that were modified after the pack operation. This means previewing falloff or modifying colors will not work in the viewport."], "extent": [1752, 2206]}], "container": true, "attrs": {"id": "packedfragments"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Rest Frame"], "extent": [2206, 2218], "body": [{"type": "para", "indent": 4, "text": ["When computing the v@rest attribute for MOPs, the frame in which the rest attribute will be generated from."], "extent": [2238, 2349]}], "container": true, "attrs": {"id": "rest_frame"}, "role": "item"}], "container": true, "role": "item_group"}], "text": "Parameters"}], "title": ["MOPs Convert"], "summary": [" Converts existing primitives to MOPs-compatible packed primitives. "]}