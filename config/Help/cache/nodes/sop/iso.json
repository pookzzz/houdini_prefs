{"type": "root", "attrs": {"type": "node", "context": "sop", "internal": "iso", "icon": "SOP/iso", "tags": "tech, create, surface", "version": null, "namespace": null}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["IsoSurface"], "extent": [0, 15]}, {"type": "summary", "indent": 0, "text": ["Generates an isometric surface from an implicit function."], "extent": [102, 167]}, {"type": "para", "indent": 0, "text": ["The IsoSurface operation uses implicit functions to generate isometric\nsurfaces. It can be used to visualize grade 12 math homework in 3D.\nAlternatively, this operation can be used to visualize a 3D texture\nimage."], "extent": [167, 382]}, {"type": "para", "indent": 0, "text": ["The input to this node defines the bounding box within which the iso surface or volume primitive is created. Once the bounding box of the input is taken, the iso surface is clipped to its dimensions."], "extent": [382, 583]}, {"level": 1, "id": "parameters", "container": true, "type": "parameters_section", "indent": 0, "role": "section", "extent": [583, 595], "body": [{"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Function"], "extent": [595, 611], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 4, "text": ["Implicit Function"], "extent": [611, 635], "body": [{"type": "para", "indent": 8, "text": ["Function for implicit surface building."], "extent": [654, 702]}], "container": true, "attrs": {"id": "func"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Minimum Bound"], "extent": [702, 721], "body": [{"type": "para", "indent": 8, "text": ["The minimum clipping plane boundary for display."], "extent": [752, 809]}], "container": true, "attrs": {"id": "minx /miny /minz"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Maximum Bound"], "extent": [809, 828], "body": [{"type": "para", "indent": 8, "text": ["The maximum clipping plane boundary for display."], "extent": [859, 917]}], "container": true, "attrs": {"id": "maxx /maxy /maxz"}, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["3D Texture"], "extent": [917, 934], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 4, "text": ["3D Texture File"], "extent": [934, 956], "body": [{"type": "para", "indent": 8, "text": ["The path to a 3D texture file"], "extent": [975, 1014]}], "container": true, "attrs": {"id": "file"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Reload 3D Texture"], "extent": [1014, 1037], "body": [{"type": "para", "indent": 8, "text": ["Reloads the texture file from disk"], "extent": [1037, 1081]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Use Texture Resolution for Divisions"], "extent": [1081, 1123], "body": [{"type": "para", "indent": 8, "text": ["A 3D texture file has an x, y and z resolution. Rather than manually specifying the sampling resolution for the iso surface, this uses the voxel boundaries in the .i3d file, which ensures that each voxel will be sampled one time. "], "extent": [1123, 1363]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Texture Channel"], "extent": [1363, 1384], "body": [{"type": "para", "indent": 8, "text": ["The channel of the 3D texture file which specifies the density field."], "extent": [1406, 1484]}], "container": true, "attrs": {"id": "channel"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Density Threshold"], "extent": [1484, 1507], "body": [{"type": "para", "indent": 8, "text": ["Generate the surface where the texture file has this value."], "extent": [1529, 1598]}], "container": true, "attrs": {"id": "density"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Filter"], "extent": [1598, 1610], "body": [{"type": "para", "indent": 8, "text": ["The filter type to use when evaluating the 3d texture."], "extent": [1610, 1674]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Filter Width"], "extent": [1674, 1692], "body": [{"type": "para", "indent": 8, "text": ["The filter width to use when evaluating the 3d texture, in voxels. The filter width is specified in units of the original texture file voxels, not output divisions. "], "extent": [1692, 1867]}], "container": true, "role": "item"}], "container": true, "role": "item_group"}]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Divisions"], "extent": [1867, 1878], "body": [{"type": "para", "indent": 4, "text": ["The density of polygons along the xyz axes."], "extent": [1908, 1957]}], "container": true, "attrs": {"id": "divsx /divsy /divsz"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Build Volume"], "extent": [1957, 1971], "body": [{"type": "para", "indent": 4, "text": ["Instead of creating a polygonal isosurface, will create a volume primitive according to the expression."], "extent": [1971, 2080]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Build Polygon Soup"], "extent": [2080, 2100], "body": [{"type": "para", "indent": 4, "text": ["Instead of creating separate polygon primitives, will create a polygon soup primitive."], "extent": [2100, 2192]}], "container": true, "role": "item"}], "container": true, "role": "item_group"}], "text": "Parameters"}, {"level": 1, "id": "locals", "container": true, "type": "locals_section", "indent": 0, "role": "section", "extent": [2192, 2200], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 0, "text": ["X, Y, Z"], "extent": [2200, 2210], "body": [{"type": "para", "indent": 4, "text": ["Variables in the implicit function equation."], "extent": [2210, 2260]}], "container": true}, {"type": "dt", "indent": 0, "text": ["V"], "extent": [2260, 2263], "body": [{"type": "para", "indent": 4, "text": ["If the input geometry contains volume primitives, this is the\n    total value of those volume primitives at the current point."], "extent": [2263, 2395]}], "container": true}], "container": true}, {"type": "para", "indent": 0, "text": ["The value of each volume primitive is added to a running total\nto get the final $V value."], "extent": [2395, 2486]}], "text": "Locals"}, {"level": 1, "id": "related", "container": true, "type": "related_section", "indent": 0, "role": "section", "extent": [2486, 2495], "body": [{"type": "bullet_group", "body": [{"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/sop/isooffset", "type": "link", "text": "", "fullpath": "/nodes/sop/isooffset.html"}], "extent": [2495, 2520]}], "container": true}], "text": "Related"}], "title": ["IsoSurface"], "summary": ["Generates an isometric surface from an implicit function."]}