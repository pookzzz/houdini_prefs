{"type": "root", "attrs": {"type": "node", "context": "sop", "namespace": "kinefx", "internal": "characterio", "icon": "SOP/kinefx-characterio", "since": "18.5", "version": ""}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["Character I/O"], "extent": [117, 135]}, {"type": "summary", "indent": 0, "text": ["Packs Character mesh, capture pose and animation, saves them to disk, and loads them back again."], "extent": [135, 240]}, {"type": "para", "indent": 0, "text": ["The Character I/O SOP is designed to streamline the common operation\nof packing a Character stream, saving it to disk, and giving an option\nto use the saved sequence rather than the live sequence."], "extent": [240, 438]}, {"level": 1, "id": "parameters", "container": true, "type": "parameters_section", "indent": 0, "role": "section", "extent": [438, 450], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Skin Storage"], "extent": [450, 465], "body": [{"type": "para", "indent": 4, "text": ["Choose the storage method for the ", {"type": "strong", "text": ["Skin"]}, " input."], "extent": [465, 518]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["None"], "extent": [518, 528], "body": [{"type": "para", "indent": 8, "text": ["Do not save the ", {"type": "strong", "text": ["Skin"]}, " input to disk."], "extent": [528, 575]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Static"], "extent": [575, 587], "body": [{"type": "para", "indent": 8, "text": ["Save the ", {"type": "strong", "text": ["Skin"]}, " input to disk at a specific frame."], "extent": [587, 647]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 8, "text": ["At Frame"], "extent": [647, 665], "body": [{"type": "para", "indent": 12, "text": ["Specify the frame at which to save the ", {"type": "strong", "text": ["Skin"]}, " input to disk."], "extent": [695, 769]}], "container": true, "attrs": {"id": "skinatframe"}}], "container": true}], "container": true}, {"type": "dt", "indent": 4, "text": ["Time-Dependent"], "extent": [769, 789], "body": [{"type": "para", "indent": 8, "text": ["Save the ", {"type": "strong", "text": ["Skin"]}, " input to disk at each frame."], "extent": [789, 843]}], "container": true}], "container": true}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Rest Skeleton Storage"], "extent": [843, 866], "body": [{"type": "para", "indent": 4, "text": ["See ", {"type": "strong", "text": ["Skin Storage"]}], "extent": [866, 890]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Deform Skeleton Storage"], "extent": [890, 915], "body": [{"type": "para", "indent": 4, "text": ["See ", {"type": "strong", "text": ["Skin Storage"]}], "extent": [915, 939]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["MotionClip"], "extent": [939, 955], "body": [{"type": "para", "indent": 8, "text": ["Save the ", {"type": "strong", "text": ["Deform Pose"]}, " input to disk as a ", {"scheme": "Node", "value": "/nodes/sop/kinefx--motionclip", "type": "link", "text": "", "fullpath": "/nodes/sop/kinefx--motionclip.html"}, "."], "extent": [955, 1037]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 8, "text": ["Motionclip Clip Range"], "extent": [1037, 1068], "body": [{"type": "para", "indent": 12, "text": ["Read the motionclip frame range from the clipinfo detail attribute on the input geometry or set a custom range."], "extent": [1068, 1201]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Motionclip Frame Range"], "extent": [1201, 1233], "body": [{"type": "para", "indent": 12, "text": ["Specify the frame range at which to save the ", {"scheme": "Node", "value": "/nodes/sop/kinefx--motionclip", "type": "link", "text": "", "fullpath": "/nodes/sop/kinefx--motionclip.html"}, " to disk."], "extent": [1233, 1330]}], "container": true}], "container": true}], "container": true}], "container": true}, {"type": "note_group", "body": [{"type": "note", "indent": 4, "role": "item", "extent": [1330, 1340], "body": [{"type": "para", "indent": 8, "text": ["The ", {"scheme": "Node", "value": "/nodes/sop/kinefx--motionclip", "type": "link", "text": "", "fullpath": "/nodes/sop/kinefx--motionclip.html"}, " will more efficiently store the ", {"type": "strong", "text": ["Deform Pose"]}, " animation on disk as a single packed primitive. Make sure that the ", {"type": "strong", "text": ["Valid Frame Range"]}, " parameter on the node is set to ", {"type": "strong", "text": ["Save Current Frame"]}, " when saving the ", {"type": "strong", "text": ["Deform Pose"]}, " as a ", {"scheme": "Node", "value": "/nodes/sop/kinefx--motionclip", "type": "link", "text": "", "fullpath": "/nodes/sop/kinefx--motionclip.html"}, ". Otherwise, you will store the whole animation data on each frame."], "extent": [1340, 1701]}], "container": true}], "container": true, "role": "item_group"}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Load from Disk"], "extent": [1701, 1717], "body": [{"type": "para", "indent": 4, "text": ["Switches between importing character from SOPs and loading the character from the geometry file."], "extent": [1739, 1841]}, {"type": "note_group", "body": [{"type": "note", "indent": 4, "role": "item", "extent": [1841, 1851], "body": [{"type": "para", "indent": 8, "text": ["If you start a render, it will always use the Import option, ignoring this parameter."], "extent": [1851, 1946]}], "container": true}], "container": true, "role": "item_group"}], "container": true, "attrs": {"id": "loadfromdisk"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["File Mode"], "extent": [1946, 1957], "body": [{"type": "para", "indent": 4, "text": ["How this node reads/writes the geometry to/from the disk file."], "extent": [1957, 2025]}, {"type": "para", "indent": 4, "text": ["This parameter is only enabled when ", {"type": "ui", "text": ["Load From Disk"]}, " is disabled."], "extent": [2025, 2098]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Automatic"], "extent": [2098, 2113], "body": [{"type": "para", "indent": 8, "text": ["Writes the file if it doesn\u2019t exist, reads it if it does\n        exist."], "extent": [2113, 2194]}, {"type": "para", "indent": 8, "text": ["This is useful for caching, where the node will\n        write the cache to disk the first time it cooks, and\n        use the cache file from then on."], "extent": [2194, 2353]}, {"type": "para", "indent": 8, "text": ["To force a refresh of the cache, manually delete the file\n        on disk."], "extent": [2353, 2437]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Read Files"], "extent": [2437, 2453], "body": [{"type": "para", "indent": 8, "text": ["Reads the geometry from the file. If the node\u2019s input\n        is connected, it\u2019s ignored."], "extent": [2453, 2552]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Write Files"], "extent": [2552, 2569], "body": [{"type": "para", "indent": 8, "text": ["Writes the input geometry to disk."], "extent": [2569, 2613]}], "container": true}, {"type": "dt", "indent": 4, "text": ["No Operation"], "extent": [2613, 2631], "body": [{"type": "para", "indent": 8, "text": ["No file access will occur. Pass through the input geometry\n        to the output, like a ", {"scheme": "Node", "value": "/nodes/sop/null", "type": "link", "text": ["Null surface node"], "fullpath": "/nodes/sop/null.html"}, "."], "extent": [2631, 2764]}], "container": true}], "container": true}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Geometry File"], "extent": [2764, 2779], "body": [{"type": "para", "indent": 4, "text": ["Where to load the fields from when in Load from Disk mode. This also controls where the ", {"scheme": "Node", "value": "/nodes/out/geometry", "type": "link", "text": ["Geometry ROP"], "fullpath": "/nodes/out/geometry.html"}, " will save the fields."], "extent": [2794, 2942]}], "container": true, "attrs": {"id": "file"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Save to File"], "extent": [2942, 2956], "body": [{"type": "para", "indent": 4, "text": ["See the ", {"scheme": "Node", "value": "/nodes/sop/filecache", "type": "link", "text": ["File Cache SOP"], "fullpath": "/nodes/sop/filecache.html"}, " help for these parameters."], "extent": [2956, 3032]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Save Filter"], "extent": [3032, 3045], "body": [{"type": "para", "indent": 4, "text": ["See the ", {"scheme": "Node", "value": "/nodes/sop/filecache", "type": "link", "text": ["File Cache SOP"], "fullpath": "/nodes/sop/filecache.html"}, " help for these parameters."], "extent": [3045, 3121]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Load From File"], "extent": [3121, 3137], "body": [{"type": "para", "indent": 4, "text": ["See the ", {"scheme": "Node", "value": "/nodes/sop/filecache", "type": "link", "text": ["File Cache SOP"], "fullpath": "/nodes/sop/filecache.html"}, " help for these parameters."], "extent": [3137, 3213]}], "container": true, "role": "item"}], "container": true, "role": "item_group"}], "text": "Parameters"}, {"level": 1, "id": "related", "container": true, "type": "related_section", "indent": 0, "role": "section", "extent": [3213, 3222], "body": [{"type": "bullet_group", "body": [{"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/sop/file", "type": "link", "text": "", "fullpath": "/nodes/sop/file.html"}], "extent": [3222, 3240]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/sop/filecache", "type": "link", "text": "", "fullpath": "/nodes/sop/filecache.html"}], "extent": [3240, 3263]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/sop/filemerge", "type": "link", "text": "", "fullpath": "/nodes/sop/filemerge.html"}], "extent": [3263, 3286]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/sop/kinefx--fbxcharacterimport", "type": "link", "text": "", "fullpath": "/nodes/sop/kinefx--fbxcharacterimport.html"}], "extent": [3286, 3326]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/sop/kinefx--rop_fbxcharacteroutput", "type": "link", "text": "", "fullpath": "/nodes/sop/kinefx--rop_fbxcharacteroutput.html"}], "extent": [3326, 3370]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/sop/kinefx--characterpack", "type": "link", "text": "", "fullpath": "/nodes/sop/kinefx--characterpack.html"}], "extent": [3370, 3405]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/sop/kinefx--characterunpack", "type": "link", "text": "", "fullpath": "/nodes/sop/kinefx--characterunpack.html"}], "extent": [3405, 3444]}], "container": true}], "text": "Related"}], "title": ["Character I/O"], "summary": ["Packs Character mesh, capture pose and animation, saves them to disk, and loads them back again."]}