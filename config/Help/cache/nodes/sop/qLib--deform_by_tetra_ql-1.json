{"type": "root", "attrs": {"icon": "SOP/tetrahedralize", "context": "sop", "type": "node", "internal": "deform_by_tetra_ql", "version": "1", "namespace": "qLib"}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["Deform by Tetra qL"], "extent": [53, 76]}, {"type": "para", "indent": 0, "text": [{"type": "strong", "text": ["interface version 1"]}], "extent": [76, 100]}, {"type": "summary", "indent": 0, "text": ["Deforms the input geometry (including volumes) using tetrahedrons."], "extent": [100, 174]}, {"type": "para", "indent": 0, "text": ["This operator deforms both regular geometry and volumes using tetrahedra.\nIt performs the deformation using a ", {"type": "em", "text": ["rest"]}, " and a ", {"type": "em", "text": ["deformed"]}, " version of the same\ntetrahedron mesh."], "extent": [174, 347]}, {"type": "para", "indent": 0, "text": [{"scheme": "Image", "value": "/nodes/sop/qLib--deform_by_tetra_ql-1/deform_by_tetra_ql_main.png", "type": "img", "text": ""}], "extent": [347, 391]}, {"type": "bullet_group", "body": [{"blevel": 2, "type": "bullet", "indent": 0, "text": ["(todo: example image)"], "extent": [391, 416]}], "container": true}, {"type": "note_group", "body": [{"type": "note", "indent": 0, "role": "item", "extent": [416, 422], "body": [{"type": "para", "indent": 4, "text": ["This operator supports density-like scalar volumes and color fields only\n    (it doesn\u2019t compute correct results on velocity/vector and SDF fields)."], "extent": [422, 580]}, {"type": "para", "indent": 4, "text": ["Volumes are required to have a ", {"type": "var", "text": ["name"]}, " attribute.\n    Volumes will be automatically converted to VDBs."], "extent": [580, 689]}], "container": true}], "container": true, "role": "item_group"}, {"level": 1, "id": "parameters", "container": true, "type": "parameters_section", "indent": 0, "role": "section", "extent": [689, 701], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 4, "text": ["Deform Geometry"], "extent": [701, 722], "body": [{"type": "para", "indent": 8, "text": ["Apply the deformation to regular geometry.\n        If disabled, no geometry will be output (even if the input contained any.)"], "extent": [722, 856]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Deform Volumes"], "extent": [856, 876], "body": [{"type": "para", "indent": 8, "text": ["Apply the deformation to volumes.\n        If disabled, no volumes will be output (even if the input contained any.)"], "extent": [876, 1001]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Geometry"], "extent": [1001, 1015], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 8, "text": ["Envelope / Weight"], "extent": [1015, 1042], "body": [{"type": "para", "indent": 12, "text": ["Regular deformation weighting parameters."], "extent": [1042, 1101]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Deformer Mode"], "extent": [1101, 1124], "body": [{"type": "para", "indent": 12, "text": ["The method used for geometry deformation."], "extent": [1124, 1191]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 12, "text": ["Primitive Index + UVW"], "extent": [1191, 1226], "body": [{"type": "para", "indent": 16, "text": ["For each point, the corresponding tetrahedron and it\u2019s relative UVW coordinates\n                are computed. The geometry to be deformed has to be fully enveloped by the\n                tetramesh."], "extent": [1226, 1441]}], "container": true}, {"type": "dt", "indent": 12, "text": ["Weighted Points"], "extent": [1441, 1470], "body": [{"type": "para", "indent": 16, "text": ["For each point, deformation weights are computed for each point of the\n                corresponding tetrahedron. This method supports geometry slightly falling outside\n                the boundaries of the tetrahedron mesh."], "extent": [1470, 1724]}], "container": true}], "container": true}], "container": true}, {"type": "dt", "indent": 8, "text": ["Generate Prim Attribs"], "extent": [1724, 1755], "body": [{"type": "para", "indent": 12, "text": ["Build primitive attributes on the source geometry required by the deformation\n            (primitive index and uvw coordinates, or point index+weight arrays, according to\n            the ", {"type": "em", "text": ["Deformer Mode"]}, " settings)."], "extent": [1755, 1994]}, {"type": "para", "indent": 12, "text": ["This can be turned off if the source geometry already has the related\n            attributes (e.g. built by another node of this type)."], "extent": [1994, 2155]}, {"type": "para", "indent": 12, "text": ["If this is turned off, no 2nd input (rest tetrahedra) is required."], "extent": [2155, 2247]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Primitive Attrib Names"], "extent": [2247, 2279], "body": [{"type": "para", "indent": 12, "text": ["Specify the primitive attribute names directly. This can be useful if\n            only the attributes has to be created but no deformation should be applied."], "extent": [2279, 2454]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Keep Prim Attribs"], "extent": [2454, 2481], "body": [{"type": "para", "indent": 12, "text": ["Don\u2019t delete the deformation primitive attributes."], "extent": [2481, 2557]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Do Deformation"], "extent": [2557, 2581], "body": [{"type": "para", "indent": 12, "text": ["Perform the deformation."], "extent": [2581, 2631]}, {"type": "note_group", "body": [{"type": "note", "indent": 12, "role": "item", "extent": [2631, 2649], "body": [{"type": "para", "indent": 16, "text": ["By turning this off, the node can be used to just generate the primitive\n                attributes, and the deformation itself could be applied later with\n                another node (either this one, or using an\n                ", {"scheme": "Node", "value": "/nodes/sop/attribinterpolate", "type": "link", "text": ["Attrib Interpolate SOP"], "fullpath": "/nodes/sop/attribinterpolate.html"}, ")."], "extent": [2649, 2967]}], "container": true}], "container": true, "role": "item_group"}, {"type": "tip_group", "body": [{"type": "tip", "indent": 12, "role": "item", "extent": [2967, 2984], "body": [{"type": "para", "indent": 16, "text": ["The deformation itself can also be applied using an\n                ", {"scheme": "Node", "value": "/nodes/sop/attribinterpolate", "type": "link", "text": ["Attrib Interpolate SOP"], "fullpath": "/nodes/sop/attribinterpolate.html"}, ",\n                if the primitive index and uvw attributes are present\n                (or point index/weight arrays, depending on the ", {"type": "em", "text": ["Deformer Mode"]}, " setting)."], "extent": [2984, 3282]}], "container": true}], "container": true, "role": "item_group"}, {"type": "para", "indent": 12, "text": ["If no deformation is performed, no 3rd input (deformed tetrahedra)\n            has to be connected."], "extent": [3282, 3395]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Interpolate Attributes"], "extent": [3395, 3427], "body": [{"type": "para", "indent": 12, "text": ["A list of attributes to be inherited from the tetrahedron mesh.\n            Apart from position (", {"type": "code", "text": ["P"]}, "), other attributes can be inherited from the\n            deformed tetrahedron geometry."], "extent": [3427, 3641]}, {"type": "note_group", "body": [{"type": "note", "indent": 12, "role": "item", "extent": [3641, 3659], "body": [{"type": "para", "indent": 16, "text": ["Make sure to have ", {"type": "code", "text": ["P"]}, " (position) specified, or the deformation\n                won\u2019t work."], "extent": [3659, 3766]}], "container": true}], "container": true, "role": "item_group"}], "container": true}], "container": true}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Volume"], "extent": [3766, 3778], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 8, "text": ["Voxel Scale"], "extent": [3778, 3799], "body": [{"type": "para", "indent": 12, "text": ["If enabled, volumes will be resampled before the volume deformation\n            operation. Higher values mean lower volume resolution."], "extent": [3799, 3959]}, {"type": "tip_group", "body": [{"type": "tip", "indent": 12, "role": "item", "extent": [3959, 3976], "body": [{"type": "para", "indent": 16, "text": ["This can be used to speed up interactive feedback\n                when dealing with volumes."], "extent": [3976, 4086]}], "container": true}], "container": true, "role": "item_group"}], "container": true}, {"type": "dt", "indent": 8, "text": ["VDB Masking"], "extent": [4086, 4107], "body": [{"type": "para", "indent": 12, "text": ["If enabled, all the VDB volumes will be ", {"type": "q", "text": ["masked"]}, " by one of the specified\n            volumes (", {"type": "em", "text": ["density"]}, " by default). It can be useful to mask out ", {"type": "q", "text": ["leftover"]}, "\n            volume data that\u2019s not required any more (e.g. color values outside\n            a density field)."], "extent": [4107, 4387]}], "container": true}], "container": true}], "container": true, "role": "item"}], "container": true, "role": "item_group"}], "text": "Parameters"}, {"level": 1, "id": "related", "container": true, "type": "related_section", "indent": 0, "role": "section", "extent": [4387, 4396], "body": [{"type": "bullet_group", "body": [{"blevel": 6, "type": "bullet", "indent": 4, "text": [{"scheme": "Node", "value": "/nodes/sop/qLib::polywrap_capture_ql::1", "type": "link", "text": ["PolyWrap Capture qL SOP"], "exists": true}], "extent": [4396, 4466]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": [{"scheme": "Node", "value": "/nodes/sop/qLib::bend_ql::2", "type": "link", "text": ["Bend Deformer qL SOP"], "exists": true}], "extent": [4466, 4521]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": [{"scheme": "Node", "value": "/nodes/sop/qLib::bias_deformer_ql::1", "type": "link", "text": ["Bias Deformer qL SOP"], "exists": true}], "extent": [4521, 4585]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": [{"scheme": "Node", "value": "/nodes/sop/qLib::deform_pcloud_ql::1", "type": "link", "text": ["Deform by Point Cloud qL SOP"], "exists": true}], "extent": [4585, 4657]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": [{"scheme": "Node", "value": "/nodes/sop/qLib::deformbysurface_ql::1", "type": "link", "text": ["Deform by Surface qL SOP"], "exists": true}], "extent": [4657, 4727]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": [{"scheme": "Node", "value": "/nodes/sop/qLib::mountain_deformer_ql::1", "type": "link", "text": ["Mountain Deformer qL SOP"], "exists": true}], "extent": [4727, 4799]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": [{"scheme": "Node", "value": "/nodes/sop/qLib::noise_ql::1", "type": "link", "text": ["Noise qL SOP"], "exists": true}], "extent": [4799, 4847]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": [{"scheme": "Node", "value": "/nodes/sop/qLib::pointjitter_ql::1", "type": "link", "text": ["PointJitter qL SOP"], "exists": true}], "extent": [4847, 4907]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": [{"scheme": "Node", "value": "/nodes/sop/qLib::taper_ql::1", "type": "link", "text": ["Taper Deformer qL SOP"], "exists": true}], "extent": [4907, 4964]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": [{"scheme": "Node", "value": "/nodes/sop/qLib::twist_ql::2", "type": "link", "text": ["Twist Deformer qL SOP"], "exists": true}], "extent": [4964, 5027]}], "container": true}], "text": "Related"}, {"level": 1, "id": "todo", "container": true, "type": "todo_section", "indent": 0, "text": ["To Do"], "role": "section", "extent": [5027, 5039], "body": [{"type": "bullet_group", "body": [{"blevel": 6, "type": "bullet", "indent": 4, "text": ["Shrinking deformations are low quality (no averaging of multiple source voxels) (", {"scheme": null, "value": "https://github.com/qLab/qLib/issues/997", "type": "link", "text": ["#997"], "exists": true}, ")"], "extent": [5039, 5174]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": ["Should support vector (velocity) volumes (right now it\u2019s scalar only)  \u2192 Works for scalars and colors now"], "extent": [5174, 5286]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": ["Could this method support SDFs?  \u2192 Nope"], "extent": [5286, 5332]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": ["Inefficient in memory/performance terms: figure out a way to properly activate target VDB volume!"], "extent": [5332, 5438]}], "container": true}]}, {"level": 1, "id": "relnotes", "container": true, "type": "relnotes_section", "indent": 0, "text": ["Release Notes"], "role": "section", "extent": [5438, 5462], "body": [{"type": "para", "indent": 0, "text": [{"type": "em", "text": ["interface version 1"]}, " \u2014"], "extent": [5462, 5490]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 0, "text": ["2020-03-03"], "extent": [5490, 5502], "body": [{"type": "bullet_group", "body": [{"blevel": 6, "type": "bullet", "indent": 4, "text": ["Added ", {"type": "q", "text": ["proxy scale"]}, " network editor indicator (", {"scheme": null, "value": "https://github.com/qLab/qLib/issues/994", "type": "link", "text": ["#994"], "exists": true}, ")"], "extent": [5502, 5603]}], "container": true}], "container": true}, {"type": "dt", "indent": 0, "text": ["2020-03-02"], "extent": [5603, 5615], "body": [{"type": "bullet_group", "body": [{"blevel": 6, "type": "bullet", "indent": 4, "text": ["Fixed regular geo/volume issues (", {"scheme": null, "value": "https://github.com/qLab/qLib/issues/988", "type": "link", "text": ["#988"], "exists": true}, ")"], "extent": [5615, 5703]}], "container": true}], "container": true}, {"type": "dt", "indent": 0, "text": ["2020-02-16"], "extent": [5703, 5715], "body": [{"type": "bullet_group", "body": [{"blevel": 6, "type": "bullet", "indent": 4, "text": ["Updated tets volume deformation section (again) from Deform by Curve SOP"], "extent": [5715, 5794], "body": [{"type": "bullet_group", "body": [{"blevel": 8, "type": "bullet", "indent": 6, "text": ["Test and make sure it works in all scenarios"], "extent": [5794, 5848]}], "container": true}], "container": true}], "container": true}], "container": true}, {"type": "dt", "indent": 0, "text": ["2020-02-11"], "extent": [5848, 5860], "body": [{"type": "bullet_group", "body": [{"blevel": 6, "type": "bullet", "indent": 4, "text": ["Should use less VDB memory while processing (", {"scheme": null, "value": "https://github.com/qLab/qLib/issues/967", "type": "link", "text": ["#967"], "exists": true}, ")"], "extent": [5860, 5959]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": ["Added VDB Masking options"], "extent": [5959, 5991]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": ["A bit more compact UI (can give harmless warnings for existing nodes on scene open)"], "extent": [5991, 6082]}], "container": true}], "container": true}, {"type": "dt", "indent": 0, "text": ["2020-02-10"], "extent": [6082, 6094], "body": [{"type": "bullet_group", "body": [{"blevel": 6, "type": "bullet", "indent": 4, "text": ["Fixed a silly bug in volume deformation method"], "extent": [6094, 6147]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": ["Volume deformation is now done using a single Volume Wrangle"], "extent": [6147, 6214]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": ["Volumes are now required to have a ", {"type": "var", "text": ["name"]}, " attribute"], "extent": [6214, 6274]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": ["Both scalar and vector (color) volumes are supported"], "extent": [6274, 6334]}], "container": true}], "container": true}, {"type": "dt", "indent": 0, "text": ["2017-02-20"], "extent": [6334, 6346], "body": [{"type": "bullet_group", "body": [{"blevel": 6, "type": "bullet", "indent": 4, "text": ["Fixed attribute interpolations (#547)"], "extent": [6346, 6390]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": ["Added attribute menu for Weight Name"], "extent": [6390, 6434]}], "container": true}], "container": true}, {"type": "dt", "indent": 0, "text": ["2017-02-20"], "extent": [6434, 6446], "body": [{"type": "para", "indent": 4, "text": ["Groups reinterpreted (work in progress):"], "extent": [6446, 6491]}, {"type": "bullet_group", "body": [{"blevel": 6, "type": "bullet", "indent": 4, "text": ["Inside: points inside the tetrahedron mesh"], "extent": [6491, 6540]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": ["Outside: points that are completely unaffected by the tet deformation"], "extent": [6540, 6617]}], "container": true}], "container": true}, {"type": "dt", "indent": 0, "text": ["2017-03-05"], "extent": [6617, 6629], "body": [{"type": "bullet_group", "body": [{"blevel": 6, "type": "bullet", "indent": 4, "text": ["Added Max Dist Tolerance parameter for Primitive Index + UVW mode (#542)"], "extent": [6629, 6709]}], "container": true}], "container": true}, {"type": "dt", "indent": 0, "text": ["2017-02-28"], "extent": [6709, 6721], "body": [{"type": "bullet_group", "body": [{"blevel": 6, "type": "bullet", "indent": 4, "text": ["Added new deformer mode (weighted points) (#523)"], "extent": [6721, 6776]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": ["Added inside/outside point group options (#523)"], "extent": [6776, 6831]}], "container": true}], "container": true}, {"type": "dt", "indent": 0, "text": ["2016-08-05"], "extent": [6831, 6843], "body": [{"type": "bullet_group", "body": [{"blevel": 6, "type": "bullet", "indent": 4, "text": ["First version."], "extent": [6843, 6865]}], "container": true}], "container": true}], "container": true}]}], "title": ["Deform by Tetra qL"], "summary": ["Deforms the input geometry (including volumes) using tetrahedrons."]}