{"type": "root", "attrs": {"type": "node", "context": "sop", "internal": "vellumio", "version": "2.0", "icon": "SOP/vellumio", "since": "19.5", "namespace": null}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["Vellum I/O"], "extent": [103, 118]}, {"type": "summary", "indent": 0, "text": ["Packs Vellum simulations, saves them to disk, and loads them back again."], "extent": [118, 199]}, {"type": "para", "indent": 0, "text": ["The Vellum I/O SOP is designed to streamline the common operation\nof packing a Vellum stream, saving it to disk, and giving an option\nto use the saved sequence rather than the live sequence."], "extent": [199, 391]}, {"type": "para", "indent": 0, "text": ["The third input wires directly to the third output and is not cached to disk."], "extent": [391, 470]}, {"level": 1, "id": "parameters", "container": true, "type": "parameters_section", "indent": 0, "role": "section", "extent": [470, 482], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Storage Type"], "extent": [482, 497], "body": [{"type": "para", "indent": 4, "text": ["Vellum simulations consist of both the geometry being simulated,\n    but also the set of constraints applied to the geometry.  In order\n    to restart a simulation the constraints are required, but it is\n    a lot less storage to only store the raw geometry."], "extent": [515, 779]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Geometry Only"], "extent": [779, 798], "body": [{"type": "para", "indent": 8, "text": ["Store an unpacked sequence of geometry which is just the Vellum\n        geometry.  In this mode, the second output will always be empty."], "extent": [798, 944]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Packed Geometry and Constraints"], "extent": [944, 981], "body": [{"type": "para", "indent": 8, "text": ["Pack the incoming geometry and constraints wires into two packed\n        primitives.  This pair of packed primitives is then saved as a single\n        sequence of geometry, providing access to the potentially animated\n        constraints.  The constraints allow the simulation to be restarted and\n        allow the visualization of the state of the constraints when loading a\n        cached simulation."], "extent": [981, 1393]}, {"type": "para", "indent": 8, "text": ["In this mode, the first output and second output will be the\n        unpacked geometry and constraints respectively."], "extent": [1393, 1519]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "storage"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Load from Disk"], "extent": [7434, 7451], "body": [{"type": "para", "indent": 4, "text": ["When this is on, the node reads its output from the cached disk files, rather than cooking its input. When you click ", {"type": "ui", "text": ["Save to Disk"]}, " or ", {"type": "ui", "text": ["Save to Disk in Background"]}, " (on the ", {"type": "ui", "text": ["Caching"]}, " tab) to write out the cache files, the node automatically turns this checkbox on."], "extent": [7474, 7749]}], "container": true, "attrs": {"id": "loadfromdisk"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Reload Geometry"], "extent": [2008, 2025], "body": [{"type": "para", "indent": 4, "text": ["Force a reload of the file.  This will also clear any cached data for\n    packed disk primitives (see also the ", {"scheme": "Cmd", "value": "/commands/geocache", "type": "link", "text": ["geocache"], "fallback_text": "geocache", "fullpath": "/commands/geocache.html"}, " command)."], "extent": [2042, 2192]}], "container": true, "attrs": {"id": "reload"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["File Path"], "extent": [7772, 7783], "body": [{"type": "para", "indent": 4, "text": ["When this is ", {"type": "ui", "text": ["Constructed"]}, " (the default), the node builds up the cache file path(s) from the values of various parameters, allowing features such as versioning and animation options. If you set this to ", {"type": "ui", "text": ["Explicit"]}, ", you need to ", {"scheme": null, "value": "/render/expressions", "type": "link", "text": ["manually write a single expression"], "fullpath": "/render/expressions.html"}, " in the ", {"type": "ui", "text": ["Geometry File"]}, " parameter with all the variables you want in the path (including the frame number when ", {"type": "ui", "text": ["Time dependent cache"]}, " is on)."], "extent": [7804, 8241]}], "container": true, "attrs": {"id": "filemethod"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Time Dependent Cache"], "extent": [8241, 8263], "body": [{"type": "para", "indent": 4, "text": ["When this is on (the default), the node writes out a separate cache file for every frame (using the global frame start/end/increment from the timeline). If the input geometry is static (doesn\u2019t change based on the frame number), turn this off to avoid writing out multiple identical files."], "extent": [8287, 8582]}], "container": true, "attrs": {"id": "timedependent"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Base Name"], "extent": [8582, 8593], "body": [{"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["File Path"]}, " is ", {"type": "ui", "text": ["Constructed"]}, ", this is the first part of the cache file name. The default is ", {"type": "code", "text": ["$HIPNAME.$OS"]}, " (the name of the current scene file without the ", {"type": "code", "text": [".hip"]}, " extension, then a dot, then the name of this node). This is usually sufficient to prevent filename collisions between files/nodes if you give this node an meaningful, unique name (if you have two networks containing nodes both named ", {"type": "code", "text": ["filecache1"]}, ", you will get a collision). The drop down menu to the right of the text field has some more possible expressions."], "extent": [8612, 9148]}], "container": true, "attrs": {"id": "basename"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["File Type"], "extent": [9148, 9159], "body": [{"type": "para", "indent": 4, "text": ["The default is ", {"type": "code", "text": [".bgeo.sc"]}, ", which can handle any type of Houdini geometry and uses compression, so it\u2019s always safe to use. If ", {"type": "em", "text": ["all"]}, " the primitives in the input are ", {"type": "em", "text": ["always"]}, " VDB volumes, you can switch the file type to save the files directly as ", {"type": "code", "text": [".vdb"]}, ". When you set the ", {"type": "ui", "text": ["File type"]}, " to ", {"type": "code", "text": [".vdb"]}, ", the node converts Houdini\u2019s primitive attributes to VDB grid metadata, and detail attributes to file metadata."], "extent": [9178, 9589]}], "container": true, "attrs": {"id": "filetype"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Base Folder"], "extent": [9589, 9602], "body": [{"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["File Path"]}, " is ", {"type": "ui", "text": ["Constructed"]}, ", this is the folder to save the cache files into. The default is ", {"type": "code", "text": ["$HIP/geo"]}, " (a folder named ", {"type": "code", "text": ["geo"]}, " in the same directory as the current scene file). (When ", {"type": "ui", "text": ["Version"]}, " is on it adds another directory level inside the base folder.)"], "extent": [9620, 9892]}], "container": true, "attrs": {"id": "basedir"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Open Directory"], "extent": [9892, 9908], "body": [{"type": "para", "indent": 4, "text": ["Click to show the contents of the ", {"type": "ui", "text": ["Base Folder"]}, " in the file manager. This can be useful when you want to clean up old cache files."], "extent": [9930, 10068]}], "container": true, "attrs": {"id": "openbasedir"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Version"], "extent": [10068, 10077], "body": [{"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["File Path"]}, " is ", {"type": "ui", "text": ["Constructed"]}, " and the checkbox to the left is on, the node adds a directory level (and filename part) to the cache file path(s) indicating the version. This lets you ", {"scheme": null, "value": "#versioning", "type": "link", "text": ["cache multiple variations"], "fullpath": "/nodes/sop/filecache.html#versioning", "fragment": "#versioning"}, " of the input network."], "extent": [10095, 10352]}], "container": true, "attrs": {"id": "version"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Geometry File"], "extent": [10352, 10367], "body": [{"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["File Path"]}, " is ", {"type": "ui", "text": ["Explicit"]}, ", the node uses this file path expression to generate the cache file path(s). This expression should ", {"scheme": null, "value": "/render/expressions", "type": "link", "text": ["include all the variables"], "fullpath": "/render/expressions.html"}, " you want in the path (including the frame number when ", {"type": "ui", "text": ["Time dependent cache"]}, " is on)"], "extent": [10382, 10657]}], "container": true, "attrs": {"id": "file"}, "role": "item"}], "container": true, "role": "item_group"}, {"level": 2, "id": "caching", "container": true, "type": "h", "indent": 0, "text": ["Caching"], "extent": [10657, 10681], "body": [{"level": 3, "type": "sep", "indent": 0, "text": [" Cache "], "extent": [10681, 10696]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Save to Disk"], "extent": [147, 162], "body": [{"type": "para", "indent": 4, "text": ["Saves the geometry to disk with the last control settings."], "extent": [180, 244]}], "container": true, "attrs": {"id": "execute"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Save to Disk in Background"], "extent": [10736, 10764], "body": [{"type": "para", "indent": 4, "text": ["Use a TOP network to cook and save the cache files to disk in a separate background process. This allows you to keep working on other parts of Houdini. The cached frames will show up as they are completed by the other process."], "extent": [10789, 11021]}], "container": true, "attrs": {"id": "cookoutputnode"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Cancel Cook"], "extent": [11021, 11034], "body": [{"type": "para", "indent": 4, "text": ["Stops all background caching processes, if any exist."], "extent": [11053, 11112]}], "container": true, "attrs": {"id": "dirtyall"}, "role": "item"}], "container": true, "role": "item_group"}, {"type": "tip_group", "body": [{"type": "tip", "indent": 0, "role": "item", "extent": [11112, 11117], "body": [{"type": "para", "indent": 4, "text": ["You can collapse the box around these buttons as a ", {"type": "q", "text": ["safety latch"]}, ", to prevent yourself from clicking them and rebuilding the cache accidentally."], "extent": [11117, 11268]}], "container": true}], "container": true, "role": "item_group"}, {"level": 3, "type": "sep", "indent": 0, "text": [" Sequence "], "extent": [11268, 11285]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Evaluate As"], "extent": [11285, 11299], "body": [{"type": "para", "indent": 4, "text": ["When this is ", {"type": "ui", "text": ["Frame Range"]}, " the node writes a cache file for every frame (see Start/End/Inc below). If you don\u2019t want pre-generate all frames at once, or if you know you only need to regenerate a single changed frame, you can set this to ", {"type": "ui", "text": ["Single Frame"]}, ". This makes the node write out a cache file only for the current frame (or the frame you set in ", {"type": "ui", "text": ["Override frame"]}, ")."], "extent": [11321, 11699]}], "container": true, "attrs": {"id": "trailinglen"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Simulation"], "extent": [11699, 11711], "body": [{"type": "para", "indent": 4, "text": ["Use this when you are caching a sequence that is generated using a simulation, that makes each frame dependent on it\u2019s previous frame. "], "extent": [11729, 11870]}], "container": true, "attrs": {"id": "cachesim"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Override Frame"], "extent": [11870, 11886], "body": [{"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["Evaluate as"]}, " is ", {"type": "ui", "text": ["Single Frame"]}, " and the checkbox to the left is on, cache this explicit frame number instead of the current frame from the timeline."], "extent": [11886, 12049]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Start/End/Inc"], "extent": [669, 684], "body": [{"type": "para", "indent": 4, "text": ["Specifies the range of frames to render (start frame, end frame, and increment). All values may be floating point values. The range is inclusive. "], "extent": [695, 847]}, {"type": "para", "indent": 4, "text": ["These parameters determine the values of the local variables for the output driver."], "extent": [847, 936]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": [{"type": "code", "text": ["$NRENDER"]}], "extent": [936, 952], "body": [{"type": "para", "indent": 8, "text": ["The number of frames to be rendered by the output driver."], "extent": [952, 1018]}], "container": true}, {"type": "dt", "indent": 4, "text": [{"type": "code", "text": ["$N"]}], "extent": [1018, 1028], "body": [{"type": "para", "indent": 8, "text": ["The current frame being rendered (starting at 1 and going to ", {"type": "code", "text": ["$NRENDER"]}, ")."], "extent": [1028, 1111]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "f"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Substeps"], "extent": [12082, 12092], "body": [{"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["Evaluate as"]}, " is ", {"type": "ui", "text": ["Frame range"]}, ", this is the number of fractional sub-frames to divide each frame into. Caching sub-frames increases the quality of motion blur rendering for cached animated geometry. If you set ", {"type": "ui", "text": ["Substeps"]}, " greater than ", {"type": "code", "text": ["1"]}, " and you've set ", {"type": "ui", "text": ["File Path"]}, " to ", {"type": "ui", "text": ["Explicit"]}, ", make sure your explicit path expression can handle fractional frames, by using ", {"type": "code", "text": ["$T"]}, " (floating point time in seconds) or ", {"type": "code", "text": ["$FF"]}, " (fractional frame number) instead of ", {"type": "code", "text": ["$F"]}, " (whole frame number)."], "extent": [12111, 12602]}], "container": true, "attrs": {"id": "substeps"}, "role": "item"}], "container": true, "role": "item_group"}, {"level": 3, "type": "sep", "indent": 0, "text": [" Load "], "extent": [12602, 12615]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Clamp First Frame"], "extent": [12615, 12635], "body": [{"type": "para", "indent": 4, "text": ["Clamps the current frame if it is earlier than this frame.\n    This can be used to load the ", {"type": "ui", "text": ["Start"]}, " frame\u2019s geometry for frames before the Start/End range, which would otherwise output empty geometry."], "extent": [12655, 12863]}], "container": true, "attrs": {"id": "clampfirst"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Clamp Last Frame"], "extent": [12863, 12881], "body": [{"type": "para", "indent": 4, "text": ["Clamps the current frame if it is later than this frame.\n    This can be used to load the ", {"type": "ui", "text": ["End"]}, " frame\u2019s geometry for frames after the Start/End range, which would otherwise output empty geometry."], "extent": [12900, 13103]}], "container": true, "attrs": {"id": "clamplast"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Load"], "extent": [3149, 3155], "body": [{"type": "para", "indent": 4, "text": ["Some file formats, in particular ", {"type": "code", "text": [".bgeo"]}, ", ", {"type": "code", "text": [".bgeo.sc"]}, ", and ", {"type": "code", "text": [".geo"]}, ", contain meta-data in the header than can be loaded without loading the entire file. This is useful for dealing with large data sets."], "extent": [3173, 3381]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["All Geometry"], "extent": [3381, 3399], "body": [{"type": "para", "indent": 8, "text": ["Loads the whole file. Potentially with some parts delayed (see below)"], "extent": [3399, 3478]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Info"], "extent": [3478, 3488], "body": [{"type": "para", "indent": 8, "text": ["Creates one point if the file loads successfully and attach attributes for each named component of the meta-data."], "extent": [3488, 3611]}, {"type": "para", "indent": 8, "text": ["Metadata is created by whatever writes the file, so may vary.  Common metadata are:"], "extent": [3611, 3704]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 8, "text": ["artist"], "extent": [3704, 3720], "body": [{"type": "para", "indent": 12, "text": ["The username that generated the file.  You can override this with the ", {"type": "code", "text": ["HOUDINI_AUTHOR"]}, " environment variable."], "extent": [3720, 3841]}], "container": true}, {"type": "dt", "indent": 8, "text": ["hostname"], "extent": [3841, 3859], "body": [{"type": "para", "indent": 12, "text": ["The name of the machine that generated the file. This is very useful when tracking strange behavior on a farm.  It can also be overridden with the ", {"type": "code", "text": ["HOUDINI_AUTHOR"]}, " environment variable."], "extent": [3859, 4057]}], "container": true}, {"type": "dt", "indent": 8, "text": ["date"], "extent": [4057, 4071], "body": [{"type": "para", "indent": 12, "text": ["The time the file was created, which may not match the date stamp of the file."], "extent": [4071, 4162]}], "container": true}, {"type": "dt", "indent": 8, "text": ["software"], "extent": [4162, 4180], "body": [{"type": "para", "indent": 12, "text": ["The version of Houdini used to create the file."], "extent": [4180, 4240]}], "container": true}, {"type": "dt", "indent": 8, "text": ["time"], "extent": [4240, 4254], "body": [{"type": "para", "indent": 12, "text": ["The time, in seconds, on the playbar when the file was saved."], "extent": [4254, 4328]}], "container": true}, {"type": "dt", "indent": 8, "text": ["timetocook"], "extent": [4328, 4348], "body": [{"type": "para", "indent": 12, "text": ["How long it took to compute the file.  Created by ROP Geometry,\n            this is the wall-clock time in seconds to generate the file. If multiple output drivers are present, caching may cause undercounting of what it would take to cook the file on its own."], "extent": [4348, 4621]}], "container": true}], "container": true}], "container": true}, {"type": "dt", "indent": 4, "text": ["Info Bounding Box"], "extent": [4621, 4644], "body": [{"type": "para", "indent": 8, "text": ["Tries to build a bounding box using the information stored in the header of the file."], "extent": [4644, 4739]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Point Cloud"], "extent": [4739, 4756], "body": [{"type": "para", "indent": 8, "text": ["Tries to load just the points from a disk file.  This will be faster and use less memory than loading primitives."], "extent": [4756, 4879]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Packed Disk Primitive"], "extent": [4879, 4906], "body": [{"type": "para", "indent": 8, "text": ["Instead of loading the geometry into memory, create a packed disk primitive.  Copies of the delayed load primitive will share geometry meaning that multiple copies will use less memory."], "extent": [4906, 5101]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Packed Disk Sequence"], "extent": [5101, 5127], "body": [{"type": "para", "indent": 8, "text": ["Instead of loading the geometry into memory, this will create a packed disk sequence primitive.  Unlike a packed disk primitive, the packed disk sequence stores a list of filenames along with an index of which file to unpack during rendering.  Since the packed disk sequence primitive is aware of all the files in the disk sequence, it is able to compute blended sub-frame geometry at render time (provided topology matches between frames).  This means that motion blur can be computed correctly. When creating the packed disk sequence primitive, the ", {"type": "ui", "text": ["Geometry File"]}, " parameter is evaluated for each frame in the frame range.  The index of the packed disk sequence primitive is set to the value of the ", {"type": "ui", "text": ["Sequence Index"]}, " parameter."], "extent": [5127, 5869]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Packed Geometry"], "extent": [5869, 5890], "body": [{"type": "para", "indent": 8, "text": ["This will load the geometry into memory, and create a standalone packed geometry primitive containing it."], "extent": [5890, 6005]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "loadtype"}, "role": "item"}], "container": true, "role": "item_group"}, {"type": "include_group", "body": [{"ext": "file#packedviewedit", "type": "include", "indent": 0, "role": "item", "extent": [13128, 13159]}], "container": true, "role": "item_group"}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Display As"], "extent": [6908, 6920], "body": [{"type": "para", "indent": 4, "text": ["When loading the geometry as ", {"type": "ui", "text": ["Packed Disk Primitive"]}, " or when delayed loading, you can set the viewport display to a lighter representation of the packed geometry.  This setting only applies to rendering in the viewport, at render time, the full geometry will be rendered."], "extent": [6941, 7220]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Use File Setting"], "extent": [7220, 7242], "body": [{"type": "para", "indent": 8, "text": ["Packed primitives have viewport display settings that are saved to file. This option reads these and uses them. All others override the saved setting. "], "extent": [7242, 7403]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Full Geometry"], "extent": [7403, 7422], "body": [{"type": "para", "indent": 8, "text": ["The full geometry will be displayed in the viewport."], "extent": [7422, 7484]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Point Cloud"], "extent": [7484, 7501], "body": [{"type": "para", "indent": 8, "text": ["Only the points of the geometry will be displayed.  This will take less memory and be faster to render."], "extent": [7501, 7614]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Bounding Box"], "extent": [7614, 7632], "body": [{"type": "para", "indent": 8, "text": ["Only display the bounding box of the geometry in the viewport."], "extent": [7632, 7704]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Centroid"], "extent": [7704, 7718], "body": [{"type": "para", "indent": 8, "text": ["Display a single point at the center of the bounding box."], "extent": [7718, 7785]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Hidden"], "extent": [7785, 7797], "body": [{"type": "para", "indent": 8, "text": ["Don\u2019t display the geometry in the viewport."], "extent": [7797, 7850]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "viewportlod"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Pack Using Expanded/Absolute File Path"], "extent": [6005, 6045], "body": [{"type": "para", "indent": 4, "text": ["When loading the geometry as ", {"type": "ui", "text": ["Packed Disk Primitive"]}, ", this toggle controls whether the file name stored with the primitive will have variables expanded.  By default, variables will be preserved. For example, a file such as ", {"type": "code", "text": ["$HIP/geo/tree.bgeo"]}, " will be portable if the value of the ", {"type": "code", "text": ["$HIP"]}, " variable changes.  This is only important if you are saving the packed primitive to disk and may move the geometry file."], "extent": [6067, 6483]}, {"type": "para", "indent": 4, "text": ["When storing variables in the packed primitive (i.e. the toggle is turned off), the primitive itself performs variable expansion.  Since the primitive can be accessed in applications other than Houdini (", {"type": "code", "text": ["mantra"]}, ", ", {"type": "code", "text": ["gplay"]}, ", ", {"type": "code", "text": ["gconvert"]}, ", etc.), the expansion of variables is limited in function.  For example, using variables local to the .hip file or using expressions which reference other nodes may not work as expected."], "extent": [6483, 6908]}], "container": true, "attrs": {"id": "packexpanded"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Delay Load Geometry"], "extent": [7850, 7871], "body": [{"type": "para", "indent": 4, "text": ["If this parameter is set, packed primitives and other shared data will not be loaded immediately but will be loaded only as needed. This can be useful when opening a large scene to reduce load times.  "], "extent": [7890, 8097]}], "container": true, "attrs": {"id": "delayload"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Sequence Index"], "extent": [9363, 9379], "body": [{"type": "para", "indent": 4, "text": ["When creating ", {"type": "ui", "text": ["Packed Disk Sequence"]}, " primitives, this parameter specifies which geometry from the sequence will be used at render time.  The index is linear, with values between 0 and the number of geometry files in the disk sequence (not based on the frame number).  Index values out of range will automatically wrap to generate animation cycles."], "extent": [9394, 9749]}, {"type": "para", "indent": 4, "text": ["The index values can have non-integer values.  If the topology matches between disk files, the geometry will be blended at render time.  See also the ", {"type": "code", "text": ["vm_pack_sequencesubsteps"]}, " rendering property."], "extent": [9749, 9951]}, {"type": "tip_group", "body": [{"type": "tip", "indent": 4, "role": "item", "extent": [9951, 9960], "body": [{"type": "para", "indent": 8, "text": ["To offset a sequence of images or geo files when you have padding in your frames, you should enter something like this:"], "extent": [9960, 10088]}, {"lang": null, "type": "pre", "indent": 8, "text": ["    \n        <path_to_image>/frame`padzero(3, $F+1)`.tga\n        "], "extent": [10088, 10168]}, {"type": "para", "indent": 8, "text": ["Where 3 is the number of digits in your sequence, for example 001 is pad 3, 0002 pad 4, etc. The back ticks are necessary so the expression gets evaluated inside the string parameter."], "extent": [10168, 10366]}], "container": true}], "container": true, "role": "item_group"}], "container": true, "attrs": {"id": "index"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Wrap Mode"], "extent": [10366, 10377], "body": [{"type": "para", "indent": 4, "text": ["When creating ", {"type": "ui", "text": ["Packed Disk Sequence"]}, " primitives, this parameter specifies behavior when ", {"type": "ui", "text": ["Sequence Index"]}, " is outside of the frame range."], "extent": [10391, 10540]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Cycle"], "extent": [10540, 10551], "body": [{"type": "para", "indent": 8, "text": ["File sequence repeats."], "extent": [10551, 10583]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Clamp"], "extent": [10583, 10594], "body": [{"type": "para", "indent": 8, "text": ["First file is used used when ", {"type": "ui", "text": ["Sequence Index"]}, " is before the range.  Last file is used when ", {"type": "ui", "text": ["Sequence Index"]}, " is after the range."], "extent": [10594, 10735]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Strict"], "extent": [10735, 10747], "body": [{"type": "para", "indent": 8, "text": ["No geometry outside of the range."], "extent": [10747, 10790]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Mirror"], "extent": [10790, 10802], "body": [{"type": "para", "indent": 8, "text": ["File sequence repeats with each repetition reversing order."], "extent": [10802, 10871]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "wrap"}, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 2, "id": "scheduling", "container": true, "type": "h", "indent": 0, "text": ["Scheduling"], "extent": [13286, 13316], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["TOP Scheduler Override"], "extent": [6683, 6707], "body": [{"type": "para", "indent": 4, "text": ["This parameter overrides the TOP scheduler for this node."], "extent": [6730, 6793]}], "container": true, "attrs": {"id": "topscheduler"}, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 2, "id": "savefilters", "container": true, "type": "h", "indent": 0, "text": ["Save Filters"], "extent": [13362, 13395], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Delete Attributes"], "extent": [13395, 13415], "body": [{"type": "para", "indent": 4, "text": ["A space separated list of attributes to delete from the geometry before saving it. If you know there are attributes on the input geometry you don\u2019t need in the rest of the network, you can decrease the cache file size and make cache loading faster by preventing the attributes from being included in the cache. The names will match at any level (vertex, point, primitive, or detail). The node will never delete the ", {"type": "code", "text": ["P"]}, " (position) point attribute. You can use patterns, for example ", {"type": "code", "text": ["* ^v"]}, " to delete all attributes except ", {"type": "code", "text": ["P"]}, " and ", {"type": "code", "text": ["v"]}, "."], "extent": [13442, 13980]}], "container": true, "attrs": {"id": "deleteattributes"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Delete Groups"], "extent": [13980, 13995], "body": [{"type": "para", "indent": 4, "text": ["A space separated list of groups to delete from the geometry before saving it. This can be useful with simulation data, where there can be groups in the output you will never use. You can decrease the cache file size and make cache loading faster by preventing these groups from being included in the cache."], "extent": [14018, 14331]}], "container": true, "attrs": {"id": "deletegroups"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Number of Casts"], "extent": [14331, 14348], "body": [{"type": "para", "indent": 4, "text": ["If you know you don\u2019t need full precision for certain attributes in the input, this multi-parm lets you convert the attributes to lower-precision types before saving the geometry. This can make the cache files smaller and faster to load (depending on how many uses of the attribute there are). Set the number or click the plus or minus buttons to set the number of conversions to do."], "extent": [14367, 14756]}, {"type": "para", "indent": 4, "text": ["See the ", {"scheme": "Node", "value": "/nodes/sop/attribcast", "type": "link", "text": ["Attribute Cast SOP"], "fullpath": "/nodes/sop/attribcast.html"}, " help for more information. "], "extent": [14756, 14838]}], "container": true, "attrs": {"id": "numcasts"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Class"], "extent": [14838, 14845], "body": [{"type": "para", "indent": 4, "text": ["In a ", {"type": "q", "text": ["cast"]}, " multiparm instance, the level (vertex, point, primitive, or detail) of the attribute(s) you want to convert to lower precision to save space."], "extent": [14861, 15020]}], "container": true, "attrs": {"id": "class"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Attributes"], "extent": [15020, 15032], "body": [{"type": "para", "indent": 4, "text": ["In a ", {"type": "q", "text": ["cast"]}, " multiparm instance, a space-separated list of attributes at the given level (set by the ", {"type": "ui", "text": ["Class"]}, " parameter above) you want to convert to lower precision to save space."], "extent": [15050, 15236]}], "container": true, "attrs": {"id": "attribs"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Precision"], "extent": [15236, 15247], "body": [{"type": "para", "indent": 4, "text": ["In a ", {"type": "q", "text": ["cast"]}, " multiparm instance, the precision to convert the matching attributes down to, to save space."], "extent": [15267, 15378]}], "container": true, "attrs": {"id": "precision"}, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 2, "id": "advanced", "container": true, "type": "h", "indent": 0, "text": ["Advanced"], "extent": [15378, 15404], "body": [{"level": 3, "type": "sep", "indent": 0, "text": [" Save "], "extent": [15404, 15418]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Enable Load from Disk on Save"], "extent": [15418, 15450], "body": [{"type": "para", "indent": 4, "text": ["Whether the node will automatically turn on ", {"type": "ui", "text": ["Load from disk"]}, " when you click ", {"type": "ui", "text": ["Save to disk"]}, " or ", {"type": "ui", "text": ["Save to disk in background"]}, "."], "extent": [15479, 15614]}], "container": true, "attrs": {"id": "loadfromdiskonsave"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Harden Base Name on Save"], "extent": [15614, 15640], "body": [{"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["File Path"]}, " is ", {"type": "ui", "text": ["Constructed"]}, " and this is on, when you click ", {"type": "ui", "text": ["Save to disk"]}, " or ", {"type": "ui", "text": ["Save to disk in background"]}, " the node automatically converts the expression in ", {"type": "ui", "text": ["Base name"]}, " to a literal string. This prevents the cache from breaking if you duplicate or rename the scene file or node."], "extent": [15665, 15964]}], "container": true, "attrs": {"id": "hardenbasename"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Create Intermediate Directories"], "extent": [15964, 15997], "body": [{"type": "para", "indent": 4, "text": ["When writing out cache files, automatically create any intermediate directories in the file path that don\u2019t exist."], "extent": [16014, 16134]}], "container": true, "attrs": {"id": "mkpath"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Initialize Simulation OPs"], "extent": [1690, 1717], "body": [{"type": "para", "indent": 4, "text": ["Forces all simulation OPs to be reset. This includes DOP\n    Networks, POP SOPs, and other OPs that cache their results."], "extent": [1734, 1860]}, {"type": "para", "indent": 4, "text": ["This is the safest way to render out a simulation, because it\n    starts the simulation from scratch and discards any partial\n    simulations you might have done with different parameters."], "extent": [1860, 2054]}], "container": true, "attrs": {"id": "initsim"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Alfred Style Progress"], "extent": [2054, 2077], "body": [{"type": "para", "indent": 4, "text": ["A percentage complete value is printed out as files are\n    written. This is in the style expected by Pixar\u2019s Alfred\n    render queue."], "extent": [2098, 2238]}], "container": true, "attrs": {"id": "alfprogress"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Save in Background"], "extent": [3202, 3222], "body": [{"type": "para", "indent": 4, "text": ["When saving more than one frame, save in a background thread. This can\n    make saving faster for large file sizes, but may use more memory since it\n    will retain the output geometry until the save completes."], "extent": [3246, 3462]}], "container": true, "attrs": {"id": "savebackground"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Save Retries"], "extent": [2592, 2606], "body": [{"type": "para", "indent": 4, "text": ["If saving the geometry to disk fails due to a disk writing error,\n    Houdini will usually error the output node immediately.  This\n    is desirable for most cases where a failure to save means an\n    illegal path, which is not recoverable.  However, sometimes files\n    fail to save due to network issues.  If the number of save retries\n    is non-zero, Houdini will re-attempt to save this number of times.\n    Each time will be accompanied with an output to the console of the\n    failure to save and a five second wait in the hopes that the network will\n    clear up."], "extent": [2625, 3202]}], "container": true, "attrs": {"id": "saveretry"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Render with Take"], "extent": [1111, 1129], "body": [{"type": "para", "indent": 4, "text": ["Uses the settings in a particular take while rendering. Choose\n    ", {"type": "ui", "text": ["Current"]}, " to use the current take when rendering."], "extent": [1144, 1268]}], "container": true, "attrs": {"id": "take"}, "role": "item"}], "container": true, "role": "item_group"}, {"level": 3, "type": "sep", "indent": 0, "text": [" Load "], "extent": [16340, 16353]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Missing Frame"], "extent": [16353, 16369], "body": [{"type": "para", "indent": 4, "text": ["This is what the node should do (in ", {"type": "ui", "text": ["Load from disk"]}, " mode) when the node can\u2019t find (or cleanly load) a cache file. ", {"type": "ui", "text": ["Report error"]}, " sets an error on the node, preventing the rest of the network from cooking. This makes it obvious when a problem happens. ", {"type": "ui", "text": ["No geometry"]}, " (the default) sets a warning on the node rather than an error, and outputs empty geometry. This can be useful if your network has a way of dealing with missing cache frames, or if they're not important. "], "extent": [16392, 16874]}], "container": true, "attrs": {"id": "missingframe"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Cache Frames"], "extent": [8202, 8216], "body": [{"type": "para", "indent": 4, "text": ["The total number of frames to cache in memory.  These sorted by filename,\n    not by time, so if multiple frames evaluate to the same file name they will\n    share the same cached geometry.  "], "extent": [8235, 8432]}, {"type": "note_group", "body": [{"type": "note", "indent": 4, "role": "item", "extent": [8432, 8442], "body": [{"type": "para", "indent": 8, "text": ["A value of 1 is almost the same as the default behavior of the File SOP.  However, the new geometry will be loaded before the old geometry is freed.  When loading agent primitives, this avoids possible flushing shared agent shape caches."], "extent": [8442, 8689]}], "container": true}], "container": true, "role": "item_group"}], "container": true, "attrs": {"id": "cachesize"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Pre-fetch Geometry"], "extent": [8689, 8709], "body": [{"type": "para", "indent": 4, "text": ["Attempt to predict the next frame that will be needed and load it in\n    the background.  This lets computation be overlapped with file IO."], "extent": [8727, 8872]}, {"type": "para", "indent": 4, "text": ["If you are blending multiple frames, the Cache Frames needs to be large\n    enough for only the net-new frame to be loaded each cook.  Otherwise\n    the simple predictive model of the prefetcher will be confused and stop working."], "extent": [8872, 9107]}], "container": true, "attrs": {"id": "prefetch"}, "role": "item"}], "container": true, "role": "item_group"}, {"level": 3, "id": "scripts_tab", "container": true, "type": "h", "indent": 0, "text": ["Scripts"], "extent": [7038, 7066], "body": [{"type": "para", "indent": 4, "text": ["A script command can be specified for execution at various execution\n    points. The expression language selected for the script parameter determines\n    whether the command is in hscript or python."], "extent": [7066, 7271]}, {"type": "para", "indent": 4, "text": ["Prior to execution, this node is automatically set as the global current\n    node."], "extent": [7271, 7359]}, {"type": "para", "indent": 4, "text": ["To run statements from a file, specify the path to the file with\n    either a ", {"type": "code", "text": [".cmd"]}, " extension (when the language is set to ", {"type": "ui", "text": ["Hscript"]}, ") or a ", {"type": "code", "text": [".py"]}, "\n    extension (when the language is set to ", {"type": "ui", "text": ["Python"]}, "). Additional arguments to the\n    script can also be supplied. They will be parsed in a shell-like manner."], "extent": [7359, 7673]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 4, "text": ["Pre-Render Script"], "extent": [7673, 7696], "body": [{"type": "para", "indent": 8, "text": ["Run this script before any rendering."], "extent": [7696, 7743]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Pre-Frame Script"], "extent": [7743, 7765], "body": [{"type": "para", "indent": 8, "text": ["Run this script before each frame."], "extent": [7765, 7809]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Post-Frame Script"], "extent": [7809, 7832], "body": [{"type": "para", "indent": 8, "text": ["Run this script after each frame."], "extent": [7832, 7875]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Post-Render Script"], "extent": [7875, 7899], "body": [{"type": "para", "indent": 8, "text": ["Run this script after all rendering."], "extent": [7899, 7945]}], "container": true, "role": "item"}], "container": true}]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Post-Write Script"], "extent": [3494, 3513], "body": [{"type": "para", "indent": 4, "text": ["Run this HScript after each frame\u2019s data has finished\n    writing to disk.  This is always after the corresponding Post-Frame\n    Script and always before the Post-Render script, but the order\n    otherwise is undefined.  When Save in Background is enabled\n    this allows delaying script actions until the file has finished\n    saving."], "extent": [3532, 3874]}], "container": true, "attrs": {"id": "postwrite"}, "role": "item"}], "container": true, "role": "item_group"}, {"level": 3, "type": "sep", "indent": 0, "text": [" Scripts "], "extent": [17010, 17026]}, {"type": "para", "indent": 0, "text": ["This section duplicates the pre/post scripts available on the ", {"scheme": "Node", "value": "/nodes/out/geometry", "type": "link", "text": ["Geometry render node"], "fullpath": "/nodes/out/geometry.html"}, "."], "extent": [17026, 17133]}, {"level": 3, "type": "sep", "indent": 0, "text": [" Path Construction "], "extent": [17133, 17159]}, {"type": "para", "indent": 0, "text": ["The expressions in these parameters allow an expert user to customize exactly how the node generates a cache file path. However, editing the expressions can easily break the operation of the node. The basic parameters include a lot of room for customization, so we recommend that you ", {"type": "strong", "text": ["do not try to customize these expressions"]}, ". However, they are available if, for example, they are necessary to conform with studio-wide conventions."], "extent": [17159, 17595]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Frame"], "extent": [17595, 17602], "body": [{"type": "para", "indent": 4, "text": ["Contains the expression that computes the current frame number to cache. ", {"type": "strong", "text": ["Do not edit this expression"]}, "."], "extent": [17618, 17727]}], "container": true, "attrs": {"id": "frame"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Frame String"], "extent": [17727, 17741], "body": [{"type": "para", "indent": 4, "text": ["Contains the expression that generates the frame number as a padded string, including a dot prefix. ", {"type": "strong", "text": ["Do not edit this expression"]}, "."], "extent": [17760, 17896]}], "container": true, "attrs": {"id": "framestr"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Version String"], "extent": [17896, 17912], "body": [{"type": "para", "indent": 4, "text": ["Contains an expression that generates the ", {"type": "q", "text": ["version"]}, " part of the path, including a ", {"type": "code", "text": ["v"]}, " prefix. ", {"type": "strong", "text": ["Do not edit this expression"]}, "."], "extent": [17933, 18063]}], "container": true, "attrs": {"id": "versionstr"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Cache Folder"], "extent": [18063, 18077], "body": [{"type": "para", "indent": 4, "text": ["Contains an expression that generates the parent directory path for cache files. ", {"type": "strong", "text": ["Do not edit this expression"]}, "."], "extent": [18096, 18213]}], "container": true, "attrs": {"id": "cachedir"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Cache Name"], "extent": [18213, 18225], "body": [{"type": "para", "indent": 4, "text": ["Contains an expression that generates the filename for cache files. ", {"type": "strong", "text": ["Do not edit this expression"]}, "."], "extent": [18245, 18349]}], "container": true, "attrs": {"id": "cachename"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Descriptive Label"], "extent": [18349, 18368], "body": [{"type": "para", "indent": 4, "text": ["Contains an expression that generates the ", {"type": "em", "text": ["descriptive text"]}, " displayed next to this node (below the name and badges) in the network editor. This is set to output the cache filename pattern. ", {"type": "strong", "text": ["Do not edit this expression"]}, "."], "extent": [18395, 18621]}], "container": true, "attrs": {"id": "descriptivelabel"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Output File"], "extent": [18621, 18634], "body": [{"type": "para", "indent": 4, "text": ["Contains an expression that generates the resolved, full path of the cache file for the current frame. ", {"type": "strong", "text": ["Do not edit this expression"]}, "."], "extent": [18654, 18794]}], "container": true, "attrs": {"id": "sopoutput"}, "role": "item"}], "container": true, "role": "item_group"}]}], "text": "Parameters"}, {"level": 1, "id": "locals", "container": true, "type": "locals_section", "indent": 0, "role": "section", "extent": [1936, 1944], "body": [], "text": "Locals"}, {"level": 1, "id": "related", "container": true, "type": "related_section", "indent": 0, "role": "section", "extent": [1944, 1954], "body": [{"type": "bullet_group", "body": [{"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/sop/file", "type": "link", "text": "", "fullpath": "/nodes/sop/file.html"}], "extent": [1954, 1972]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/sop/filecache", "type": "link", "text": "", "fullpath": "/nodes/sop/filecache.html"}], "extent": [1972, 1995]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/sop/filemerge", "type": "link", "text": "", "fullpath": "/nodes/sop/filemerge.html"}], "extent": [1995, 2018]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/sop/rbdio", "type": "link", "text": "", "fullpath": "/nodes/sop/rbdio.html"}], "extent": [2018, 2037]}], "container": true}], "text": "Related"}], "title": ["Vellum I/O"], "summary": ["Packs Vellum simulations, saves them to disk, and loads them back again."], "included": ["/nodes/out/geometry", "/nodes/out/standard", "/nodes/sop/file", "/nodes/sop/filecache", "/nodes/top/processor_common", "/nodes/top/ropfetch"]}