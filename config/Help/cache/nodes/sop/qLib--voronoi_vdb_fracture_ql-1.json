{"type": "root", "attrs": {"icon": "SOP/voronoifracture", "context": "sop", "type": "node", "internal": "voronoi_vdb_fracture_ql", "version": "1", "namespace": "qLib"}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["Voronoi VDB Fracture qL"], "extent": [54, 82]}, {"type": "para", "indent": 0, "text": [{"type": "strong", "text": ["interface version 1"]}], "extent": [82, 106]}, {"type": "summary", "indent": 0, "text": ["Performs a combined Voronoi/VDB fracture."], "extent": [106, 155]}, {"type": "para", "indent": 0, "text": ["(work-in-progress)"], "extent": [155, 175]}, {"type": "para", "indent": 0, "text": [{"scheme": "Image", "value": "/nodes/sop/qLib--voronoi_vdb_fracture_ql-1/voronoi_vdb_fracture_ql_sop_main.png", "type": "img", "text": ""}], "extent": [175, 228]}, {"type": "bullet_group", "body": [{"blevel": 2, "type": "bullet", "indent": 0, "text": ["A torus, fractured with Voronoi/VDB (with voronoi interior detail enabled)"], "extent": [228, 306]}], "container": true}, {"level": 1, "id": "features", "container": true, "type": "features_section", "indent": 0, "text": ["Features"], "role": "section", "extent": [306, 325], "body": [{"type": "bullet_group", "body": [{"blevel": 2, "type": "bullet", "indent": 0, "text": ["offers a faster way of adding interior detail"], "extent": [325, 374]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": ["can be slow / can produce larger meshes"], "extent": [374, 416]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": ["for large source geometry it should be way faster than regular voronoi (+multithreaded)"], "extent": [416, 506]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": ["the only requirement for the source geometry that it should be a closed shell\n  (for the VDB conversion), but otherwise more ", {"type": "q", "text": ["topology-tolerant"]}, " than regular voronoi"], "extent": [506, 675]}], "container": true}, {"type": "para", "indent": 0, "text": ["\u2026"], "extent": [675, 680]}]}, {"level": 1, "id": "usage", "container": true, "type": "usage_section", "indent": 0, "text": ["Usage"], "role": "section", "extent": [680, 693], "body": [{"type": "para", "indent": 0, "text": ["The node contains an editable subnet inside with a ", {"scheme": "Node", "value": "/nodes/sop/voronoifracture", "type": "link", "text": ["Voronoi Fracture SOP"], "fullpath": "/nodes/sop/voronoifracture.html"}, ".\nEnter the subnetwork and edit the voronoi settings there."], "extent": [693, 853]}, {"type": "note_group", "body": [{"type": "note", "indent": 0, "role": "item", "extent": [853, 859], "body": [{"type": "para", "indent": 4, "text": ["When replacing the Voronoi Fracture SOP inside, make sure all linked parameters\n    (e.g. Copy Cell Point Attibutes / To Piece Primitives) are re-linked properly\n    for related functionality to work."], "extent": [859, 1065]}], "container": true}], "container": true, "role": "item_group"}, {"type": "para", "indent": 0, "text": ["\u2026"], "extent": [1065, 1070]}]}, {"level": 1, "id": "inputs", "container": true, "type": "inputs_section", "indent": 0, "role": "section", "extent": [1070, 1078], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["1. Geometry to fracture"], "extent": [1078, 1107], "body": [{"type": "para", "indent": 8, "text": ["Input geometry (can be polygons or VDBs from a previous fracture node)"], "extent": [1107, 1187]}], "container": true}, {"type": "dt", "indent": 4, "text": ["2. Fracture points"], "extent": [1187, 1211], "body": [{"type": "para", "indent": 8, "text": ["Points to use as voronoi fracture cell points."], "extent": [1211, 1267]}], "container": true}, {"type": "dt", "indent": 4, "text": ["3. Original geometry (optional)"], "extent": [1267, 1304], "body": [{"type": "para", "indent": 8, "text": ["If the input geometry were VDBs from a previous fracture, the original\n        geometry can be connected here to use with the various VDB-to-polygons\n        options (e.g. transfer attributes, sharpen features, etc.)"], "extent": [1304, 1532]}], "container": true}], "container": true}], "text": "Inputs"}, {"level": 1, "id": "parameters", "container": true, "type": "parameters_section", "indent": 0, "role": "section", "extent": [1532, 1544], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 4, "text": ["Input"], "extent": [1544, 1555], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 8, "text": ["Input Geometry Type"], "extent": [1555, 1584], "body": [{"type": "para", "indent": 12, "text": ["\u2026\n            If the input geometry already consists of VDB (sdf) primitives\n            (i.e. result of a previous VDB Fracture operation), they\u2019ll just\n            be simply passed on."], "extent": [1584, 1798]}, {"type": "para", "indent": 12, "text": ["If the input geometry is regular (polygon-based), it will be converted\n            to an (sdf) VDB volume using the parameters below."], "extent": [1798, 1945]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Voxel Size"], "extent": [1945, 1965], "body": [{"type": "para", "indent": 12, "text": ["The base voxel size for all VDB operations.\n            Used only if the input geometry is converted to VDBs\n            (ignored if the inputs are VDB primitives)."], "extent": [1965, 2142]}], "container": true}, {"type": "dt", "indent": 8, "text": ["VDB Base Name"], "extent": [2142, 2165], "body": [{"type": "para", "indent": 12, "text": ["Base name for the per-primitive ", {"type": "code", "text": ["name"]}, " attribute when\n            converting the input geometry to VDB.\n            (Ignored if the input geometry is VDB-based)."], "extent": [2165, 2340]}], "container": true}], "container": true}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Output"], "extent": [2340, 2352], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 8, "text": ["Convert To"], "extent": [2352, 2372], "body": [{"type": "para", "indent": 12, "text": ["The output geometry type (polygons or polygon soups).\n            Some VDB conversion functions (e.g. Compute Vertex Normals)\n            work with polygons only."], "extent": [2372, 2552]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Point Attribs to Prims"], "extent": [2552, 2584], "body": [{"type": "para", "indent": 12, "text": ["These attributes will be transferred to each VDB primitive (chunk)\n            as primitive attributes."], "extent": [2584, 2705]}], "container": true}, {"type": "dt", "indent": 8, "text": ["VDB Conversion Options"], "extent": [2705, 2737], "body": [{"type": "para", "indent": 12, "text": ["See ", {"scheme": "Node", "value": "/nodes/sop/convertvdb", "type": "link", "text": ["Convert VDB SOP documentation"], "fullpath": "/nodes/sop/convertvdb.html"}, " for details."], "extent": [2737, 2832]}], "container": true}], "container": true}], "container": true, "role": "item"}], "container": true, "role": "item_group"}], "text": "Parameters"}, {"level": 1, "id": "examples", "container": true, "type": "examples_section", "indent": 0, "text": ["Examples"], "role": "section", "extent": [2832, 2851], "body": [{"type": "para", "indent": 0, "text": ["(some images to come)"], "extent": [2851, 2875]}]}, {"level": 1, "id": "related", "container": true, "type": "related_section", "indent": 0, "role": "section", "extent": [2875, 2884], "body": [{"type": "bullet_group", "body": [{"blevel": 6, "type": "bullet", "indent": 4, "text": [{"scheme": "Node", "value": "/nodes/sop/pointsfromvolume", "type": "link", "text": "", "fullpath": "/nodes/sop/pointsfromvolume.html"}], "extent": [2884, 2918]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": [{"scheme": "Node", "value": "/nodes/sop/voronoifracture", "type": "link", "text": "", "fullpath": "/nodes/sop/voronoifracture.html"}], "extent": [2918, 2951]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": [{"scheme": "Node", "value": "/nodes/sop/qLib::noise_ql::1", "type": "link", "text": ["Noise qL SOP"], "exists": true}], "extent": [2951, 2999]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": ["\u2026"], "extent": [2999, 3010]}], "container": true}], "text": "Related"}, {"level": 1, "id": "todo", "container": true, "type": "todo_section", "indent": 0, "text": ["To Do"], "role": "section", "extent": [3010, 3022], "body": [{"type": "bullet_group", "body": [{"blevel": 6, "type": "bullet", "indent": 4, "text": ["Finish initial release version"], "extent": [3022, 3059]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": ["VDB inputs: there should be bbox-checkings in the double loop to avoid looping over\n      volume areas that won\u2019t intersect at all (Houdini bugs prevent an easy straightforward\n      solution atm)"], "extent": [3059, 3263]}], "container": true}]}, {"level": 1, "id": "relnotes", "container": true, "type": "relnotes_section", "indent": 0, "text": ["Release Notes"], "role": "section", "extent": [3263, 3287], "body": [{"type": "para", "indent": 0, "text": [{"type": "em", "text": ["interface version 1"]}], "extent": [3287, 3311]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 0, "text": ["2020-11-14"], "extent": [3311, 3323], "body": [{"type": "bullet_group", "body": [{"blevel": 6, "type": "bullet", "indent": 4, "text": ["OCD alert: removed color from output knob (", {"scheme": null, "value": "https://github.com/qLab/qLib/issues/1168", "type": "link", "text": ["#1168"], "exists": true}, ")"], "extent": [3323, 3423]}], "container": true}], "container": true}, {"type": "dt", "indent": 0, "text": ["2017-09-25"], "extent": [3423, 3435], "body": [{"type": "bullet_group", "body": [{"blevel": 6, "type": "bullet", "indent": 4, "text": ["It can now accept VDBs as input geometry (work in progress)\n      TODO: should have a 3rd input for the ", {"type": "em", "text": ["original"]}, " input geo (pre-vdb)"], "extent": [3435, 3577]}], "container": true}], "container": true}, {"type": "dt", "indent": 0, "text": ["2017-09-25"], "extent": [3577, 3589], "body": [{"type": "bullet_group", "body": [{"blevel": 6, "type": "bullet", "indent": 4, "text": ["Added VDB geometry type option as output (working towards being able to\n      both input and output VDBs, to allow chaining up for nodes for multiple\n      fracturing, #647)"], "extent": [3589, 3770]}], "container": true}], "container": true}, {"type": "dt", "indent": 0, "text": ["2017-05-30"], "extent": [3770, 3782], "body": [{"type": "bullet_group", "body": [{"blevel": 6, "type": "bullet", "indent": 4, "text": ["Fixed weird inaccuracy problem with inside/outside groups"], "extent": [3782, 3847]}], "container": true}], "container": true}, {"type": "dt", "indent": 0, "text": ["2017-05-30"], "extent": [3847, 3859], "body": [{"type": "para", "indent": 4, "text": ["Enhancements ", {"scheme": null, "value": "https://github.com/qLab/qLib/issues/581", "type": "link", "text": ["#581"], "exists": true}], "extent": [3859, 3923]}, {"type": "bullet_group", "body": [{"blevel": 6, "type": "bullet", "indent": 4, "text": ["Published a bunch of useful Convert VDB functionality (groups, attribute transfer, etc)"], "extent": [3923, 4017]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": ["Support for transferring attributes from voronoi points to resulting chunks"], "extent": [4017, 4100]}], "container": true}], "container": true}, {"type": "dt", "indent": 0, "text": ["2016-08-27"], "extent": [4100, 4112], "body": [{"type": "para", "indent": 4, "text": ["Unique name for inner foreach loop ", {"scheme": null, "value": "https://github.com/qLab/qLib/issues/420", "type": "link", "text": ["#420"], "exists": true}], "extent": [4112, 4199]}], "container": true}, {"type": "dt", "indent": 0, "text": ["2016-05-17"], "extent": [4199, 4211], "body": [{"type": "para", "indent": 4, "text": ["Minor cosmetics and some help update."], "extent": [4211, 4254]}], "container": true}, {"type": "dt", "indent": 0, "text": ["2016-02-26"], "extent": [4254, 4266], "body": [{"type": "para", "indent": 4, "text": ["First version (work-in-progress)."], "extent": [4266, 4304]}], "container": true}], "container": true}]}], "title": ["Voronoi VDB Fracture qL"], "summary": ["Performs a combined Voronoi/VDB fracture."]}