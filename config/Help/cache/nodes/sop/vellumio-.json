{"type": "root", "attrs": {"type": "node", "context": "sop", "internal": "vellumio", "icon": "SOP/vellumio", "since": "17.0", "version": "", "namespace": null}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["Vellum I/O"], "extent": [89, 104]}, {"type": "summary", "indent": 0, "text": ["Packs Vellum simulations, saves them to disk, and loads them back again."], "extent": [104, 185]}, {"type": "para", "indent": 0, "text": ["The Vellum I/O SOP is designed to streamline the common operation\nof packing a Vellum stream, saving it to disk, and giving an option\nto use the saved sequence rather than the live sequence."], "extent": [185, 377]}, {"type": "para", "indent": 0, "text": ["The third input wires directly to the third output and is not cached to disk."], "extent": [377, 456]}, {"level": 1, "id": "parameters", "container": true, "type": "parameters_section", "indent": 0, "role": "section", "extent": [456, 468], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Storage Type"], "extent": [468, 483], "body": [{"type": "para", "indent": 4, "text": ["Vellum simulations consist of both the geometry being simulated,\n    but also the set of constraints applied to the geometry.  In order\n    to restart a simulation the constraints are required, but it is\n    a lot less storage to only store the raw geometry."], "extent": [501, 765]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Geometry Only"], "extent": [765, 784], "body": [{"type": "para", "indent": 8, "text": ["Store an unpacked sequence of geometry which is just the Vellum\n        geometry.  In this mode, the second output will always be empty."], "extent": [784, 930]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Packed Geometry and Constraints"], "extent": [930, 967], "body": [{"type": "para", "indent": 8, "text": ["Pack the incoming geometry and constraints wires into two packed\n        primitives.  This pair of packed primitives is then saved as a single\n        sequence of geometry, providing access to the potentially animated\n        constraints.  The constraints allow the simulation to be restarted and\n        allow the visualization of the state of the constraints when loading a\n        cached simulation."], "extent": [967, 1379]}, {"type": "para", "indent": 8, "text": ["In this mode, the first output and second output will be the\n        unpacked geometry and constraints respectively."], "extent": [1379, 1505]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "storage"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Load from Disk     "], "extent": [1505, 1526], "body": [{"type": "para", "indent": 4, "text": ["Switches between importing fields from DOPs and loading the fields from the geometry file."], "extent": [1548, 1644]}, {"type": "note_group", "body": [{"type": "note", "indent": 4, "role": "item", "extent": [1644, 1654], "body": [{"type": "para", "indent": 8, "text": ["If you start a render, it will always use the Import option, ignoring this parameter."], "extent": [1654, 1749]}], "container": true}], "container": true, "role": "item_group"}], "container": true, "attrs": {"id": "loadfromdisk"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["File Mode"], "extent": [1749, 1760], "body": [{"type": "para", "indent": 4, "text": ["How this node reads/writes the geometry to/from the disk file."], "extent": [1760, 1828]}, {"type": "para", "indent": 4, "text": ["This parameter is only enabled when ", {"type": "ui", "text": ["Load From Disk"]}, " is disabled."], "extent": [1828, 1901]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Automatic"], "extent": [1901, 1916], "body": [{"type": "para", "indent": 8, "text": ["Writes the file if it doesn\u2019t exist, reads it if it does\n        exist."], "extent": [1916, 1997]}, {"type": "para", "indent": 8, "text": ["This is useful for caching, where the node will\n        write the cache to disk the first time it cooks, and\n        use the cache file from then on."], "extent": [1997, 2156]}, {"type": "para", "indent": 8, "text": ["To force a refresh of the cache, manually delete the file\n        on disk."], "extent": [2156, 2240]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Read Files"], "extent": [2240, 2256], "body": [{"type": "para", "indent": 8, "text": ["Reads the geometry from the file. If the node\u2019s input\n        is connected, it\u2019s ignored."], "extent": [2256, 2355]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Write Files"], "extent": [2355, 2372], "body": [{"type": "para", "indent": 8, "text": ["Writes the input geometry to disk."], "extent": [2372, 2416]}], "container": true}, {"type": "dt", "indent": 4, "text": ["No Operation"], "extent": [2416, 2434], "body": [{"type": "para", "indent": 8, "text": ["No file access will occur. Pass through the input geometry\n        to the output, like a ", {"scheme": "Node", "value": "/nodes/sop/null", "type": "link", "text": ["Null surface node"], "fullpath": "/nodes/sop/null.html"}, "."], "extent": [2434, 2567]}], "container": true}], "container": true}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Geometry File"], "extent": [2567, 2582], "body": [{"type": "para", "indent": 4, "text": ["Where to load the fields from when in Load from Disk mode. This also controls where the ", {"scheme": "Node", "value": "/nodes/out/geometry", "type": "link", "text": ["Geometry ROP"], "fullpath": "/nodes/out/geometry.html"}, " will save the fields."], "extent": [2597, 2745]}], "container": true, "attrs": {"id": "file"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Save to File"], "extent": [2745, 2759], "body": [{"type": "para", "indent": 4, "text": ["See the ", {"scheme": "Node", "value": "/nodes/sop/filecache", "type": "link", "text": ["File Cache SOP"], "fullpath": "/nodes/sop/filecache.html"}, " help for these parameters."], "extent": [2759, 2835]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Save Filter"], "extent": [2835, 2848], "body": [{"type": "para", "indent": 4, "text": ["See the ", {"scheme": "Node", "value": "/nodes/sop/filecache", "type": "link", "text": ["File Cache SOP"], "fullpath": "/nodes/sop/filecache.html"}, " help for these parameters."], "extent": [2848, 2924]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Load From File"], "extent": [2924, 2940], "body": [{"type": "para", "indent": 4, "text": ["See the ", {"scheme": "Node", "value": "/nodes/sop/filecache", "type": "link", "text": ["File Cache SOP"], "fullpath": "/nodes/sop/filecache.html"}, " help for these parameters."], "extent": [2940, 3016]}], "container": true, "role": "item"}], "container": true, "role": "item_group"}], "text": "Parameters"}, {"level": 1, "id": "locals", "container": true, "type": "locals_section", "indent": 0, "role": "section", "extent": [3016, 3024], "body": [], "text": "Locals"}, {"level": 1, "id": "related", "container": true, "type": "related_section", "indent": 0, "role": "section", "extent": [3024, 3035], "body": [{"type": "bullet_group", "body": [{"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/sop/file", "type": "link", "text": "", "fullpath": "/nodes/sop/file.html"}], "extent": [3035, 3053]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/sop/filecache", "type": "link", "text": "", "fullpath": "/nodes/sop/filecache.html"}], "extent": [3053, 3076]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/sop/filemerge", "type": "link", "text": "", "fullpath": "/nodes/sop/filemerge.html"}], "extent": [3076, 3099]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/sop/dopio", "type": "link", "text": "", "fullpath": "/nodes/sop/dopio.html"}], "extent": [3099, 3119]}], "container": true}], "text": "Related"}], "title": ["Vellum I/O"], "summary": ["Packs Vellum simulations, saves them to disk, and loads them back again."]}