{"type": "root", "attrs": {"icon": "CHOP/transformchain", "context": "sop", "type": "node", "internal": "curve_frame_ql", "version": "1", "namespace": "qLib"}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["Curve Frame qL"], "extent": [54, 73]}, {"type": "para", "indent": 0, "text": [{"type": "strong", "text": ["interface version 1"]}], "extent": [73, 97]}, {"type": "summary", "indent": 0, "text": ["Generate ", {"type": "strong", "text": ["non-flipping"]}, " tangent/normal/up vectors for all points on (polygonal) curves."], "extent": [97, 193]}, {"type": "para", "indent": 0, "text": ["This SOP generates reference frames (a set of three vectors that defines a local coordinate system)\nfor all curve points."], "extent": [193, 316]}, {"type": "para", "indent": 0, "text": [{"scheme": "Image", "value": "/nodes/sop/qLib--curve_frame_ql-1/curve_frame_ql_sop_main.png", "type": "img", "text": ""}], "extent": [316, 360]}, {"type": "bullet_group", "body": [{"blevel": 2, "type": "bullet", "indent": 0, "text": [{"type": "em", "text": ["An example curve, with reference frame vectors generated (and displayed as guide geometry)."]}], "extent": [360, 458]}], "container": true}, {"type": "para", "indent": 0, "text": ["The algorithm generates each reference frame incrementally from the previous one to avoid flipping.\nThis can be very useful where curves with 'on-curve orientation' information is needed\n(such as motion paths or hair curves)."], "extent": [458, 685]}, {"type": "para", "indent": 0, "text": ["The method is based on the paper ", {"type": "q", "text": ["Calculation of Reference Frames along a Space Curve"]}, " by Jules Bloomenthal\n(Graphics Gems, vol. 1)."], "extent": [685, 820]}, {"type": "tip_group", "body": [{"type": "tip", "indent": 0, "role": "item", "extent": [820, 825], "body": [{"type": "para", "indent": 4, "text": ["Although there won\u2019t be sudden ", {"type": "q", "text": ["flips"]}, " in vector directions along the curve,\n    the algorithm can be sensitive about the initial up vector direction, especially\n    if the curve is arbitrarily deformed."], "extent": [825, 1034]}, {"type": "para", "indent": 4, "text": ["To avoid possible flipping of vectors on the ", {"type": "em", "text": ["entire curve"]}, ", generate an up vector\n    on the first curve point that has no sudden changes during animation, and use the\n    ", {"type": "q", "text": [{"type": "strong", "text": ["Up Vector from First Curve Point"]}]}, " option for ", {"type": "em", "text": ["Up Vector Mode"]}, "."], "extent": [1034, 1278]}, {"type": "para", "indent": 4, "text": ["(This only applies for animated/deformed curves. It also doesn\u2019t matter in case\n    only the tangent vectors are used.)"], "extent": [1278, 1403]}], "container": true}], "container": true, "role": "item_group"}, {"level": 1, "id": "Parameters", "container": true, "type": "Parameters_section", "indent": 0, "role": "section", "extent": [1403, 1415], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Mode"], "extent": [1415, 1425], "body": [{"type": "para", "indent": 8, "text": ["Method of generating the vectors for the input curve(s)."], "extent": [1425, 1491]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 8, "text": ["Use UV coordinates"], "extent": [1491, 1519], "body": [{"type": "para", "indent": 12, "text": ["The algorithm will derive on-curve 3d points based on curve parametrization (i.e. UV coordinates).\n            Valid UV texture mapping should be present on all curves to be processed."], "extent": [1519, 1717]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Assume linear curves"], "extent": [1717, 1747], "body": [{"type": "para", "indent": 12, "text": ["The algorithm will assume curve(s) with points that lie on the curve, and evenly distributed.\n            (Only linear curves can match both criteria.)"], "extent": [1747, 1912]}, {"type": "para", "indent": 12, "text": ["This mode tends to give better results. Its preferred inputs are ", {"scheme": "Node", "value": "/nodes/sop/resample", "type": "link", "text": ["resampled curves"], "fullpath": "/nodes/sop/resample.html"}, "."], "extent": [1912, 2028]}], "container": true}], "container": true}], "container": true}, {"type": "dt", "indent": 4, "text": ["UV Attribute"], "extent": [2028, 2046], "body": [{"type": "para", "indent": 8, "text": ["A per-point UV attribute to build the reference frames from (only the U parameter is used).\n        This attribute can be generated with an ", {"scheme": "Node", "value": "/nodes/sop/texture", "type": "link", "text": "", "fullpath": "/nodes/sop/texture.html"}, " SOP."], "extent": [2046, 2219]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Up Vector Mode"], "extent": [2219, 2239], "body": [{"type": "para", "indent": 8, "text": ["The mode for determining the first up vector on each curve. It can either be a constant,\n        or the up vector value of the first vertex can be used (if present)."], "extent": [2239, 2414]}, {"type": "para", "indent": 8, "text": ["Make sure you read the TIP above."], "extent": [2414, 2457]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Up Vector"], "extent": [2457, 2472], "body": [{"type": "para", "indent": 8, "text": ["Vector value for the 'Constant' up vector mode."], "extent": [2472, 2529]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Outputs (Reference Frame)"], "extent": [2529, 2560], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 8, "text": ["Tangent"], "extent": [2560, 2577], "body": [{"type": "para", "indent": 12, "text": ["Name of the output tangent attribute (per-point vector)."], "extent": [2577, 2646]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Normal"], "extent": [2646, 2662], "body": [{"type": "para", "indent": 12, "text": ["Name of the output normal (bi-tangent) attribute (per-point vector)."], "extent": [2662, 2743]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Up"], "extent": [2743, 2755], "body": [{"type": "para", "indent": 12, "text": ["Name of the output up vector attribute (per-point vector)."], "extent": [2755, 2827]}], "container": true}], "container": true}], "container": true}, {"type": "dt", "indent": 4, "text": ["Outputs (Other)"], "extent": [2827, 2848], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 8, "text": ["Segment Length"], "extent": [2848, 2872], "body": [{"type": "para", "indent": 12, "text": ["The length of the current curve ", {"type": "q", "text": ["segment"]}, "\n            (the distance between the current and the previous point).\n            It is ", {"type": "code", "text": ["0"]}, " for the first point in each curve."], "extent": [2872, 3054]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Curve Length"], "extent": [3054, 3076], "body": [{"type": "para", "indent": 12, "text": ["The length of the curve, from the beginning up to the current point\n            (as a per-point float attribute)."], "extent": [3076, 3205]}], "container": true}], "container": true}], "container": true}, {"type": "dt", "indent": 4, "text": ["Show Guide"], "extent": [3205, 3221], "body": [{"type": "para", "indent": 8, "text": ["Display the generated reference frame vectors as guide geometry."], "extent": [3221, 3297]}], "container": true}], "container": true}], "text": "Parameters"}, {"level": 1, "id": "related", "container": true, "type": "related_section", "indent": 0, "role": "section", "extent": [3297, 3306], "body": [{"type": "bullet_group", "body": [{"blevel": 6, "type": "bullet", "indent": 4, "text": [{"scheme": "Node", "value": "/nodes/sop/texture", "type": "link", "text": "", "fullpath": "/nodes/sop/texture.html"}], "extent": [3306, 3331]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": [{"scheme": "Node", "value": "/nodes/sop/resample", "type": "link", "text": "", "fullpath": "/nodes/sop/resample.html"}], "extent": [3331, 3357]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": [{"scheme": "Node", "value": "/nodes/sop/qLib::deformbysurface_ql::1", "type": "link", "text": ["Deform by Surface qL"], "exists": true}], "extent": [3357, 3425]}], "container": true}], "text": "Related"}, {"level": 1, "id": "relnotes", "container": true, "type": "relnotes_section", "indent": 0, "text": ["Release Notes"], "role": "section", "extent": [3425, 3449], "body": [{"type": "para", "indent": 0, "text": [{"type": "em", "text": ["interface version 1"]}, " \u2014"], "extent": [3449, 3477]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 0, "text": ["2020-08-01"], "extent": [3477, 3489], "body": [{"type": "bullet_group", "body": [{"blevel": 6, "type": "bullet", "indent": 4, "text": ["Added attribute visualizer button(s) (", {"scheme": null, "value": "https://github.com/qLab/qLib/issues/1089", "type": "link", "text": ["#1089"], "exists": true}, ")"], "extent": [3489, 3584]}], "container": true}], "container": true}, {"type": "dt", "indent": 0, "text": ["2019-05-24"], "extent": [3584, 3596], "body": [{"type": "bullet_group", "body": [{"blevel": 6, "type": "bullet", "indent": 4, "text": [{"type": "q", "text": ["up vector from 1st curve point"]}, " up vector attribute has a separate attribute field (", {"scheme": null, "value": "https://github.com/qLab/qLib/issues/617", "type": "link", "text": ["#617"], "exists": true}, ")"], "extent": [3596, 3736]}], "container": true}], "container": true}, {"type": "dt", "indent": 0, "text": ["2017-02-12"], "extent": [3736, 3748], "body": [{"type": "bullet_group", "body": [{"blevel": 6, "type": "bullet", "indent": 4, "text": ["Main code rewritten in VEX (quick tests showed ~70\u00d7 speedup)."], "extent": [3748, 3816]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": ["Works on multiple curves"], "extent": [3816, 3847]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": [{"type": "em", "text": ["Group"]}, " parameter now works"], "extent": [3847, 3881]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": ["Fixed ", {"type": "em", "text": ["Segment Length"]}, " and ", {"type": "em", "text": ["Curve Length"]}, " attribute popup menus\n      to have reasonable attribute names."], "extent": [3881, 3994]}], "container": true}], "container": true}, {"type": "dt", "indent": 0, "text": ["2014-08-29"], "extent": [3994, 4006], "body": [{"type": "para", "indent": 4, "text": ["First version.\n    Replaces ", {"scheme": "Node", "value": "/nodes/sop/qLib::curverefs_ql::1", "type": "link", "text": "", "exists": true}, "."], "extent": [4006, 4073]}], "container": true}], "container": true}]}], "title": ["Curve Frame qL"], "summary": ["Generate ", {"type": "strong", "text": ["non-flipping"]}, " tangent/normal/up vectors for all points on (polygonal) curves."]}