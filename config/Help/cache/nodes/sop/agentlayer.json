{"type": "root", "attrs": {"type": "node", "context": "sop", "internal": "agentlayer", "icon": "CROWDS/agentlayer", "version": "2.0", "since": "19.0", "verb_since": "19.0", "namespace": null}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["Agent Layer"], "extent": [119, 135]}, {"type": "summary", "indent": 0, "text": ["Adds new shapes and layers to an agent primitive."], "extent": [135, 193]}, {"type": "para", "indent": 0, "text": ["This node adds new shapes and layers to the ", {"scheme": null, "value": "/crowds/agents#agentdefinition", "type": "link", "text": ["agent definition"], "fullpath": "/crowds/agents.html#agentdefinition", "fragment": "#agentdefinition"}, ".\nA layer contains one or more ", {"type": "em", "text": ["shape bindings"]}, ", which reference a shape from the agent\u2019s ", {"type": "em", "text": ["shape library"]}, " and specifies the deformer that is used (or the joint to attach a static shape to).\nAfter populating the crowd, multiple layers can be assigned to each agent to ", {"scheme": null, "value": "/crowds/diversity#layers", "type": "link", "text": ["create geometry variations"], "fullpath": "/crowds/diversity.html#layers", "fragment": "#layers"}, "."], "extent": [193, 609]}, {"level": 1, "id": "parameters", "container": true, "type": "parameters_section", "indent": 0, "role": "section", "extent": [609, 621], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Group"], "extent": [621, 629], "body": [{"type": "para", "indent": 4, "text": ["The agents to be modified."], "extent": [629, 661]}], "container": true, "role": "item"}], "container": true, "role": "item_group"}, {"level": 3, "type": "sep", "indent": 0, "text": [" Shapes "], "extent": [661, 676], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 4, "text": ["Shape Name Attribute"], "extent": [676, 703], "body": [{"type": "para", "indent": 8, "text": ["When turned on, adds new shapes to the shape library from the second input\u2019s geometry. The specified primitive string attribute is used to identify the primitives that belong to each shape in the second input\u2019s geometry. For every unique value that is specified, a shape is added to the shape library using the primitives that have that attribute value. "], "extent": [726, 1090]}, {"type": "para", "indent": 8, "text": ["If the shape is added to a layer, and the ", {"type": "code", "text": ["boneCapture"]}, " point attribute is present, the shape binding uses the ", {"type": "code", "text": ["linearskinning"]}, " deformer by default.\n        If the ", {"type": "code", "text": ["deformSkinMethod"]}, " attribute is also present (as used by the ", {"scheme": "Node", "value": "/nodes/sop/kinefx--jointdeform", "type": "link", "text": ["Joint Deform SOP"], "fullpath": "/nodes/sop/kinefx--jointdeform.html"}, " when ", {"type": "ui", "text": ["Skinning Method"]}, " is ", {"type": "ui", "text": ["From Input Geometry"]}, "), the shape binding uses the specified skinning method."], "extent": [1090, 1480]}, {"type": "para", "indent": 8, "text": ["If the shape geometry consists of a single packed primitive, and its point is weighted to a single joint (i.e. describing a rigid deformation), this is translated into a static shape binding."], "extent": [1480, 1681]}, {"type": "para", "indent": 8, "text": ["The shape geometry may also contain blend shapes in the format of the Rest Geometry input for the ", {"scheme": "Node", "value": "/nodes/sop/kinefx--characterblendshapes", "type": "link", "text": ["Character Blend Shapes SOP"], "fullpath": "/nodes/sop/kinefx--characterblendshapes.html"}, "."], "extent": [1681, 1856]}], "container": true, "attrs": {"id": "addshapes"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Keep External References"], "extent": [1856, 1886], "body": [{"type": "para", "indent": 8, "text": ["When new shapes are added to the shape library, a copy is first made so that the modifications do not affect other agents that reference the original shape library (such as those in the input SOP\u2019s geometry).\n        When this option is turned on, and the original shape library references a file on disk, the new shape library is marked as ", {"type": "em", "text": ["including"]}, " the original shape library.\n        In this situation, when the agent is saved to a geometry file, the path to the original shape library is saved out along with any new shapes that were not included from the original library.\n        Otherwise, the entire shape library is saved to the geometry file, and the original shape library file is not referenced."], "extent": [1915, 2634]}], "container": true, "attrs": {"id": "keepexternalref"}, "role": "item"}], "container": true, "role": "item_group"}, {"level": 4, "type": "sep", "indent": 4, "text": [" Shape Bindings "], "extent": [2634, 2663], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 8, "text": ["Bounds Scale"], "extent": [2663, 2686], "body": [{"type": "para", "indent": 12, "text": ["A multiplier for the size of the shape\u2019s bounding box when computing the layer\u2019s bounds.\n            See ", {"scheme": null, "value": "/crowds/agents#boundingbox", "type": "link", "text": ["Agent Primitives"], "fullpath": "/crowds/agents.html#boundingbox", "fragment": "#boundingbox"}, " for more information on how an agent\u2019s bounding box is computed."], "extent": [2715, 2944]}], "container": true, "attrs": {"id": "boundsscale"}, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Bounds Scale Mode"], "extent": [2944, 2971], "body": [{"type": "para", "indent": 12, "text": ["This drop-down menu specifies how the bounds scale is determined for each shape binding."], "extent": [3006, 3108]}], "container": true, "attrs": {"id": "shapedeformermode"}, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Bounds Scale Attribute"], "extent": [3108, 3140], "body": [{"type": "para", "indent": 12, "text": ["When ", {"type": "ui", "text": ["Bounds Scale Mode"]}, " is set to ", {"type": "ui", "text": ["Set from Attribute"]}, " or ", {"type": "ui", "text": ["Scale by Attribute"]}, ", this overrides or multiplies the ", {"type": "ui", "text": ["Bounds Scale"]}, " with the value of a primitive attribute on the shape geometry.\n            This can be used to specify a per-shape bounds scale when importing multiple shapes."], "extent": [3175, 3485]}], "container": true, "attrs": {"id": "boundsscaleattrib"}, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Shape Deformer"], "extent": [3485, 3509], "body": [{"type": "para", "indent": 12, "text": ["Overrides the binding\u2019s shape deformer using this ", {"scheme": null, "value": "/crowds/agents#deformer", "type": "link", "text": ["deformer name"], "fullpath": "/crowds/agents.html#deformer", "fragment": "#deformer"}, "."], "extent": [3509, 3613]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Shape Deformer Mode"], "extent": [3613, 3642], "body": [{"type": "para", "indent": 12, "text": ["This drop-down menu specifies how the shape deformer is determined for each shape binding."], "extent": [3677, 3781]}], "container": true, "attrs": {"id": "shapedeformermode"}, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Shape Deformer Attribute"], "extent": [3781, 3815], "body": [{"type": "para", "indent": 12, "text": ["When ", {"type": "ui", "text": ["Shape Deformer Mode"]}, " is set to ", {"type": "ui", "text": ["Set from Attribute"]}, ", this overrides the binding\u2019s shape deformer using the ", {"scheme": null, "value": "/crowds/agents#deformer", "type": "link", "text": ["deformer name"], "fullpath": "/crowds/agents.html#deformer", "fragment": "#deformer"}, " specified by this string primitive attribute on the shape geometry."], "extent": [3852, 4090]}], "container": true, "attrs": {"id": "shapedeformerattrib"}, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Transform Name"], "extent": [4090, 4114], "body": [{"type": "para", "indent": 12, "text": ["The transform in the rig to attach the shape to.\n            This is typically only used for binding rigid shapes."], "extent": [4114, 4242]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Transform Name Mode"], "extent": [4242, 4271], "body": [{"type": "para", "indent": 12, "text": ["This drop-down menu specifies how the transform name is determined for each shape binding."], "extent": [4306, 4410]}], "container": true, "attrs": {"id": "transformnamemode"}, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Transform Name Attribute"], "extent": [4410, 4444], "body": [{"type": "para", "indent": 12, "text": ["When ", {"type": "ui", "text": ["Transform Name Mode"]}, " is set to ", {"type": "ui", "text": ["Set from Attribute"]}, ", this overrides the transform in the agent\u2019s rig that the shape will be attached to, using the value of a primitive attribute on the shape geometry."], "extent": [4481, 4705]}], "container": true, "attrs": {"id": "transformnameattrib"}, "role": "item"}], "container": true, "role": "item_group"}], "container": true}], "container": true}, {"level": 3, "type": "sep", "indent": 0, "text": [" Layers "], "extent": [4705, 4720], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 4, "text": ["Set Current Layers"], "extent": [4720, 4745], "body": [{"type": "para", "indent": 8, "text": ["When turned on, specifies the new layers that are displayed. This is done by modifying the agents' ", {"scheme": null, "value": "/crowds/agents#currentlayers", "type": "link", "text": ["current layers"], "fullpath": "/crowds/agents.html#currentlayers", "fragment": "#currentlayers"}, "."], "extent": [4745, 4900]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Set Collision Layers"], "extent": [4900, 4926], "body": [{"type": "para", "indent": 8, "text": ["When turned on, specifies the new layers that are assigned to the agents' ", {"scheme": null, "value": "/crowds/agents#collisionlayers", "type": "link", "text": ["collision layers"], "fullpath": "/crowds/agents.html#collisionlayers", "fragment": "#collisionlayers"}, "."], "extent": [4926, 5060]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Layer Name Attribute"], "extent": [5060, 5086], "body": [{"type": "para", "indent": 8, "text": ["When ", {"type": "ui", "text": ["Shape Name Attribute"]}, " is turned on, this primitive string attribute (on the second input\u2019s geometry) is used to specify the layer that the shape is added to.\n        This can be useful for procedurally partitioning the new shapes into layers.\n        For example, if the ", {"type": "ui", "text": ["Layer Name Attribute"]}, " is the same as the ", {"type": "ui", "text": ["Shape Name Attribute"]}, ", a separate layer will be created for each individual shape."], "extent": [5086, 5504]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Number of Layers"], "extent": [5504, 5526], "body": [{"type": "para", "indent": 8, "text": ["The number of layers to create.\n        When ", {"type": "ui", "text": ["Layer Name Attribute"]}, " is turned on, these layers are merged with the layers specified by the ", {"type": "ui", "text": ["Layer Name Attribute"]}, "."], "extent": [5526, 5702]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Layer Name"], "extent": [5702, 5718], "body": [{"type": "para", "indent": 8, "text": ["When turned on, creates a new layer with the specified name."], "extent": [5718, 5788]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Shapes"], "extent": [5788, 5800], "body": [{"type": "para", "indent": 8, "text": ["When ", {"type": "ui", "text": ["Shape Name Attribute"]}, " is turned on, this specifies the new shapes that are added to this layer.\n        The pattern follows the same syntax as the ", {"scheme": "Vex", "value": "/vex/functions/match", "type": "link", "text": ["match"], "fallback_text": "match()", "fullpath": "/vex/functions/match.html"}, " VEX function."], "extent": [5800, 5996]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Solo Layer"], "extent": [5996, 6012], "body": [{"type": "para", "indent": 8, "text": ["When turned on, only this layer is displayed (overriding the ", {"type": "ui", "text": ["Set Current Layers"]}, " parameter).\n        This can be useful for quickly visualizing the shapes in a specific layer."], "extent": [6012, 6200]}], "container": true, "role": "item"}], "container": true, "role": "item_group"}, {"level": 3, "type": "sep", "indent": 4, "text": [" Use Existing Shapes "], "extent": [6200, 6232], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 8, "text": ["Source Layer"], "extent": [6232, 6255], "body": [{"type": "para", "indent": 12, "text": ["When turned on, specifies the name of an existing layer to copy shape bindings from."], "extent": [6255, 6353]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Filter by Shape"], "extent": [6353, 6378], "body": [{"type": "para", "indent": 12, "text": ["When ", {"type": "ui", "text": ["Source Layer"]}, " is turned on, this specifies a pattern of shape names.\n            Shape bindings that use these shapes (and also match the ", {"type": "ui", "text": ["Source Layer Bindings"]}, " pattern) are copied from the ", {"type": "ui", "text": ["Source Layer"]}, ".\n            The pattern follows the same syntax as the ", {"scheme": "Vex", "value": "/vex/functions/match", "type": "link", "text": ["match"], "fallback_text": "match()", "fullpath": "/vex/functions/match.html"}, " VEX function."], "extent": [6378, 6697]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Filter by Transform"], "extent": [6697, 6726], "body": [{"type": "para", "indent": 12, "text": ["When ", {"type": "ui", "text": ["Source Layer"]}, " is turned on, this specifies a pattern of transform names.\n            Shape bindings that are attached to these transforms are copied from the ", {"type": "ui", "text": ["Source Layer"]}, ".\n            The pattern follows the same syntax as the ", {"scheme": "Vex", "value": "/vex/functions/match", "type": "link", "text": ["match"], "fallback_text": "match()", "fullpath": "/vex/functions/match.html"}, " VEX function."], "extent": [6726, 7010]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Shape Bindings"], "extent": [7010, 7034], "body": [{"type": "para", "indent": 12, "text": ["The number of shape bindings to create from existing shapes."], "extent": [7034, 7108]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Shape Name"], "extent": [7108, 7128], "body": [{"type": "para", "indent": 12, "text": ["When turned on, creates the shape binding with the specified shape in the agent\u2019s shape library."], "extent": [7128, 7238]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Shape Deformer"], "extent": [7238, 7262], "body": [{"type": "para", "indent": 12, "text": ["Overrides the binding\u2019s shape deformer using this ", {"scheme": null, "value": "/crowds/agents#deformer", "type": "link", "text": ["deformer name"], "fullpath": "/crowds/agents.html#deformer", "fragment": "#deformer"}, "."], "extent": [7262, 7366]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Bounds Scale"], "extent": [7366, 7388], "body": [{"type": "para", "indent": 12, "text": ["A multiplier for the size of the shape\u2019s bounding box when computing the layer\u2019s bounds. See ", {"scheme": null, "value": "/crowds/agents#boundingbox", "type": "link", "text": ["Agent Primitives"], "fullpath": "/crowds/agents.html#boundingbox", "fragment": "#boundingbox"}, " for more information on how an agent\u2019s bounding box is computed."], "extent": [7388, 7605]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Transform Name"], "extent": [7605, 7629], "body": [{"type": "para", "indent": 12, "text": ["The transform in the rig to attach the shape to. This is typically only used for binding rigid shapes."], "extent": [7629, 7745]}], "container": true, "role": "item"}], "container": true, "role": "item_group"}], "container": true}], "container": true}], "text": "Parameters"}, {"level": 1, "id": "inputs", "container": true, "type": "inputs_section", "indent": 0, "role": "section", "extent": [7745, 7753], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 0, "text": ["Agents"], "extent": [7753, 7762], "body": [{"type": "para", "indent": 4, "text": ["Agent primitives to be modified."], "extent": [7762, 7800]}], "container": true}, {"type": "dt", "indent": 0, "text": ["Shape Geometry"], "extent": [7800, 7816], "body": [{"type": "para", "indent": 4, "text": ["Optional input providing the shapes to be imported when ", {"type": "ui", "text": ["Shape Name Attribute"]}, " is turned on."], "extent": [7816, 7916]}], "container": true}, {"type": "dt", "indent": 0, "text": ["Capture Pose"], "extent": [7916, 7930], "body": [{"type": "para", "indent": 4, "text": ["Optional input providing the character\u2019s capture pose for skin deformation.\n    This overrides the capture data stored in the shape geometry\u2019s ", {"type": "code", "text": ["boneCapture"]}, " attribute."], "extent": [7930, 8103]}, {"type": "para", "indent": 4, "text": ["Each joint in the skeleton is represented by a point, where the ", {"type": "code", "text": ["P"]}, " and ", {"type": "code", "text": ["transform"]}, " (", {"type": "code", "text": ["matrix3"]}, ") attributes contain the joint\u2019s transform.\n    The point\u2019s ", {"type": "code", "text": ["name"]}, " attribute contains the joint\u2019s name, and is matched up with the capture paths in the shape geometry\u2019s ", {"type": "code", "text": ["boneCapture"]}, " attribute.\n    The skeleton\u2019s hierarchy is represented by two-point polygons between the points for each child joint and its parent."], "extent": [8103, 8518]}], "container": true}], "container": true}], "text": "Inputs"}, {"level": 1, "id": "outputs", "container": true, "type": "outputs_section", "indent": 0, "role": "section", "extent": [8518, 8527], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 0, "text": ["Agents"], "extent": [8527, 8536], "body": [{"type": "para", "indent": 4, "text": ["The modified agent primitives."], "extent": [8536, 8572]}], "container": true}], "container": true}], "text": "Outputs"}, {"level": 1, "id": "related", "container": true, "type": "related_section", "indent": 0, "role": "section", "extent": [8572, 8581], "body": [{"type": "bullet_group", "body": [{"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/sop/agent", "type": "link", "text": "", "fullpath": "/nodes/sop/agent.html"}], "extent": [8581, 8600]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/sop/agentclip", "type": "link", "text": "", "fullpath": "/nodes/sop/agentclip.html"}], "extent": [8600, 8623]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/sop/agentdefinitioncache", "type": "link", "text": "", "fullpath": "/nodes/sop/agentdefinitioncache.html"}], "extent": [8623, 8657]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/sop/crowdassignlayers", "type": "link", "text": "", "fullpath": "/nodes/sop/crowdassignlayers.html"}], "extent": [8657, 8688]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/sop/kinefx--agentfromrig", "type": "link", "text": "", "fullpath": "/nodes/sop/kinefx--agentfromrig.html"}], "extent": [8688, 8722]}], "container": true}], "text": "Related"}], "title": ["Agent Layer"], "summary": ["Adds new shapes and layers to an agent primitive."]}