{"type": "root", "attrs": {"type": "node", "context": "sop", "internal": "labs::merge_splines::1.0", "icon": "SOP/labs::merge_splines::1.0", "since": "19.5", "version": "1.0", "namespace": "labs"}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["Labs Merge Splines"], "extent": [124, 147]}, {"type": "summary", "indent": 0, "text": ["Merges disconnected Polylines together like the Polypath Sop, cutting them at intersections. \nBut with specified conditions, while preserving and merging attributes and groups."], "extent": [147, 332]}, {"type": "para", "indent": 0, "text": ["The Merge splines node is able to merge together intersecting polylines while maintaining attributes and curve direction.\nIt works similar to the Poly path SOP\u2019s base behaviour to cut and process polylines into segments. But it has 3 distinct functions the poly path lacks."], "extent": [332, 607]}, {"type": "para", "indent": 0, "text": [{"scheme": "Image", "value": "/images/merge_splines_splash.png", "type": "img", "text": ""}], "extent": [607, 649]}, {"type": "bullet_group", "body": [{"blevel": 2, "type": "bullet", "indent": 0, "text": ["1. You can specify how the geometry should be merged via groups and attributes."], "extent": [649, 731]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": ["2. It can propagate both primitive groups and attributes, as well as merge vertex attributes."], "extent": [731, 827]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": ["3. It has support for maintaining vertex order (curve direction), and can merge the vertex order of splines as if they were attributes."], "extent": [827, 966]}], "container": true}, {"type": "para", "indent": 0, "text": ["Can be very useful when re-combining splines with attributes that need to be maintained.\nCommon use cases range from road network curves and paths to combining grids for pathfinding."], "extent": [966, 1151]}, {"level": 1, "id": "parameters", "container": true, "type": "parameters_section", "indent": 0, "role": "section", "extent": [1151, 1163], "body": [{"level": 2, "id": null, "container": true, "type": "h", "indent": 4, "text": ["Merge Splines"], "extent": [1163, 1189], "body": [{"type": "para", "indent": 8, "text": [{"type": "strong", "text": ["Configure how and which subsection of curves provided to the tool are merged."]}], "extent": [1189, 1279]}]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 4, "text": ["Fuse / Snap Distance"], "extent": [1279, 1309], "body": [{"type": "para", "indent": 8, "text": ["Specify the snapping range of points to help connect disconnected polylines. Best to keep at reasonable levels, as over snapping can cause undesirable results.    "], "extent": [1335, 1508]}], "container": true, "attrs": {"id": "fuseDistance"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Fuse Targets"], "extent": [1508, 1526], "body": [{"type": "para", "indent": 8, "text": ["When enabled, only input spline ends with 1 neighbour point and optionally intersections with more than 2 neighbour points will be counted as fuse or merge targets. Spline points with only 2 neighbours will be ignored."], "extent": [1551, 1787]}], "container": true, "attrs": {"id": "fuseTargets"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Fuse Filter"], "extent": [1787, 1804], "body": [{"type": "para", "indent": 8, "text": ["Enables the options for a custom fuse filter, all points are fused by default when disabled.\n        If input primitive lines are disconnected, select by point group which splines should be merged by their points. \n        If points between polylines are already connected and ", {"type": "q", "text": ["Only Merge on Fuse Filter Selection"]}, " is enabled, only these points and their connected primitives will be merged, others will be left untouched.\n        Otherwise, all connected geometry will be merged. Uses standard group syntax, such as * to select all the points in the input geometry."], "extent": [1831, 2415]}], "container": true, "attrs": {"id": "preFuseFilter"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Only Merge on Fuse Filter Selection"], "extent": [2415, 2456], "body": [{"type": "para", "indent": 8, "text": ["When a Fuse Filter point group is provided, only merge polylines connected to the ", {"type": "q", "text": ["fuse filter"]}, " point selection, all other geometry is ignored. This is faster as only the affected geometry is re-calculated, while unaffected geometry is kept untouched. Useful when you need to merge curves into a much larger curve network without unnecessary overhead."], "extent": [2490, 2859]}], "container": true, "attrs": {"id": "limitMergeOperations"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Only Merge If Matching"], "extent": [2859, 2887], "body": [{"type": "para", "indent": 8, "text": ["Only merge curves that share one or multiple primitive attributes. Any differences in the specified attributes will prevent 2 polylines from being merged.    "], "extent": [2920, 3096]}], "container": true, "attrs": {"id": "onlyMergeIfMatching"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Attributes To Match"], "extent": [3096, 3121], "body": [{"type": "para", "indent": 8, "text": ["Specify the attribute names to match for merge. (Supported attribute types: Int, Float, String, Vector)."], "extent": [3151, 3265]}], "container": true, "attrs": {"id": "attributeToMatch"}, "role": "item"}], "container": true, "role": "item_group"}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 4, "text": ["Advanced Fuse Behaviour"], "extent": [3265, 3299], "body": [{"type": "para", "indent": 8, "text": [{"type": "strong", "text": ["Configures how points are snapped when they are fused together."]}], "extent": [3299, 3375]}]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 4, "text": ["Target Group"], "extent": [3375, 3393], "body": [{"type": "para", "indent": 8, "text": ["When enabled, this is the subset of points that will be snapped to points that are allowed to fuse. Otherwise, the fuse points are also the target group."], "extent": [3418, 3589]}], "container": true, "attrs": {"id": "targetgroup"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Radius Attrib"], "extent": [3589, 3608], "body": [{"type": "para", "indent": 8, "text": ["When enabled, the point attribute with this name is used to specify the radii of the points. Two points will be able to fuse together if the closest distance between their spheres with the corresponding radius is within the Snap Distance."], "extent": [3634, 3882]}], "container": true, "attrs": {"id": "radiusattrib"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Only Fuse when Primitive Attribute Matches"], "extent": [3882, 3930], "body": [{"type": "para", "indent": 8, "text": ["Only fuse points from curves that share a primitive attribute. Any differences in the specified attribute will prevent 2 polylines from being fused or snapped."], "extent": [3962, 4139]}], "container": true, "attrs": {"id": "onlyFuseIfMatching"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Attribute to Match"], "extent": [4139, 4167], "body": [{"type": "para", "indent": 8, "text": ["Specify an attribute name to match for fusing. (Supported attributes: Int, Float, String, Vector)    "], "extent": [4201, 4320]}], "container": true, "attrs": {"id": "attributeToMatchFuse"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Output Position"], "extent": [4320, 4341], "body": [{"type": "para", "indent": 8, "text": ["The method to use to combine values of Position Attribute when snapping points together. If a ", {"type": "q", "text": ["By Attribute"]}, " method is selected, use the specified point attribute to determine the snap position."], "extent": [4373, 4585]}], "container": true, "attrs": {"id": "positionsnapmethod"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Sort By Point Attrib"], "extent": [4585, 4611], "body": [{"type": "para", "indent": 8, "text": ["Specify a point attribute that will act as a weight to determine the points position to fuse to. (sorts by numerical or alphabetical order)."], "extent": [4644, 4811]}], "container": true, "attrs": {"id": "pointFusePointOrder"}, "role": "item"}], "container": true, "role": "item_group"}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 4, "text": ["Primitive Behavior on Merge"], "extent": [4811, 4850], "body": [{"type": "para", "indent": 8, "text": [{"type": "strong", "text": ["Configures how primitive attributes & vertex order are resolved on curves that are merged together."]}], "extent": [4850, 4978]}]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 4, "text": ["Prim Attrib Promotion"], "extent": [4978, 5005], "body": [{"type": "para", "indent": 8, "text": ["Specify how primitive attributes should be promoted upon merging 2 or more primitive polylines."], "extent": [5035, 5148]}, {"type": "bullet_group", "body": [{"blevel": 10, "type": "bullet", "indent": 8, "text": [{"type": "strong", "text": ["Maximum"]}, " -\n        Picks the largest match."], "extent": [5148, 5204]}, {"blevel": 10, "type": "bullet", "indent": 8, "text": [{"type": "strong", "text": ["Minimum"]}, " -\n        Picks the smallest match."], "extent": [5204, 5261]}, {"blevel": 10, "type": "bullet", "indent": 8, "text": [{"type": "strong", "text": ["Average"]}, " -\n        The mean, or the sum of all matches divided by the number of matches."], "extent": [5261, 5362]}, {"blevel": 10, "type": "bullet", "indent": 8, "text": [{"type": "strong", "text": ["Mode"]}, " -\n        The most common match. If there is more than one most common, it will be the minimum of the most common."], "extent": [5362, 5495]}, {"blevel": 10, "type": "bullet", "indent": 8, "text": [{"type": "strong", "text": ["Median"]}, " -\n        The middle of the matches. If there is an even number of elements, it is the higher of the two possible middles."], "extent": [5495, 5638]}, {"blevel": 10, "type": "bullet", "indent": 8, "text": [{"type": "strong", "text": ["Sum"]}, " -\n        All of the matches added together."], "extent": [5638, 5700]}, {"blevel": 10, "type": "bullet", "indent": 8, "text": [{"type": "strong", "text": ["Sum of Squares"]}, " -\n        All of the matches squared, and then added together."], "extent": [5700, 5791]}, {"blevel": 10, "type": "bullet", "indent": 8, "text": [{"type": "strong", "text": ["Root Mean Square"]}, " -\n        The square root of the average of the squares of all the matches."], "extent": [5791, 5897]}, {"blevel": 10, "type": "bullet", "indent": 8, "text": [{"type": "strong", "text": ["By Prim Number First Value"]}, " -\n        The first valid primitive number per merge operation is taken for its attributes. You can pre-sort the primitives before providing them to the asset."], "extent": [5897, 6097]}, {"blevel": 10, "type": "bullet", "indent": 8, "text": [{"type": "strong", "text": ["By Prim Number Last Value"]}, " -\n        The last valid primitive number per merge operation is taken for its attributes.  "], "extent": [6097, 6229]}, {"blevel": 10, "type": "bullet", "indent": 8, "text": [{"type": "strong", "text": ["Array of All"]}, " -\n        Provided the source attribute is a tuple attribute, a new array attribute is created. The array attribute is populated with all the values of the matches.    "], "extent": [6229, 6432]}, {"blevel": 10, "type": "bullet", "indent": 8, "text": [{"type": "strong", "text": ["By Attribute First Value"]}, " -\n        If a valid attribute name is specified, samples the attributes from the primitive with the lowest value. If multiple primitive share this lowest value, uses the first primitive number of this subset."], "extent": [6432, 6692]}, {"blevel": 10, "type": "bullet", "indent": 8, "text": [{"type": "strong", "text": ["By Attribute Last Value"]}, " -\n        If a valid attribute name is specified, samples the attributes from the primitive with the highest value. If multiple primitive share this highest value, uses the first primitive number of this subset."], "extent": [6692, 6949]}], "container": true}], "container": true, "attrs": {"id": "primAttribMethod"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Sort By"], "extent": [6949, 6962], "body": [{"type": "para", "indent": 8, "text": ["When using ", {"type": "q", "text": ["By Attribute"]}, " methods, all primitive attribute conflicts will be resolved by the order of this attribute value (numerical or alphabetical)."], "extent": [6986, 7155]}], "container": true, "attrs": {"id": "primattrib"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Vertex Order Direction"], "extent": [7155, 7183], "body": [{"type": "para", "indent": 8, "text": ["Control how the Vertex Order is promoted for each merged primitive. By default, copies the vertex order of the First/Last prim number or attribute. Alternatively, it can match the primitive order, or use a separate attribute to set orientation."], "extent": [7214, 7476]}, {"type": "bullet_group", "body": [{"blevel": 10, "type": "bullet", "indent": 8, "text": [{"type": "strong", "text": ["Match Prim Attrib Promotion"]}, " -\n        Uses the Prim Attrib Promotion method to choose which primitive to sample the vertex order from. Methods that influence this are ", {"type": "strong", "text": ["Prim Number Match"]}, " methods and the ", {"type": "strong", "text": ["By Attribute Match"]}, " methods."], "extent": [7476, 7730]}, {"blevel": 10, "type": "bullet", "indent": 8, "text": [{"type": "strong", "text": ["By Attribute First Value"]}, " -\n        If a valid attribute name is specified, samples the vertex order from the primitive with the lowest value. In case of matching values, picks the vertex order from the lowest primitive number."], "extent": [7730, 7970]}, {"blevel": 10, "type": "bullet", "indent": 8, "text": [{"type": "strong", "text": ["By Attribute Last Value"]}, " -\n        If a valid attribute name is specified, samples the vertex order from the primitive with the highest value. In case of matching values, picks the vertex order from the lowest primitive number."], "extent": [7970, 8218]}, {"blevel": 10, "type": "bullet", "indent": 8, "text": [{"type": "strong", "text": ["By Attribute First Value / Reverse"]}, " -\n        If a valid attribute name is specified, samples the vertex order from the primitive with the lowest value. In case of matching values, picks the vertex order from the highest primitive number."], "extent": [8218, 8469]}, {"blevel": 10, "type": "bullet", "indent": 8, "text": [{"type": "strong", "text": ["By Attribute Last Value / Reverse"]}, " -\n        If a valid attribute name is specified, samples the vertex order from the primitive with the highest value. In case of matching values, picks the vertex order from the highest primitive number.   "], "extent": [8469, 8723]}, {"blevel": 10, "type": "bullet", "indent": 8, "text": [{"type": "strong", "text": ["By Prim Number First Value"]}, " -\n        The first valid primitive number per merge operation is taken for its vertex order."], "extent": [8723, 8857]}, {"blevel": 10, "type": "bullet", "indent": 8, "text": [{"type": "strong", "text": ["By Prim Number Last Value"]}, " -\n        The last valid primitive number per merge operation is taken for its vertex order."], "extent": [8857, 8997]}], "container": true}], "container": true, "attrs": {"id": "vertexOrderMethod"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Sort By"], "extent": [8997, 9010], "body": [{"type": "para", "indent": 8, "text": ["Paired with the Vertex Order Direction methods ", {"type": "q", "text": ["By Attribute First Match"]}, " & ", {"type": "q", "text": ["By Attribute Last Match"]}, " to pick which primitive polyline to grab the vertex order from."], "extent": [9045, 9220]}], "container": true, "attrs": {"id": "primattribVertexOrder"}, "role": "item"}], "container": true, "role": "item_group"}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 4, "text": ["Point Behaviour on Fuse"], "extent": [9220, 9258], "body": [{"type": "para", "indent": 8, "text": [{"type": "strong", "text": ["Configures how point attributes and point groups are resolved when they are fused by the fuse distance."]}], "extent": [9258, 9381]}]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 4, "text": ["Point Attribs Promotion"], "extent": [9381, 9410], "body": [{"type": "para", "indent": 8, "text": ["Specify per point attribute, how it should be resolved upon being fused with other points. Only certain types of attributes can be used for each Snap Method.\n        Can resolve attributes by the value of the attribute itself, or by sorting by the point numbers or a separate weight attribute."], "extent": [9440, 9743]}], "container": true, "attrs": {"id": "attribsnapmethod"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Sort Type"], "extent": [9743, 9758], "body": [{"type": "para", "indent": 8, "text": ["When using ", {"type": "q", "text": ["By Attribute"]}, " methods for point attrib promotion, specify if the weight attribute should be obtained from the points being fused, or from their connected primitives."], "extent": [9787, 9982]}], "container": true, "attrs": {"id": "pointAttribType"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Sort By"], "extent": [9982, 9995], "body": [{"type": "para", "indent": 8, "text": ["Specify the attribute name for the point (or primitive) attribute used as a weight value for the ", {"type": "q", "text": ["By Attribute"]}, " Method. (sorts by numerical or alphabetical order)."], "extent": [10029, 10219]}], "container": true, "attrs": {"id": "Sort By Point Attrib"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Point Attributes"], "extent": [10219, 10241], "body": [{"type": "para", "indent": 8, "text": ["Specify which point attributes to resolve."], "extent": [10271, 10324]}], "container": true, "attrs": {"id": "pointattribnames"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Group Propagation"], "extent": [10324, 10347], "body": [{"type": "para", "indent": 8, "text": ["Specify per point group, how they should be resolved upon a merge."], "extent": [10377, 10461]}], "container": true, "attrs": {"id": "grouppropagation"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Point Group Names"], "extent": [10461, 10484], "body": [{"type": "para", "indent": 8, "text": ["Specify which point groups to resolve."], "extent": [10513, 10578]}], "container": true, "attrs": {"id": "pointgroupnames"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Vertex Attrib Promotion Method"], "extent": [10578, 10614], "body": [{"type": "para", "indent": 8, "text": ["Specify how vertex attributes should be promoted upon merge. Users similar promotion methods as the Prim Attrib Promotion method, minus the By attribute options."], "extent": [10646, 10817]}], "container": true, "attrs": {"id": "vertexAttribMethod"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Sort By Vertex Order"], "extent": [10817, 10847], "body": [{"type": "para", "indent": 8, "text": ["When enabled, sorts the output geometry point numbers by their vertex order.    "], "extent": [10878, 10985]}], "container": true, "attrs": {"id": "sortByVertexOrder"}, "role": "item"}], "container": true, "role": "item_group"}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 4, "text": ["Visual Feedback"], "extent": [10985, 11012], "body": [{"type": "para", "indent": 8, "text": [{"type": "strong", "text": ["Configure how the guide display & output are rendered"]}], "extent": [11012, 11094]}]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 4, "text": ["Guide Scale"], "extent": [11094, 11111], "body": [{"type": "para", "indent": 8, "text": ["Set the scale of wireframe guide objects visible when the node is selected, and that are provided from output 2."], "extent": [11135, 11257]}], "container": true, "attrs": {"id": "guideScale"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Show Source Vertex Order"], "extent": [11257, 11287], "body": [{"type": "para", "indent": 8, "text": ["Displays the original polyline vertex order as smaller direction guide arrows."], "extent": [11322, 11411]}], "container": true, "attrs": {"id": "showSourceVertexOrder"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Color Segments"], "extent": [11411, 11431], "body": [{"type": "para", "indent": 8, "text": ["Enable primitive color visualization on the output primitives per primitive."], "extent": [11458, 11544]}], "container": true, "attrs": {"id": "colorSegments"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Seed"], "extent": [11544, 11554], "body": [{"type": "para", "indent": 8, "text": ["Set the seed value for the random color assigned per primitive."], "extent": [11577, 11658]}], "container": true, "attrs": {"id": "colorSeed"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Guide Color"], "extent": [11658, 11675], "body": [{"type": "para", "indent": 8, "text": ["Specify what color class the Guide Visual Output should be. ( Useful for color attribute compatibility when merged with other geometry.)"], "extent": [11707, 11861]}], "container": true, "attrs": {"id": "outGuideColorClass"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Pack Guide Output"], "extent": [11861, 11884], "body": [{"type": "para", "indent": 8, "text": ["Output the Guide Visual Geometry as Packed Geometry instead.    "], "extent": [11912, 11986]}], "container": true, "attrs": {"id": "outGuidePacked"}, "role": "item"}], "container": true, "role": "item_group"}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 4, "text": ["Clean NURBS and Bezier Curves upon Input"], "extent": [11986, 12037], "body": [{"type": "para", "indent": 8, "text": [{"type": "strong", "text": ["This utility only outputs polylines, configures here how to process NURBS and Bezier Curves."]}], "extent": [12037, 12150]}]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 4, "text": ["Clean Method"], "extent": [12150, 12168], "body": [{"type": "para", "indent": 8, "text": ["Configures how to clean non-supported geometry types, such as NURBS and Bezier Curves."], "extent": [12198, 12294]}], "container": true, "attrs": {"id": "conversionMethod"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Level of Detail"], "extent": [12294, 12315], "body": [{"type": "para", "indent": 8, "text": ["Point density along the curves U direction."], "extent": [12333, 12394]}], "container": true, "attrs": {"id": "lodu"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Divisions Per Span"], "extent": [12394, 12418], "body": [{"type": "para", "indent": 8, "text": ["Point count along the curves U direction."], "extent": [12436, 12487]}], "container": true, "attrs": {"id": "divu"}, "role": "item"}], "container": true, "role": "item_group"}], "text": "Parameters"}, {"level": 1, "id": "guides", "container": true, "type": "guides_section", "indent": 0, "role": "section", "extent": [12487, 12495], "body": [{"type": "para", "indent": 0, "text": [{"type": "strong", "text": ["Guides become visible when the node is selected and help you understand how polylines are (or are not) merged together."]}], "extent": [12495, 12619]}, {"type": "para", "indent": 0, "text": [{"scheme": "Image", "value": "/images/merge_splines_guide_legend.png", "type": "img", "text": ""}], "extent": [12619, 12667]}, {"type": "bullet_group", "body": [{"blevel": 2, "type": "bullet", "indent": 0, "text": [{"type": "strong", "text": ["Bright yellow arrows"]}, " indicate the vertex order of processed (or unprocessed) polylines."], "extent": [12667, 12759]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"type": "strong", "text": ["Dark yellow arrows"]}, " indicate the original vertex order of pre-merged polylines, the bright yellow arrows are placed on these to indicate which was used for the final merged polyline."], "extent": [12759, 12945]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"type": "strong", "text": ["Red arrows"]}, " indicate that the polyline ends at this point location and does not merge or connect with other polylines."], "extent": [12945, 13067]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"type": "strong", "text": ["Green spheres"]}, " indicate that a point was merged and fused."], "extent": [13067, 13129]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"type": "strong", "text": ["Orange spheres"]}, " indicate that a point was merged, but not fused ( Possible because the point was already fused with the participating primitives of the merge. )"], "extent": [13129, 13293]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"type": "strong", "text": ["Blue spheres"]}, " indicate a point was fused, but not merged ( Possibly due to it ending on an intersection. )"], "extent": [13293, 13404]}], "container": true}, {"type": "para", "indent": 0, "text": ["Guides are also provided from output 2 so you can implement them as a visual output of your tools."], "extent": [13404, 13504]}, {"type": "note_group", "body": [{"type": "note", "indent": 0, "role": "item", "extent": [13504, 13510], "body": [{"type": "para", "indent": 4, "text": ["Internally, the asset uses groups and attributes prefixed with ", {"type": "q", "text": ["temp_"]}, ", if attributes or groups with this prefix are provided to the tool they will be removed."], "extent": [13510, 13676]}], "container": true}], "container": true, "role": "item_group"}], "text": "Guides"}, {"level": 1, "id": "info", "container": true, "type": "info_section", "indent": 0, "role": "section", "extent": [13676, 13682], "body": [{"type": "para", "indent": 0, "text": ["This node is originally developed as part of the Mentoring and Consulting work done at E-Houdini Academy.\nVersion 1.5 was added to Labs on 21-July-2022 as the Labs Merge Splines 1.0"], "extent": [13682, 13866]}, {"type": "para", "indent": 0, "text": ["Original Author: Erwin Heyms."], "extent": [13866, 13901]}, {"type": "para", "indent": 0, "text": ["Created in Houdini Version H19.5.284."], "extent": [13901, 13944]}, {"type": "para", "indent": 0, "text": ["Last updated on 10-July-2022 as V1.0.1"], "extent": [13944, 13984]}, {"type": "para", "indent": 0, "text": [{"scheme": null, "value": " https://ehoudiniacademy.com ", "type": "link", "text": [" Erwin Heyms - EhoudiniAcademy "], "exists": true}], "extent": [13984, 14047]}], "text": "Info"}], "title": ["Labs Merge Splines"], "summary": ["Merges disconnected Polylines together like the Polypath Sop, cutting them at intersections. \nBut with specified conditions, while preserving and merging attributes and groups."]}