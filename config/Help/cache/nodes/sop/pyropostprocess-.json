{"type": "root", "attrs": {"type": "node", "context": "sop", "internal": "pyropostprocess", "icon": "SOP/pyropostprocess", "since": "18.0", "version": "", "namespace": null}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["Pyro Post-Process"], "extent": [103, 125]}, {"type": "summary", "indent": 0, "text": ["Applies common post-processing effects to the results of Pyro solves."], "extent": [125, 203]}, {"type": "para", "indent": 0, "text": ["The Pyro Post-Process node provides common post-processing operations\nfor Pyro solvers.  It can adjust the visualization and material for\nboth viewport display and rendering.  And it can bake flame values into\nthe density map to ensure Mantra picks up purely emissive regions."], "extent": [203, 481]}, {"level": 1, "id": "parameters", "container": true, "type": "parameters_section", "indent": 0, "role": "section", "extent": [481, 493], "body": [{"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Look"], "extent": [493, 505], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Apply Look"], "extent": [505, 518], "body": [{"type": "para", "indent": 4, "text": ["Controls if any updates to the smoke visualization or material will\n    occur.  Turn this off to just process the geometry without affecting\n    its appearance."], "extent": [535, 701]}], "container": true, "attrs": {"id": "dolook"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Assign Material"], "extent": [701, 718], "body": [{"type": "para", "indent": 4, "text": ["Control if a local shader is assigned to the geometry, ensuring\n    the appearance in the renderer will match the viewport."], "extent": [743, 872]}, {"type": "para", "indent": 4, "text": ["NOTE: This will override any materials defined at the object level."], "extent": [872, 945]}], "container": true, "attrs": {"id": "assignmaterial"}, "role": "item"}], "container": true, "role": "item_group"}, {"level": 3, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Smoke"], "extent": [945, 959], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Density Scale"], "extent": [959, 975], "body": [{"type": "para", "indent": 4, "text": ["The density of the smoke is multiplied by this value.  This allows the\n    smoke to be made thicker or thinner without changing the actual values."], "extent": [999, 1160]}], "container": true, "attrs": {"id": "s_densityscale"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Smoke Color"], "extent": [1160, 1173], "body": [{"type": "para", "indent": 4, "text": ["Controls the overall smoke color.  This will set the primitive color\n    attribute for the smoke which will cause most shaders to tint\n    appropriately."], "extent": [1190, 1358]}], "container": true, "attrs": {"id": "s_color"}, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 3, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Fire"], "extent": [1358, 1371], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Enable Emission"], "extent": [1371, 1389], "body": [{"type": "para", "indent": 4, "text": ["When disabled, no light will be emitted by the fire."], "extent": [1408, 1466]}], "container": true, "attrs": {"id": "fi_enable"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Intensity Scale"], "extent": [1466, 1483], "body": [{"type": "para", "indent": 4, "text": ["The final brightness of the emissive part of the fire will be scaled\n    by this amount.  This is applied after the flame range and flame\n    intensity ramps."], "extent": [1500, 1673]}], "container": true, "attrs": {"id": "fi_int"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Flame Range"], "extent": [1673, 1686], "body": [{"type": "para", "indent": 4, "text": ["The flame volume will be remapped to ", {"type": "code", "text": ["0"]}, " to ", {"type": "code", "text": ["1"]}, " from this range.  This\n    allows the isolation of specific band of the evolution of the flame."], "extent": [1706, 1864]}], "container": true, "attrs": {"id": "fi_fitsrc"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Flame Intensity Ramp"], "extent": [1864, 1886], "body": [{"type": "para", "indent": 4, "text": ["The flame volume, after fitting from the range, will be remapped with\n    this map.  This controls how the flame intensity changes as the flame\n    ages.  Often it is useful to have a sharp cut off to make for clean\n    ends to flames."], "extent": [1904, 2154]}], "container": true, "attrs": {"id": "fi_ramp"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Flame Density"], "extent": [2154, 2169], "body": [{"type": "para", "indent": 4, "text": ["Scales the flame volume by this and does a maximum of this with density.\n    This is required for smokeless regions that otherwise may be skipped\n    by the renderer.  To get a truly zero alpha channel, the smoke density\n    can be set to 0."], "extent": [2192, 2443]}], "container": true, "attrs": {"id": "flamedensity"}, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 3, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Fire Color"], "extent": [2443, 2462], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Mode"], "extent": [2462, 2469], "body": [{"type": "para", "indent": 4, "text": ["How to convert temperature into fire color.  Physical Blackbody \n    uses the black body emission spectrum so provides an excellent\n    physically correct starting point, and should be used for most\n    normal fire.   But if rendering into different color spaces,\n    or some more magical effect is desired, an explicit ramp can\n    be provided."], "extent": [2493, 2844]}], "container": true, "attrs": {"id": "fc_colormode:"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Temperature Range"], "extent": [2844, 2863], "body": [{"type": "para", "indent": 4, "text": ["The minimum and maximum temperature values to map to the left and\n    right parts of the temperature ramp.  This is the raw volume values,\n    so usually is in a 0 to 1 range."], "extent": [2881, 3062]}], "container": true, "attrs": {"id": "fc_ramp"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Ramp"], "extent": [3062, 3068], "body": [{"type": "para", "indent": 4, "text": ["A ramp mapping the temperature volume into an emissive color.  The\n    color is multiplied with the flame intensity so the final brightness\n    will depend on both this color\u2019s brightness and the intensity.  Usually\n    this ramp is used to drive the chroma primarily, but it can also be\n    used to brighten or darken the flame with temperature."], "extent": [3091, 3443]}], "container": true, "attrs": {"id": "fc_colorramp"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Temperature Scale"], "extent": [3443, 3462], "body": [{"type": "para", "indent": 4, "text": ["Scales the temperature volume.  This is useful for adjusting the\n    apparent temperature of the flame without changing the simulation."], "extent": [3479, 3629]}], "container": true, "attrs": {"id": "fc_int"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Temperature at 0 (K)"], "extent": [3629, 3651], "body": [{"type": "para", "indent": 4, "text": ["The temperature volume nominally ranges from ", {"type": "code", "text": ["0"]}, " to ", {"type": "code", "text": ["1"]}, " which map\n    to certain actual temperatures.  This is the temperature a volume\n    value of ", {"type": "code", "text": ["0"]}, " should map to, which is usually the simulation ambient\n    temperature."], "extent": [3672, 3911]}], "container": true, "attrs": {"id": "fc_bbtemp0"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Temperature at 1 (K)"], "extent": [3911, 3933], "body": [{"type": "para", "indent": 4, "text": ["The temperature volume nominally ranges from ", {"type": "code", "text": ["0"]}, " to ", {"type": "code", "text": ["1"]}, " which map\n    to certain actual temperatures.  This is the temperature a volume\n    value of ", {"type": "code", "text": ["1"]}, " should map to, which is usually the simulation reference\n    temperature."], "extent": [3957, 4193]}], "container": true, "attrs": {"id": "fc_bbtemp"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Adaptation"], "extent": [4193, 4205], "body": [{"type": "para", "indent": 4, "text": ["Manipulates the low end of the generated intensity."], "extent": [4225, 4286]}], "container": true, "attrs": {"id": "fc_bbadapt"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Burn"], "extent": [4286, 4292], "body": [{"type": "para", "indent": 4, "text": ["Manipulates the high end of the generated intensity."], "extent": [4311, 4378]}], "container": true, "attrs": {"id": "fc_bbburn"}, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 3, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Shadows"], "extent": [4378, 4394], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Shadow Density"], "extent": [4394, 4411], "body": [{"type": "para", "indent": 4, "text": ["When casting shadows the smoke\u2019s density volume, after being scaled\n    by the density scale, will be scaled again by the shadow density.\n    This allows for volumes which cast heavier or lighter shadows."], "extent": [4433, 4647]}], "container": true, "attrs": {"id": "s_shadowint"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Create Matching Material"], "extent": [4647, 4673], "body": [{"type": "para", "indent": 4, "text": ["This button will create a Pyro Shader material in /mat and a Material\n    SOP to bind to it.  The settings of the new material will match the\n    current settings of the post process, allowing for copying values\n    into another pipeline or switching to more advanced material\n    options."], "extent": [4673, 4968]}], "container": true, "role": "item"}], "container": true, "role": "item_group"}]}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Post Process"], "extent": [4968, 4987], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Compute Min/Max Values"], "extent": [4987, 5012], "body": [{"type": "para", "indent": 4, "text": ["Computes the minimum and maximum values of each volume and stores\n    it as a primitive attribute of the same name.  If the volume is\n    vector type and is converted to VDB, the maximum length is stored."], "extent": [5036, 5246]}], "container": true, "attrs": {"id": "computeminmax"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Convert to VDB"], "extent": [5246, 5262], "body": [{"type": "para", "indent": 4, "text": ["Convert these volumes into VDBs.  Zero areas will be discarded\n    as inactive.  Volume sets, such as ", {"type": "code", "text": ["vel.x"]}, ", ", {"type": "code", "text": ["vel.y"]}, ", and ", {"type": "code", "text": ["vel.z"]}, ",\n    will be merged into a single vector VDB."], "extent": [5281, 5464]}], "container": true, "attrs": {"id": "conv_vdb"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Vector VDBs"], "extent": [5464, 5477], "body": [{"type": "para", "indent": 4, "text": ["Names of VDBs to transform as vector volumes.  All volumes that match the\n    ", {"type": "code", "text": ["foo.x"]}, ", ", {"type": "code", "text": ["foo.y"]}, " and ", {"type": "code", "text": ["foo.z"]}, " will be merged into single 3-tuple VDBs.\n    If the name matches this list, they will also be flagged as vector-type\n    so they will transform.  This ensures velocity vectors transform\n    but avoid having color transforming.  This is a space-separated\n    list and can include wildcards."], "extent": [5502, 5908]}], "container": true, "attrs": {"id": "conv_vectorvdb"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Resample Volumes"], "extent": [5908, 5926], "body": [{"type": "para", "indent": 4, "text": ["The names of volumes to resample.  This is a space separated list\n    of volume names and can contain wildcards.   Note that volumes\n    with suffixes (such as ", {"type": "code", "text": [".x"]}, " or ", {"type": "code", "text": [".y"]}, ") will match with and without\n    the suffix.  This way ", {"type": "code", "text": ["vel"]}, " in this parameter will match with \n    the volume named ", {"type": "code", "text": ["vel.x"]}, ".   Volumes whose names match this pattern\n    will then be resampled by the voxel size scale."], "extent": [5958, 6355]}], "container": true, "attrs": {"id": "conv_scalevolumenames"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Voxel Size Scale"], "extent": [6355, 6373], "body": [{"type": "para", "indent": 4, "text": ["A scale factor to change the size of the voxels in the resampled\n    volume.  ", {"type": "code", "text": ["2"]}, " will double the voxel size, so result in half the resolution,\n    and one eighth the total voxels."], "extent": [6394, 6580]}], "container": true, "attrs": {"id": "conv_scale"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Use 16bit Float"], "extent": [6580, 6597], "body": [{"type": "para", "indent": 4, "text": ["Marks the volume to use 16-bit float values.  This requires half\n    the memory of full 32-bit values, but can be slower to process.\n    Houdini volumes will be 16-bit in memory and on disk.  VDBs are\n    only 16-bit when saved to disk."], "extent": [6620, 6862]}, {"type": "para", "indent": 4, "text": ["NOTE: For Houdini volumes this will only convert volumes to 16-bit, not\n    convert back to 32-bit.  Use the ", {"scheme": "Node", "value": "/nodes/sop/volumecompress", "type": "link", "text": ["Volume Compress"], "fullpath": "/nodes/sop/volumecompress.html"}, "\n    to switch volumes back to 32-bit."], "extent": [6862, 7056]}], "container": true, "attrs": {"id": "conv_usefp16"}, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Bindings"], "extent": [7056, 7071], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Density"], "extent": [7071, 7081], "body": [{"type": "para", "indent": 4, "text": ["The name of the volume to use for smoke density."], "extent": [7108, 7166]}], "container": true, "attrs": {"id": "bind_density"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Temperature"], "extent": [7166, 7179], "body": [{"type": "para", "indent": 4, "text": ["The name of the volume to use for temperature."], "extent": [7210, 7266]}], "container": true, "attrs": {"id": "bind_temperature"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Flame"], "extent": [7266, 7273], "body": [{"type": "para", "indent": 4, "text": ["The name of the volume to use for flame."], "extent": [7298, 7348]}], "container": true, "attrs": {"id": "bind_flame"}, "role": "item"}], "container": true, "role": "item_group"}]}], "text": "Parameters"}], "title": ["Pyro Post-Process"], "summary": ["Applies common post-processing effects to the results of Pyro solves."]}