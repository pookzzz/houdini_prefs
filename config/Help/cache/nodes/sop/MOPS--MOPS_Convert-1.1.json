{"type": "root", "attrs": {"icon": "/nodes/sop/MOPS--MOPS_Convert-1.1/mops_TD_tools_05.svg", "type": "node", "context": "sop", "internal": "MOPS_Convert", "version": "1.1", "namespace": "MOPS"}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["MOPs Convert"], "extent": [0, 17]}, {"type": "summary", "indent": 0, "text": [" Converts existing primitives to MOPs-compatible packed primitives. "], "extent": [55, 131]}, {"type": "para", "indent": 0, "text": ["MOPs Convert can convert existing primitives, packed or not, into MOPs-compatible packed primitives. This could be used to allow for MOPs operations on voronoi-shattered pieces, for example.\nThis operator adds and/or modifies the following point attributes: s@name, i@id, f@mops_falloff, and v@rest."], "extent": [131, 432]}, {"type": "para", "indent": 0, "text": ["By default, this node creates packed fragments, which are more efficient if all of your pieces are unique. However, packed fragments cannot preview Falloff in the viewport."], "extent": [432, 606]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Overview"], "extent": [606, 621], "body": []}, {"level": 1, "id": "inputs", "container": true, "type": "inputs_section", "indent": 0, "role": "section", "extent": [621, 630], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 0, "text": ["Primitives To Convert"], "extent": [630, 654], "body": [{"type": "para", "indent": 4, "text": ["The primitives to convert into MOPs packed primitives."], "extent": [654, 718]}], "container": true}], "container": true}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["General"], "extent": [718, 732], "body": []}], "text": "Inputs"}, {"level": 1, "id": "parameters", "container": true, "type": "parameters_section", "indent": 0, "role": "section", "extent": [732, 745], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Input Type"], "extent": [745, 758], "body": [{"type": "para", "indent": 4, "text": ["The type of geometry you mean to convert to MOPs-ready packed primitives. You can either convert polygon geometry, or modify existing packed primitives."], "extent": [778, 936]}], "container": true, "attrs": {"id": "input_type"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Compute Normals"], "extent": [936, 953], "body": [{"type": "para", "indent": 4, "text": ["If converting polygon geometry, enable the creation of vertex normals. This prevents dark display artifacts on newly-generated packed primitives."], "extent": [972, 1127]}], "container": true, "attrs": {"id": "do_normal"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Cusp Angle"], "extent": [1127, 1139], "body": [{"type": "para", "indent": 4, "text": ["If vertex normals are equal to or less than this angle away from each other, they will be averaged together. Higher numbers give a softer appearance."], "extent": [1158, 1317]}], "container": true, "attrs": {"id": "cuspangle"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Partition Method"], "extent": [1317, 1335], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["The method by which input geometry is divided into pieces. Each piece will become a packed primitive. There are two modes"], "extent": [1356, 1483], "body": [{"type": "bullet_group", "body": [{"blevel": 10, "type": "bullet", "indent": 8, "text": ["Connectivity: The primitive connectivity will be used to separate pieces. Each polygon shell will become a packed primitive."], "extent": [1483, 1618]}, {"blevel": 10, "type": "bullet", "indent": 8, "text": ["Attribute: An integer or string primitive attribute will be used to separate pieces. Each unique value of this attribute will become a packed primitive."], "extent": [1618, 1786]}], "container": true}], "container": true}], "container": true}], "container": true, "attrs": {"id": "name_method"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Piece Attribute"], "extent": [1786, 1803], "body": [{"type": "para", "indent": 4, "text": ["An integer or string primitive attribute to define pieces for partitioning."], "extent": [1822, 1911]}], "container": true, "attrs": {"id": "name_attr"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Transfer Attributes"], "extent": [1911, 1932], "body": [{"type": "para", "indent": 4, "text": ["If these attributes exist on the source geometry, transfer them to the new packed primitives."], "extent": [1961, 2064]}], "container": true, "attrs": {"id": "transfer_attributes"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Create Packed Fragments"], "extent": [2064, 2089], "body": [{"type": "para", "indent": 4, "text": ["Create packed fragments instead of standard packed primitives. This means that each chunk contains a reference to the entire original geometry, which can speed up performance if each piece is unique, such as from a voronoi shatter.\n    NOTE: Packed fragments cannot display any color attributes that were modified after the pack operation. This means previewing falloff or modifying colors will not work in the viewport."], "extent": [2114, 2544]}], "container": true, "attrs": {"id": "packedfragments"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Override ID Attr"], "extent": [2544, 2562], "body": [{"type": "para", "indent": 4, "text": ["Override any existing ID attribute with a newly-generated one based on the point number and the ID Start Number parameter."], "extent": [2577, 2709]}], "container": true, "attrs": {"id": "do_id"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["ID Start Number"], "extent": [2709, 2726], "body": [{"type": "para", "indent": 4, "text": ["The starting number to use for both the i@id attribute and the s@name suffix."], "extent": [2746, 2833]}], "container": true, "attrs": {"id": "startindex"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Override Name Attr"], "extent": [2833, 2853], "body": [{"type": "para", "indent": 4, "text": ["Override any existing name attribute with a newly-generated one based on the ID and the Name Prefix parameter."], "extent": [2870, 2990]}], "container": true, "attrs": {"id": "do_name"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Name Prefix"], "extent": [2990, 3003], "body": [{"type": "para", "indent": 4, "text": ["The prefix to use for the generated s@name attribute. Objects going into a Packed RBD simulation must have unique s@name attributes to solve as separate pieces.    "], "extent": [3019, 3193]}], "container": true, "attrs": {"id": "prefix"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Rest Frame"], "extent": [3193, 3205], "body": [{"type": "para", "indent": 4, "text": ["When computing the v@rest attribute for MOPs, the frame in which the rest attribute will be generated from."], "extent": [3225, 3336]}], "container": true, "attrs": {"id": "rest_frame"}, "role": "item"}], "container": true, "role": "item_group"}], "text": "Parameters"}], "title": ["MOPs Convert"], "summary": [" Converts existing primitives to MOPs-compatible packed primitives. "]}