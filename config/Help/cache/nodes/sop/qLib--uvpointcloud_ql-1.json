{"type": "root", "attrs": {"icon": "CHOP/image", "context": "sop", "type": "node", "internal": "uvpointcloud_ql", "version": "1", "namespace": "qLib"}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["UV PointCloud qL"], "extent": [45, 66]}, {"type": "para", "indent": 0, "text": [{"type": "strong", "text": ["interface version 1"]}], "extent": [66, 90]}, {"type": "summary", "indent": 0, "text": ["Builds a 3D point cloud for an UV-mapped geometry, where each point represents a texture pixel."], "extent": [90, 193]}, {"type": "para", "indent": 0, "text": [{"scheme": "Image", "value": "/nodes/sop/qLib--uvpointcloud_ql-1/uv_pointcloud_ql_sop_main.png", "type": "img", "text": ""}], "extent": [193, 239]}, {"type": "bullet_group", "body": [{"blevel": 2, "type": "bullet", "indent": 0, "text": [{"type": "em", "text": ["The UV pointcloud built for a torus. Each point corresponds to a pixel in the UV map."]}, "\n  ", {"type": "em", "text": ["(UV border points are displayed in red. Points beyond UV borders get extrapolated UVs.)"]}], "extent": [239, 422]}], "container": true}, {"type": "para", "indent": 0, "text": [{"scheme": "Image", "value": "/nodes/sop/qLib--uvpointcloud_ql-1/uv_pointcloud_ql_cop_proj.png", "type": "img", "text": ""}], "extent": [422, 468]}, {"type": "bullet_group", "body": [{"blevel": 2, "type": "bullet", "indent": 0, "text": [{"type": "em", "text": ["Camera-view rendering of a colored object. The point cloud is projected onto the object"]}, "\n  ", {"type": "em", "text": ["from the camera plane, inheriting its colors"]}, "\n  _(see example file workflow/uv_pointcloud_ql_renderproj.hip)_"], "extent": [468, 675]}], "container": true}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Point Cloud Notes"], "extent": [675, 701], "body": [{"type": "warning_group", "body": [{"type": "warning", "indent": 0, "role": "item", "extent": [701, 711], "body": [{"type": "para", "indent": 4, "text": ["Currently the UV PointCloud OPs only work in the ", {"type": "code", "text": ["uv"]}, " ", {"type": "code", "text": ["[0..1)"]}, " (UV unit) range.\n    UVs outside the unit square (e.g. UDIM) is not currently supported."], "extent": [711, 872]}], "container": true}], "container": true, "role": "item_group"}, {"type": "bullet_group", "body": [{"blevel": 2, "type": "bullet", "indent": 0, "text": ["Each point in the generated point cloud corresponds to a single pixel in an UV texture\n  (of the given resolution). Do ", {"type": "em", "text": ["not"]}, " delete any points from the point cloud.\n  (The exception is if the corresponding COP2 node is in ", {"type": "q", "text": ["point cloud"]}, " mode.)"], "extent": [872, 1118]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": ["Points outside valid UV areas are generated ", {"type": "em", "text": ["extrapolated UVs"]}, ", so there won\u2019t be any\n  UV border edge artifacts. (A sufficiently large cloud resolution is also required.)"], "extent": [1118, 1293], "body": [{"type": "note_group", "body": [{"type": "note", "indent": 4, "role": "item", "extent": [1293, 1303], "body": [{"type": "para", "indent": 8, "text": ["Extrapolation is done by taking UV points outside valid UV areas, and ", {"type": "q", "text": ["snapping"]}, " them\n        to the edges of the nearest UV island. This can be visualized using the geometry guide\n        and it\u2019s ", {"type": "em", "text": ["Guide UV Blend"]}, " parameter (see below)."], "extent": [1303, 1550]}, {"type": "para", "indent": 8, "text": [{"scheme": "Image", "value": "/nodes/sop/qLib--uvpointcloud_ql-1/uv_pointcloud_ql_sop_uvblend.png", "type": "img", "text": ""}], "extent": [1550, 1616]}, {"type": "para", "indent": 8, "text": ["Consequently, the edge points of the pointcloud UV islands are actually multiple points.\n        These can be displayed using the ", {"type": "em", "text": ["Visualize Off-UV Points"]}, " switch."], "extent": [1616, 1789]}], "container": true}], "container": true, "role": "item_group"}], "container": true}, {"blevel": 2, "type": "bullet", "indent": 0, "text": ["Once the point cloud is built, color can be transferred to it, then it can be converted\n  back to a texture map. See the ", {"scheme": "Node", "value": "/nodes/cop2/qLib::uvquickshade_ql::1", "type": "link", "text": ["UV PointCloud qL compositing node"], "exists": true}, "\n  for details."], "extent": [1789, 1999]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": ["This operator stores the set resolution as a detail attribute, so the COP2 texture builder\n  can automatically detect and use it."], "extent": [1999, 2133]}], "container": true}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Point Cloud Workflow"], "extent": [2133, 2162], "body": [{"type": "para", "indent": 0, "text": ["There are two operators, a SOP (this one) and a COP2."], "extent": [2162, 2218]}, {"type": "para", "indent": 0, "text": ["The SOP builds a point cloud from UVs; the COP2 builds texture image from the point cloud."], "extent": [2218, 2310]}, {"type": "para", "indent": 0, "text": ["The UV PointCloud qL SOP (this operator) creates a point cloud from a geometry, where\nthe points are placed on the geometry surface, and each point will roughly represent\none UV sample (", {"type": "q", "text": ["pixel"]}, "). The geometry should have ", {"type": "code", "text": ["uv"]}, " attributes (which the points\ninherit)."], "extent": [2310, 2576]}, {"type": "para", "indent": 0, "text": ["After the point cloud is built, any Houdini tool can be used to generate color and\nalpha (", {"type": "code", "text": ["Cd"]}, " and ", {"type": "code", "text": ["Alpha"]}, ") attributes on the points."], "extent": [2576, 2711]}, {"type": "para", "indent": 0, "text": ["Then, an\n", {"scheme": "Node", "value": "/nodes/cop2/qLib::uvpointcloud_ql::1", "type": "link", "text": ["UV PointCloud qL COP compositing node"], "exists": true}, "\ncan be used to render a texture from the colored ", {"type": "q", "text": ["UV"]}, " points."], "extent": [2711, 2858]}, {"type": "tip_group", "body": [{"type": "tip", "indent": 0, "role": "item", "extent": [2858, 2863], "body": [{"type": "para", "indent": 4, "text": ["This workflow can be used to generate ", {"type": "q", "text": ["dynamic UV texture paint"]}, " effects,\n    such as wet maps, etc."], "extent": [2863, 2970]}], "container": true}], "container": true, "role": "item_group"}]}, {"level": 1, "id": "parameters", "container": true, "type": "parameters_section", "indent": 0, "role": "section", "extent": [2970, 2982], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 4, "text": ["Image Width, Height"], "extent": [2982, 3007], "body": [{"type": "para", "indent": 8, "text": ["The desired output image width and height. By default these\n        will be the dimensions of the image created by the COP2 node."], "extent": [3007, 3146]}, {"type": "para", "indent": 8, "text": ["The operator creates one point for each pixel of this image size."], "extent": [3146, 3221]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Inherit Attribs"], "extent": [3221, 3242], "body": [{"type": "para", "indent": 8, "text": ["A list of input geometry attributes to be inherited by the point cloud."], "extent": [3242, 3323]}, {"type": "para", "indent": 8, "text": ["The ", {"type": "code", "text": ["uv"]}, " attribute is always inherited."], "extent": [3323, 3372]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Resolution Attribute"], "extent": [3372, 3398], "body": [{"type": "para", "indent": 8, "text": ["Name of the detail attribute, containing the image size.\n        (The COP2 node uses this attribute to determine its output resolution.)"], "extent": [3398, 3544]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Output Groups"], "extent": [3544, 3563], "body": [{"type": "para", "indent": 8, "text": ["Creates point groups both for points with valid UVs and points that\n        fell outside of any valid UV areas (i.e. not used by any geometry)."], "extent": [3563, 3716]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Visualize Off-UV Points"], "extent": [3716, 3745], "body": [{"type": "para", "indent": 8, "text": ["Uses a simple color-coding to indicate points\n        outside of valid UV areas."], "extent": [3745, 3835]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Show Guide"], "extent": [3835, 3851], "body": [{"type": "para", "indent": 8, "text": ["Display the UV layout of the points as a guide geometry."], "extent": [3851, 3925]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Guide UV Blend"], "extent": [3925, 3945], "body": [{"type": "para", "indent": 8, "text": ["A blend factor to interactively visualize where each UV point ends up\n        (especially the ones outside of mapped primitives)."], "extent": [3945, 4084]}, {"type": "bullet_group", "body": [{"blevel": 10, "type": "bullet", "indent": 8, "text": [{"type": "code", "text": ["0.0"]}, " is the ", {"type": "q", "text": ["mapped"]}, " UV position of all points\n          (points outside all UV islands will placed at the edge of the nearest\n          island.)"], "extent": [4084, 4250]}, {"blevel": 10, "type": "bullet", "indent": 8, "text": [{"type": "code", "text": ["1.0"]}, " is the original UV position of each point."], "extent": [4250, 4310]}], "container": true}, {"type": "para", "indent": 8, "text": [{"scheme": "Image", "value": "/nodes/sop/qLib--uvpointcloud_ql-1/uv_pointcloud_ql_sop_uvblend.png", "type": "img", "text": ""}], "extent": [4310, 4367]}, {"type": "bullet_group", "body": [{"blevel": 10, "type": "bullet", "indent": 8, "text": [{"type": "em", "text": ["Blending from 1.0\u20260.0 on an UV-mapped torus."]}], "extent": [4367, 4428]}], "container": true}], "container": true, "role": "item"}], "container": true, "role": "item_group"}], "text": "Parameters"}, {"level": 1, "id": "related", "container": true, "type": "related_section", "indent": 0, "role": "section", "extent": [4428, 4437], "body": [{"type": "bullet_group", "body": [{"blevel": 6, "type": "bullet", "indent": 4, "text": [{"scheme": "Node", "value": "/nodes/cop2/qLib::uvpointcloud_ql::1", "type": "link", "text": ["UV PointCloud qL COP"], "exists": true}], "extent": [4437, 4501]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": [{"scheme": "Node", "value": "/nodes/sop/qLib::uvquickshade_ql::1", "type": "link", "text": ["UV QuickShade qL SOP"], "exists": true}], "extent": [4501, 4564]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": [{"scheme": "Node", "value": "/nodes/sop/qLib::point_texture_ql::1", "type": "link", "text": ["Point Texture qL SOP"], "exists": true}], "extent": [4564, 4628]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": ["\u2026"], "extent": [4628, 4639]}], "container": true}], "text": "Related"}, {"level": 1, "id": "relnotes", "container": true, "type": "relnotes_section", "indent": 0, "text": ["Release Notes"], "role": "section", "extent": [4639, 4663], "body": [{"type": "para", "indent": 0, "text": [{"type": "em", "text": ["interface version 1"]}, " \u2014"], "extent": [4663, 4691]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 0, "text": ["2019-11-13"], "extent": [4691, 4703], "body": [{"type": "bullet_group", "body": [{"blevel": 6, "type": "bullet", "indent": 4, "text": ["Updated attribute popup menu(s) to use shared menu python code (", {"scheme": null, "value": "https://github.com/qLab/qLib/issues/899", "type": "link", "text": ["#899"], "exists": true}, ")"], "extent": [4703, 4822]}], "container": true}], "container": true}, {"type": "dt", "indent": 0, "text": ["2019-05-16"], "extent": [4822, 4834], "body": [{"type": "bullet_group", "body": [{"blevel": 6, "type": "bullet", "indent": 4, "text": ["Updated for H16.5"], "extent": [4834, 4858]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": ["Removed obsoleted nodes used inside (e.g. Ray qL SOP, ", {"scheme": null, "value": "https://github.com/qLab/qLib/issues/832", "type": "link", "text": ["#832"], "exists": true}, ")"], "extent": [4858, 4967]}], "container": true}], "container": true}, {"type": "dt", "indent": 0, "text": ["2015-03-02"], "extent": [4967, 4979], "body": [{"type": "bullet_group", "body": [{"blevel": 6, "type": "bullet", "indent": 4, "text": ["Resaved in H14."], "extent": [4979, 5001]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": ["Added ", {"type": "code", "text": ["uv_orig"]}, " output parameter"], "extent": [5001, 5040]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": ["Guide geometry (showing the UV layout of the point cloud)"], "extent": [5040, 5104]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": ["uv/uv_orig blending visualization on guide"], "extent": [5104, 5153]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": ["Help update"], "extent": [5153, 5173]}], "container": true}], "container": true}, {"type": "dt", "indent": 0, "text": ["2014-11-29"], "extent": [5173, 5185], "body": [{"type": "para", "indent": 4, "text": ["Added ", {"type": "em", "text": ["Inherit Attribs"]}, " parameter."], "extent": [5185, 5225]}], "container": true}, {"type": "dt", "indent": 0, "text": ["2014-03-23"], "extent": [5225, 5237], "body": [{"type": "para", "indent": 4, "text": ["First version."], "extent": [5237, 5257]}], "container": true}], "container": true}]}], "title": ["UV PointCloud qL"], "summary": ["Builds a 3D point cloud for an UV-mapped geometry, where each point represents a texture pixel."]}