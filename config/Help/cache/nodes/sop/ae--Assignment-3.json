{"type": "root", "attrs": {"icon": "/nodes/sop/ae--Assignment-3/ae_active.svg", "type": "node", "context": "sop", "internal": "Assignment", "version": "3", "namespace": "ae"}, "body": [{"type": "summary", "indent": 0, "text": ["Creating a minimal cost matching between 2 point clouds"], "extent": [30, 93]}, {"type": "para", "indent": 0, "text": ["It can be useful to uniquely pairs points from 2 separate point clouds - in particular a pairing which minimises the sum of the distance between all pairs."], "extent": [93, 250]}, {"type": "para", "indent": 0, "text": ["This is a ", {"type": "q", "text": ["bipartite minimum weighted euclidean matching"]}, "."], "extent": [250, 310]}, {"type": "para", "indent": 0, "text": ["The Linear Sum Assignment algorithm requires Google ORTools to be installed to python2.7libs https://developers.google.com/optimization/install"], "extent": [310, 455]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Overview"], "extent": [455, 470], "body": []}, {"level": 1, "id": "inputs", "container": true, "type": "inputs_section", "indent": 0, "role": "section", "extent": [470, 479], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 0, "text": ["Source Points"], "extent": [479, 495], "body": [{"type": "para", "indent": 4, "text": ["Source Points"], "extent": [495, 514]}], "container": true}, {"type": "dt", "indent": 0, "text": ["Target Points"], "extent": [514, 529], "body": [{"type": "para", "indent": 4, "text": ["Target Points"], "extent": [529, 552]}], "container": true}], "container": true}], "text": "Inputs"}, {"level": 1, "id": "parameters", "container": true, "type": "parameters_section", "indent": 0, "role": "section", "extent": [552, 564], "body": [{"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["General"], "extent": [564, 579], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Preview matching"], "extent": [579, 598], "body": [{"type": "para", "indent": 4, "text": ["Preview the matching by linking points"], "extent": [615, 659]}], "container": true, "attrs": {"id": "preview"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Algorithm"], "extent": [659, 670], "body": [{"type": "para", "indent": 4, "text": ["Linear Sum Assignment: A 'perfect' minimum cost matching (minimises the total distance between sources and targets). This method is slow for large point clouds hence the batch option\n    Naive: A brute-force matcher which matches each point to the nearest available target\n    Stable Marriage:"], "extent": [684, 981]}], "container": true, "attrs": {"id": "algo"}, "role": "item"}], "container": true, "role": "item_group"}]}], "text": "Parameters"}], "summary": ["Creating a minimal cost matching between 2 point clouds"]}