{"type": "root", "attrs": {"type": "node", "context": "sop", "internal": "fuse", "icon": "SOP/fuse", "tags": "topology, points", "version": "2.0", "since": "17.5", "verb_since": "17.5", "keywords": "combine squash merge collapse weld", "namespace": null}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["Fuse"], "extent": [0, 9]}, {"type": "summary", "indent": 0, "text": ["Merges or snaps points."], "extent": [184, 215]}, {"type": "para", "indent": 0, "text": ["The Fuse SOP is used to snap points together or snap points to a 3D grid, and optionally fusing points after the snap."], "extent": [215, 335]}, {"type": "para", "indent": 0, "text": ["To restrict the points that can fuse and be fused to, points can be query points, or target points, or both. With only one input to the node, both query and target points are from the single input. However, with a second input to the node, only points in the first input can be query points and only points in the second input can be target points."], "extent": [335, 685]}, {"type": "tip_group", "body": [{"type": "tip", "indent": 0, "role": "item", "extent": [685, 690], "body": [{"type": "para", "indent": 4, "text": ["When fusing multiple line primitives into a single line, they will still maintain separate primitives. If you wish to make the result into a single primitive, append the ", {"scheme": "Node", "value": "/nodes/sop/join", "type": "link", "text": "", "fullpath": "/nodes/sop/join.html"}, " SOP with ", {"type": "code", "text": ["Only Connected"]}, " enabled."], "extent": [690, 916]}], "container": true}], "container": true, "role": "item_group"}, {"type": "para", "indent": 0, "text": ["You can snap points based on their proximity to each other (given by the distance threshold) without fusing them. The snap type has more options on the actual snap behavior. This method is commonly used on a small selection of points in classic modeling operations."], "extent": [916, 1183]}, {"type": "para", "indent": 0, "text": ["Snapping to a grid is useful for grabbing points and ordering them to a 3D grid. This method is commonly used on individual point selections in classic modeling operations. Snapping to a grid is also useful when outputting to low res consoles as you can truncate vertices to lie on a certain integer boundaries globally on the model."], "extent": [1183, 1518]}, {"type": "para", "indent": 0, "text": ["Snapping only moves points to new positions. To rewire the vertices of points that were snapped together, you can choose to fuse points after snapping so that only one point retains vertices from the original points."], "extent": [1518, 1736]}, {"type": "para", "indent": 0, "text": ["You can select point attributes and groups that you want to be modified after a point is snapped. You can also specify the heuristics for how the attributes values should be interpolated and how group membership should be assigned."], "extent": [1736, 1970]}, {"level": 2, "id": "fuse", "container": true, "type": "h", "indent": 0, "text": ["Fuse shelf tool"], "extent": [1970, 1999], "body": [{"type": "summary", "indent": 0, "text": ["Welds the selected points together so all vertices inside now share the same point."], "extent": [1999, 2091]}, {"type": "ord_group", "body": [{"blevel": 2, "type": "ord", "indent": 0, "text": ["Select the points you want to merge."], "extent": [2091, 2131]}, {"blevel": 2, "type": "ord", "indent": 0, "text": ["Click the ", {"scheme": "Icon", "value": "SOP/fuse", "type": "link", "text": "", "fullpath": "/nodes/sop/SOP/fuse.html"}, " Fuse tool on the ", {"type": "ui", "text": ["Polygon"]}, " tab."], "extent": [2131, 2194]}], "container": true}, {"type": "para", "indent": 0, "text": ["The merge is based on the proximity of the points to each other. You can change the threshold distance in the ", {"scheme": null, "value": "/ref/panes/parms", "type": "link", "text": ["parameter editor"], "fullpath": "/ref/panes/parms.html"}, "."], "extent": [2194, 2342]}, {"type": "para", "indent": 0, "text": [{"scheme": "Image", "value": "/images/shelf/fuse_before.jpg", "type": "img", "text": ""}, "\n", {"scheme": "Image", "value": "/images/shelf/fuse_after.jpg", "type": "img", "text": ""}], "extent": [2342, 2419]}]}, {"level": 2, "id": "snap", "container": true, "type": "h", "indent": 0, "text": ["Snap shelf tool"], "extent": [2419, 2448], "body": [{"type": "summary", "indent": 0, "text": ["Snaps selected points to the same position but keeps them separate."], "extent": [2448, 2524]}, {"type": "ord_group", "body": [{"blevel": 2, "type": "ord", "indent": 0, "text": ["Select the points you want to snap to the same position."], "extent": [2524, 2584]}, {"blevel": 2, "type": "ord", "indent": 0, "text": ["Click the ", {"scheme": "Icon", "value": "SOP/fuse", "type": "link", "text": "", "fullpath": "/nodes/sop/SOP/fuse.html"}, " Snap tool on the ", {"type": "ui", "text": ["Polygon"]}, " tab."], "extent": [2584, 2647]}], "container": true}, {"type": "para", "indent": 0, "text": ["Snapping is based on the proximity of the points to each other. You can change the threshold distance in the ", {"scheme": null, "value": "/ref/panes/parms", "type": "link", "text": ["parameter editor"], "fullpath": "/ref/panes/parms.html"}, "."], "extent": [2647, 2795]}]}, {"level": 1, "id": "parameters", "container": true, "type": "parameters_section", "indent": 0, "role": "section", "extent": [2795, 2807], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Group"], "extent": [2807, 2815], "body": [{"type": "para", "indent": 4, "text": ["Subset of points that will be snapped."], "extent": [2836, 2880]}], "container": true, "attrs": {"id": "querygroup"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Target Group"], "extent": [2880, 2894], "body": [{"type": "para", "indent": 4, "text": ["When enabled, this is the subset of points that will be snapped to\n    by query points. Otherwise, the query group is also the target group,\n    and the behavior is as if ", {"type": "ui", "text": ["Modify Target"]}, " is on, regardless of its\n    actual value.\n    When there is a second input connected, this group refers to the\n    second input. When ", {"type": "ui", "text": ["Snap Type"]}, " is ", {"type": "q", "text": ["Grid"]}, ", there is no target group."], "extent": [2916, 3296]}], "container": true, "attrs": {"id": "targetgroup"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Modify Target"], "extent": [3296, 3311], "body": [{"type": "para", "indent": 4, "text": ["When disabled, target point attribute values will stay fixed and be\n    copied over to query points, which is useful for fusing to existing\n    geometry.\n    When enabled, both query and target point attributes will be modified\n    and used to interpolate the new attribute value. This is useful if\n    you still want only one subset of points to fuse with another subset,\n    but so that both subsets can be modified (for example, when snapping\n    two mirrored halves together).\n    This parameter is not applicable when a second input is connected,\n    since that geometry cannot be modified."], "extent": [3332, 3933]}], "container": true, "attrs": {"id": "modifyboth"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Position Attribute"], "extent": [3933, 3953], "body": [{"type": "para", "indent": 4, "text": ["This attribute will be used as the position for determining what to\n    snap where.  This attribute can be a point, vertex, or primitive\n    attribute in the first input, and can be a point, vertex, primitive,\n    or detail attribute in the second input; they do not need to be the\n    same.  The ", {"type": "ui", "text": ["Group"]}, " and ", {"type": "ui", "text": ["Target Group"]}, " parameters will be parsed\n    as the corresponding type of group.  If this attribute is not a point\n    attribute in the first input, the Fuse options do not apply, because\n    only points can be fused together."], "extent": [3973, 4519]}], "container": true, "attrs": {"id": "posattrib"}, "role": "item"}], "container": true, "role": "item_group"}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Snap"], "extent": [4519, 4530], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Snap To"], "extent": [4530, 4540], "body": [{"type": "para", "indent": 4, "text": ["The method used to determine which points to snap where."], "extent": [4559, 4621]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Near Points"], "extent": [4621, 4638], "body": [{"type": "para", "indent": 8, "text": ["Snap query points to target points within a specified ", {"type": "ui", "text": ["Snap Distance"]}, "."], "extent": [4638, 4719]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Grid"], "extent": [4719, 4729], "body": [{"type": "para", "indent": 8, "text": ["Snap points to positions in a 3D grid."], "extent": [4729, 4776]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Specified Points"], "extent": [4776, 4798], "body": [{"type": "para", "indent": 8, "text": ["Snap query points to specific target points as specified in the\n        ", {"type": "ui", "text": ["Target Points Attribute"]}, "."], "extent": [4798, 4909]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "snaptype"}, "role": "item"}], "container": true, "role": "item_group"}, {"level": 3, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Near Points"], "extent": [4909, 4929], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Using"], "extent": [4929, 4937], "body": [{"type": "para", "indent": 4, "text": ["The overall method used for determining which points to snap together.\n    The ", {"type": "q", "text": ["Least Target Point Number"]}, " method snaps points to the lowest\n    target point number in range, which can ensure that after snapping,\n    if ", {"type": "ui", "text": ["Output Positions"]}, " is ", {"type": "q", "text": ["Least Point Number"]}, ", no differently\n    snapped points will be within ", {"type": "ui", "text": ["Snap Distance"]}, " of each other.\n    The ", {"type": "q", "text": ["Closest Target Point"]}, " method snaps points to the closest\n    target point, if it is in range, which is preferable if snapping\n    disjoint pieces together."], "extent": [4957, 5475]}], "container": true, "attrs": {"id": "algorithm"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Snap Distance"], "extent": [5475, 5490], "body": [{"type": "para", "indent": 4, "text": ["The maximum distance to snap points together."], "extent": [5506, 5557]}], "container": true, "attrs": {"id": "tol3d"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Output Positions"], "extent": [5557, 5575], "body": [{"type": "para", "indent": 4, "text": ["The method to use to combine values of ", {"type": "ui", "text": ["Position Attribute"]}, "\n    when snapping points together."], "extent": [5604, 5706]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Average Value"], "extent": [5706, 5725], "body": [{"type": "para", "indent": 8, "text": ["Positions are computed as the average of snapped positions."], "extent": [5725, 5793]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Least Point Number"], "extent": [5793, 5817], "body": [{"type": "para", "indent": 8, "text": ["The position of the snapped point with the least point number is used."], "extent": [5817, 5896]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Greatest Point Number"], "extent": [5896, 5923], "body": [{"type": "para", "indent": 8, "text": ["The position of the snapped point with the greatest point number is used."], "extent": [5923, 6005]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Maximum Value"], "extent": [6005, 6024], "body": [{"type": "para", "indent": 8, "text": ["Each component of the position is set to the maximum value of that\n        component among the snapped points."], "extent": [6024, 6143]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Minimum Value"], "extent": [6143, 6162], "body": [{"type": "para", "indent": 8, "text": ["Each component of the position is set to the minimum value of that\n        component among the snapped points."], "extent": [6162, 6281]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Mode"], "extent": [6281, 6291], "body": [{"type": "para", "indent": 8, "text": ["Each component is set to the mode of the values of that component among\n        the snapped points."], "extent": [6291, 6399]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Median"], "extent": [6399, 6411], "body": [{"type": "para", "indent": 8, "text": ["Each component is set to the median of the values of that component\n        among the snapped points."], "extent": [6411, 6521]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Sum"], "extent": [6521, 6530], "body": [{"type": "para", "indent": 8, "text": ["Positions are computed as the sum of snapped positions."], "extent": [6530, 6594]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Sum of Squares"], "extent": [6594, 6614], "body": [{"type": "para", "indent": 8, "text": ["Positions are computed as the sum of squares of snapped positions.\n        Positions are squared component wise."], "extent": [6614, 6735]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Root Mean Square"], "extent": [6735, 6757], "body": [{"type": "para", "indent": 8, "text": ["Positions are computed as the root mean square of each component\n        of the snapped positions."], "extent": [6757, 6864]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Weighted Average"], "extent": [6864, 6886], "body": [{"type": "para", "indent": 8, "text": ["Positions are computed as the weighted average of snapped positions\n        using the ", {"type": "ui", "text": ["Weight Attribute"]}, "."], "extent": [6886, 7002]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Weighted Sum"], "extent": [7002, 7020], "body": [{"type": "para", "indent": 8, "text": ["Positions are computed as the weighted sum of snapped positions using\n        the ", {"type": "ui", "text": ["Weight Attribute"]}, "."], "extent": [7020, 7132]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Minimum Weight"], "extent": [7132, 7152], "body": [{"type": "para", "indent": 8, "text": ["Positions are set to the position of the snapped point with the minimum\n        ", {"type": "ui", "text": ["Weight Attribute"]}, " value."], "extent": [7152, 7268]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Maximum Weight"], "extent": [7268, 7288], "body": [{"type": "para", "indent": 8, "text": ["Positions are set to the position of the snapped point with the maximum\n        ", {"type": "ui", "text": ["Weight Attribute"]}, " value."], "extent": [7288, 7405]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "positionsnapmethod"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Weight Attribute"], "extent": [7405, 7423], "body": [{"type": "para", "indent": 4, "text": ["A floating point or integer weight attribute that is used when\n    ", {"type": "ui", "text": ["Output Positions"]}, " is set to ", {"type": "ui", "text": ["Weighted Average"]}, ", ", {"type": "ui", "text": ["Weighted Sum"]}, ",\n    ", {"type": "ui", "text": ["Minimum Weight"]}, ", or ", {"type": "ui", "text": ["Maximum Weight"]}, ". This attribute is on the target\n    geometry and is on the same geometry type as the ", {"type": "ui", "text": ["Position Attribute"]}, "."], "extent": [7456, 7755]}], "container": true, "attrs": {"id": "positionsnapweightname"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Radius Attribute"], "extent": [7755, 7773], "body": [{"type": "para", "indent": 4, "text": ["When enabled, the point attribute with this name is used to specify\n    the radii of the points. Two points will be able to fuse together\n    if the closest distance between their spheres with\n    the corresponding radius is within the ", {"type": "ui", "text": ["Snap Distance"]}, "."], "extent": [7796, 8056]}], "container": true, "attrs": {"id": "radiusattrib"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Match Attribute"], "extent": [8056, 8073], "body": [{"type": "para", "indent": 4, "text": ["When enabled, the point attribute with this name is used to limit\n    which points can be snapped together by comparing this attribute\u2019s\n    values for the corresponding points.  The comparison is specified\n    by the ", {"type": "ui", "text": ["Match Condition"]}, ".  This attribute can only be an integer or\n    string attribute."], "extent": [8095, 8403]}], "container": true, "attrs": {"id": "matchattrib"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Match Condition"], "extent": [8403, 8420], "body": [{"type": "para", "indent": 4, "text": ["The comparison to use for comparing the ", {"type": "ui", "text": ["Match Attribute"]}, " values of points.\n    ", {"type": "q", "text": ["Equal Attribute Values"]}, " requires values of ", {"type": "ui", "text": ["Match Attribute"]}, " to be equal in order for\n    points to be considered for snapping together, which is useful for snapping within\n    several separate pieces and not between pieces.  ", {"type": "q", "text": ["Unequal Attribute Values"]}, " requires that\n    at least one point has a different value than the rest, which is useful for snapping\n    between several separate pieces and not within pieces."], "extent": [8440, 8945]}], "container": true, "attrs": {"id": "matchtype"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Match Tolerance"], "extent": [8945, 8962], "body": [{"type": "para", "indent": 4, "text": ["Specifies the amount that ", {"type": "ui", "text": ["Match Attribute"]}, " values may differ and still\n    be considered equal when using a floating point ", {"type": "ui", "text": ["Match Attribute"]}, "."], "extent": [8981, 9134]}], "container": true, "attrs": {"id": "matchtol"}, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 3, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Grid"], "extent": [9134, 9147], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Grid Type"], "extent": [9147, 9159], "body": [{"type": "para", "indent": 4, "text": ["How to specify the grid size."], "extent": [9178, 9213]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Grid Spacing"], "extent": [9213, 9231], "body": [{"type": "para", "indent": 8, "text": ["Specify the number of units between each grid line."], "extent": [9231, 9291]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Grid Lines"], "extent": [9291, 9307], "body": [{"type": "para", "indent": 8, "text": ["Specify the number of grid lines every unit."], "extent": [9307, 9360]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Power of 2 Grid Lines"], "extent": [9360, 9387], "body": [{"type": "para", "indent": 8, "text": ["Specify the number of grid lines every unit by powers of 2."], "extent": [9387, 9456]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "gridtype"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Grid Spacing"], "extent": [9456, 9470], "body": [{"type": "para", "indent": 4, "text": ["The number of units between each grid line."], "extent": [9492, 9541]}], "container": true, "attrs": {"id": "gridspacing"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Grid Lines"], "extent": [9541, 9553], "body": [{"type": "para", "indent": 4, "text": ["The number of grid lines every unit."], "extent": [9573, 9615]}], "container": true, "attrs": {"id": "gridlines"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Grid Power 2"], "extent": [9615, 9629], "body": [{"type": "para", "indent": 4, "text": ["The same as gridlines, but a power of two is specified. This\n    means a value of 7 means 128, and 9 means 512."], "extent": [9648, 9765]}], "container": true, "attrs": {"id": "gridpow2"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Grid Offset"], "extent": [9765, 9778], "body": [{"type": "para", "indent": 4, "text": ["A number from 0 to 1 which specifies what offset the grid\n    should have from (0,0,0)."], "extent": [9799, 9892]}], "container": true, "attrs": {"id": "gridoffset"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Grid Rounding"], "extent": [9892, 9907], "body": [{"type": "para", "indent": 4, "text": ["Which way points should snap to the grid."], "extent": [9927, 9974]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Nearest"], "extent": [9974, 9987], "body": [{"type": "para", "indent": 8, "text": ["Snap to closest grid point."], "extent": [9987, 10023]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Down"], "extent": [10023, 10033], "body": [{"type": "para", "indent": 8, "text": ["Snap to the closest grid position, in which the position\n        components are all at most equal to the query point position."], "extent": [10033, 10168]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Up"], "extent": [10168, 10176], "body": [{"type": "para", "indent": 8, "text": ["Snap to the closest grid position, in which the position\n        components are all at least equal to the query point position."], "extent": [10176, 10313]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "gridround"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Grid Tolerance"], "extent": [10313, 10329], "body": [{"type": "para", "indent": 4, "text": ["Maximum distance to move points to grid."], "extent": [10347, 10394]}], "container": true, "attrs": {"id": "gridtol"}, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 3, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Specified Points"], "extent": [10394, 10419], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Target Points Attribute"], "extent": [10419, 10445], "body": [{"type": "para", "indent": 4, "text": ["An integer attribute on the query geometry specifying which\n    element to snap each query element to. Snapping is only performed if\n    the specified element number is found in the target geometry.\n    The ", {"type": "ui", "text": ["Target Points Attribute"]}, " must be on the same geometry class\n    as the query position attribute, and the element numbers refer to\n    elements of the ", {"type": "ui", "text": ["Target Class"]}, "."], "extent": [10470, 10853]}], "container": true, "attrs": {"id": "targetptattrib"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Target Class"], "extent": [10853, 10867], "body": [{"type": "para", "indent": 4, "text": ["The geometry class that the ", {"type": "ui", "text": ["Target Points Attribute"]}, " points to.\n    This should be the same class as the position attribute on the target\n    geometry."], "extent": [10889, 11050]}], "container": true, "attrs": {"id": "targetclass"}, "role": "item"}], "container": true, "role": "item_group"}]}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Fuse"], "extent": [11050, 11061], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Fuse Snapped Points"], "extent": [11061, 11083], "body": [{"type": "para", "indent": 4, "text": ["When enabled, points that are snapped to the same position will be replaced\n    with a single point, connected to all vertices of the original points."], "extent": [11118, 11274]}], "container": true, "attrs": {"id": "consolidatesnappedpoints"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Keep Fused Points"], "extent": [11274, 11293], "body": [{"type": "para", "indent": 4, "text": ["When enabled, points that would otherwise be deleted by the\n    ", {"type": "ui", "text": ["Fuse Snapped Points"]}, " option are kept."], "extent": [11326, 11436]}], "container": true, "attrs": {"id": "keepconsolidatedpoints"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Remove Repeated Vertices and Degenerate Primitives"], "extent": [11436, 11488], "body": [{"type": "para", "indent": 4, "text": ["Remove sequential vertices that reference the same point in polygons or\n    curves, and then deletes any degenerate primitives, such as closed polygons\n    with 2 or fewer vertices, or polygon curves with 1 or fewer vertices."], "extent": [11507, 11738]}], "container": true, "attrs": {"id": "deldegen"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Remove Unused Points from Degenerate Primitives"], "extent": [11738, 11787], "body": [{"type": "para", "indent": 4, "text": ["Remove any points that no longer have vertices connected to them\n    due to the deletion of degenerate primitives."], "extent": [11812, 11932]}], "container": true, "attrs": {"id": "deldegenpoints"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Remove All Unused Points"], "extent": [11932, 11958], "body": [{"type": "para", "indent": 4, "text": ["Remove all points that have no vertices connected to them."], "extent": [11984, 12049]}], "container": true, "attrs": {"id": "delunusedpoints"}, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Output Attributes and Groups"], "extent": [12049, 12084], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Recompute Affected Normals"], "extent": [12084, 12113], "body": [{"type": "para", "indent": 4, "text": ["Recomputes any normals that are affected by polygons that use any\n    fused points."], "extent": [12136, 12225]}], "container": true, "attrs": {"id": "recomputenml"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Snapped Points Group"], "extent": [12225, 12247], "body": [{"type": "para", "indent": 4, "text": ["When enabled, a point group with this name is created containing all\n    points that snapped to another point."], "extent": [12274, 12390]}], "container": true, "attrs": {"id": "snappedgroupname"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Snapped Destination Attribute"], "extent": [12390, 12421], "body": [{"type": "para", "indent": 4, "text": ["When enabled, a point attribute with this name is created, which\n    contains the point number of the point that was snapped to, or -1\n    if not applicable."], "extent": [12449, 12612]}], "container": true, "attrs": {"id": "snappedattribname"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Attributes to Snap"], "extent": [12612, 12632], "body": [{"type": "para", "indent": 4, "text": ["The number of patterns of attributes to be modified."], "extent": [12658, 12716]}], "container": true, "attrs": {"id": "numpointattribs"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Output Values"], "extent": [12716, 12731], "body": [{"type": "para", "indent": 4, "text": ["The heuristic to use to determine the new attribute value of a point\n    based on the points that it snapped to. These interpolate over only\n    target points, unless ", {"type": "ui", "text": ["Modify Target"]}, " is enabled.\n    ", {"type": "q", "text": ["First Match"]}, " will snap to the attribute value of the point with\n    the least point number. Likewise, ", {"type": "q", "text": ["Last Match"]}, " will snap to the point\n    with the greatest number."], "extent": [12731, 13106]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Average Value"], "extent": [13106, 13125], "body": [{"type": "para", "indent": 8, "text": ["Attributes are computed as the average of snapped point attribute values.\n        Applies to numerical attributes."], "extent": [13125, 13248]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Least Point Number"], "extent": [13248, 13272], "body": [{"type": "para", "indent": 8, "text": ["The attribute value of the snapped point with the least point number\n        is used."], "extent": [13272, 13366]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Greatest Point Number"], "extent": [13366, 13393], "body": [{"type": "para", "indent": 8, "text": ["The attribute value of the snapped point with the greatest point number\n        is used."], "extent": [13393, 13490]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Maximum Value"], "extent": [13490, 13509], "body": [{"type": "para", "indent": 8, "text": ["Each component of the attribute is set to the maximum value of that\n        component among the snapped points. Applies to string and numerical\n        attributes."], "extent": [13509, 13681]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Minimum Value"], "extent": [13681, 13700], "body": [{"type": "para", "indent": 8, "text": ["Each component of the attribute is set to the minimum value of that\n        component among the snapped points. Applies to string and numerical\n        attributes."], "extent": [13700, 13872]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Mode"], "extent": [13872, 13882], "body": [{"type": "para", "indent": 8, "text": ["Each component is set to the mode of the values of that component among\n        the snapped points. Applies to string and numerical attributes."], "extent": [13882, 14034]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Median"], "extent": [14034, 14046], "body": [{"type": "para", "indent": 8, "text": ["Each component is set to the median of the values of that component\n        among the snapped points. Applies to string and numerical attributes."], "extent": [14046, 14200]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Sum"], "extent": [14200, 14209], "body": [{"type": "para", "indent": 8, "text": ["Attribute values are computed as the sum of attribute values of snapped\n        points. Applies to numerical attributes."], "extent": [14209, 14338]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Sum of Squares"], "extent": [14338, 14358], "body": [{"type": "para", "indent": 8, "text": ["Attribute values are computed as the sum of squares of attribute values\n        of snapped points. Attribute values are squared component wise. Applies\n        to numerical attributes."], "extent": [14358, 14551]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Root Mean Square"], "extent": [14551, 14573], "body": [{"type": "para", "indent": 8, "text": ["Attribute values are computed as the root mean square of each component\n        of the attribute values of the snapped points. Applies to numerical\n        attributes."], "extent": [14573, 14749]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Concatenate"], "extent": [14749, 14766], "body": [{"type": "para", "indent": 8, "text": ["Attribute values of the snapped points are concatenated together. Applies\n        to string, array, dictionary and numerical attributes.\n        For string and array attributes, values are concatenated together, and\n        for dictionary attributes, individual dictionaries are merged.\n        For numerical attributes, an array attribute of the same name is created\n        to replace the attribute, which will contain the array of attribute values\n        of fused target points."], "extent": [14766, 15257]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Weighted Average"], "extent": [15257, 15279], "body": [{"type": "para", "indent": 8, "text": ["Attribute values are computed as the weighted average of attribute values\n        of the snapped points using the ", {"type": "ui", "text": ["Weight Attribute"]}, ". Applies to\n        numerical attributes."], "extent": [15279, 15464]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Weighted Sum"], "extent": [15464, 15482], "body": [{"type": "para", "indent": 8, "text": ["Attribute values are computed as the weighted sum of attribute values\n        of the snapped points using the ", {"type": "ui", "text": ["Weight Attribute"]}, ". Applies to\n        numerical attributes."], "extent": [15482, 15663]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Minimum Weight"], "extent": [15663, 15683], "body": [{"type": "para", "indent": 8, "text": ["Attribute values are set to the attribute value of the snapped point with\n        the minimum ", {"type": "ui", "text": ["Weight Attribute"]}, " value."], "extent": [15683, 15813]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Maximum Weight"], "extent": [15813, 15833], "body": [{"type": "para", "indent": 8, "text": ["Attribute values are set to the attribute value of the snapped point with\n        the maximum ", {"type": "ui", "text": ["Weight Attribute"]}, " value."], "extent": [15833, 15963]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Concatenate in Weight Order"], "extent": [15963, 15996], "body": [{"type": "para", "indent": 8, "text": ["Attribute values of the snapped points are concatenated in the order of\n        increasing ", {"type": "ui", "text": ["Weight Attribute"]}, " value. See ", {"type": "ui", "text": ["Concatenate"]}, " for the\n        acceptable types and their behaviours."], "extent": [15996, 16199]}], "container": true}], "container": true}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Point Attributes"], "extent": [16199, 16217], "body": [{"type": "para", "indent": 4, "text": ["The point attributes that you want to be merged together after fusing.\n    Only certain types of attributes can be used for each ", {"type": "ui", "text": ["Snap Method"]}, "."], "extent": [16217, 16368]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Weight Attribute"], "extent": [16368, 16386], "body": [{"type": "para", "indent": 4, "text": ["A floating point or integer weight attribute that is used to merge\n    attribute values when ", {"type": "ui", "text": ["Output Values"]}, " is set to ", {"type": "ui", "text": ["Weighted Average"]}, ",\n    ", {"type": "ui", "text": ["Weighted Sum"]}, ", ", {"type": "ui", "text": ["Minimum Weight"]}, ", ", {"type": "ui", "text": ["Maximum Weight"]}, ", or\n    ", {"type": "ui", "text": ["Concatenate in Weight Order"]}, ". This attribute is on the target geometry\n    and is on the same geometry type as the ", {"type": "ui", "text": ["Position Attribute"]}, "."], "extent": [16386, 16745]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Groups to Snap"], "extent": [16745, 16761], "body": [{"type": "para", "indent": 4, "text": ["The number of patterns of groups to be modified."], "extent": [16781, 16835]}], "container": true, "attrs": {"id": "numgroups"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Group Propagation"], "extent": [16835, 16854], "body": [{"type": "para", "indent": 4, "text": ["The heuristic to use to determine how the points get assigned to the\n    Point Groups of the points they snapped to."], "extent": [16854, 16976]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Least Point Number"], "extent": [16976, 17000], "body": [{"type": "para", "indent": 8, "text": ["Group membership is determined by the snapped point with the least point number."], "extent": [17000, 17089]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Greatest Point Number"], "extent": [17089, 17116], "body": [{"type": "para", "indent": 8, "text": ["Group membership is determined by the snapped point with the greatest point number."], "extent": [17116, 17208]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Union"], "extent": [17208, 17219], "body": [{"type": "para", "indent": 8, "text": ["Snapped points are included if any snapped point is in the group."], "extent": [17219, 17293]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Intersect"], "extent": [17293, 17308], "body": [{"type": "para", "indent": 8, "text": ["Snapped points are included if all snapped points are in the group."], "extent": [17308, 17384]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Most Common"], "extent": [17384, 17401], "body": [{"type": "para", "indent": 8, "text": ["Snapped points are included if more than half of the snapped points were in the group."], "extent": [17401, 17498]}], "container": true}], "container": true}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Point Group Names"], "extent": [17498, 17517], "body": [{"type": "para", "indent": 4, "text": ["The names of the point groups that you want to be updated after\n    fusing according to the ", {"type": "ui", "text": ["Group Propagation"]}, "."], "extent": [17517, 17637]}], "container": true, "role": "item"}], "container": true, "role": "item_group"}]}], "text": "Parameters"}, {"level": 1, "id": "related", "container": true, "type": "related_section", "indent": 0, "role": "section", "extent": [17637, 17646], "body": [{"type": "bullet_group", "body": [{"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/sop/pointweld", "type": "link", "text": "", "fullpath": "/nodes/sop/pointweld.html"}], "extent": [17646, 17670]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/sop/facet", "type": "link", "text": "", "fullpath": "/nodes/sop/facet.html"}], "extent": [17670, 17689]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/sop/uvfuse", "type": "link", "text": "", "fullpath": "/nodes/sop/uvfuse.html"}], "extent": [17689, 17709]}], "container": true}], "text": "Related"}], "title": ["Fuse"], "summary": ["Merges or snaps points."]}