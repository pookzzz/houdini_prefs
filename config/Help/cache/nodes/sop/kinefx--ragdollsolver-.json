{"type": "root", "attrs": {"type": "node", "context": "sop", "namespace": "kinefx", "internal": "ragdollsolver", "icon": "SOP/kinefx-ragdollsolver", "tags": "animation, character, kinefx, rbd", "since": "19.0", "version": ""}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["Ragdoll Solver"], "extent": [157, 176]}, {"type": "summary", "indent": 0, "text": ["Runs a ragdoll RBD simulation on the target skeleton."], "extent": [176, 238]}, {"type": "para", "indent": 0, "text": ["This node runs a ragdoll RBD simulation on the target skeleton. This node is also a wrapper around a DOP network to simplify the running of ragdoll solves."], "extent": [238, 395]}, {"type": "bullet_group", "body": [{"blevel": 2, "type": "bullet", "indent": 0, "text": ["The first input is the KineFX skeleton to solve. "], "extent": [395, 447]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": ["The second input represents the constraint geometry as set up by the ", {"scheme": "Icon", "value": "/icons/SOP/kinefx-ragdollconstraints.svg", "type": "link", "text": "", "fullpath": "/icons/SOP/kinefx-ragdollconstraints.svg.html"}, " ", {"scheme": "Node", "value": "/nodes/sop/kinefx--ragdollconstraints", "type": "link", "text": ["Ragdoll Constraints SOP"], "fullpath": "/nodes/sop/kinefx--ragdollconstraints.html"}, "."], "extent": [447, 629]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": ["The third input provides the collision shapes as set up by the ", {"scheme": "Icon", "value": "/icons/SOP/kinefx-ragdollcollisionshapes.svg", "type": "link", "text": "", "fullpath": "/icons/SOP/kinefx-ragdollcollisionshapes.svg.html"}, " ", {"scheme": "Node", "value": "/nodes/sop/kinefx--ragdollcollisionshapes", "type": "link", "text": ["Ragdoll Collisions Shapes SOP"], "fullpath": "/nodes/sop/kinefx--ragdollcollisionshapes.html"}, "."], "extent": [629, 819]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": ["The fourth input is an optional geometry to act as a collider. This input must be in form of a valid packed geometry or RBD packed geometry as set up by a ", {"scheme": "Icon", "value": "/icons/SOP/rbdpack.svg", "type": "link", "text": "", "fullpath": "/icons/SOP/rbdpack.svg.html"}, " ", {"scheme": "Node", "value": "/nodes/sop/rbdpack", "type": "link", "text": ["RBD Pack SOP"], "fullpath": "/nodes/sop/rbdpack.html"}, " node, if the geometry has its own set of constraints."], "extent": [819, 1093]}], "container": true}, {"type": "para", "indent": 0, "text": ["You can dive into this node to add DOP nodes and apply custom forces."], "extent": [1093, 1164]}, {"level": 1, "id": "parameters", "container": true, "type": "parameters_section", "indent": 0, "role": "section", "extent": [1164, 1176], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Reset Simulation"], "extent": [1176, 1195], "body": [{"type": "para", "indent": 4, "text": ["Clears the entire simulation cache. "], "extent": [1215, 1257]}, {"type": "para", "indent": 4, "text": ["See ", {"scheme": "Node", "value": "/nodes/obj/dopnet", "type": "link", "text": "", "fullpath": "/nodes/obj/dopnet.html"}, "."], "extent": [1257, 1285]}], "container": true, "attrs": {"id": "resimulate"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Start Frame"], "extent": [1285, 1298], "body": [{"type": "para", "indent": 4, "text": ["Specifies the frame at which the simulation will start cooking. "], "extent": [1318, 1388]}, {"type": "para", "indent": 4, "text": ["See ", {"scheme": "Node", "value": "/nodes/obj/dopnet", "type": "link", "text": "", "fullpath": "/nodes/obj/dopnet.html"}, "."], "extent": [1388, 1416]}], "container": true, "attrs": {"id": "startframe"}, "role": "item"}], "container": true, "role": "item_group"}, {"level": 2, "id": "solver", "container": true, "type": "h", "indent": 0, "text": ["Solver"], "extent": [1416, 1438], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Time Scale"], "extent": [1438, 1451], "body": [{"type": "para", "indent": 4, "text": ["The scale value (multiplier) for the time step used by the solver.\n    This can create bullet time-like effects where the physics of the Bullet solver runs at a different rate than the Houdini playbar.\n    A value of 2 causes objects to fall twice as fast, and a value of 0.1 slows them down to a tenth of the speed.\n    This parameter can be animated."], "extent": [47, 405]}], "container": true, "attrs": {"id": "timescale"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Number of Substeps"], "extent": [1527, 1547], "body": [{"type": "para", "indent": 4, "text": ["The number of substeps for each simulation step. This is used by Bullet internally. Increasing this number increases the resolution of the simulation."], "extent": [443, 599]}, {"type": "tip_group", "body": [{"ext": null, "type": "tip", "indent": 4, "role": "item", "extent": [599, 609], "body": [{"type": "para", "indent": 8, "text": ["Increasing the number of substeps is one way to fix the problem of collisions not being detected for quickly moving objects."], "extent": [609, 743]}], "container": true}], "container": true, "role": "item_group"}], "container": true, "attrs": {"id": "substeps"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Constraint Iterations"], "extent": [1621, 1644], "body": [{"type": "para", "indent": 8, "text": ["The number of constraint iterations used by the solver.\n        The more iterations, the more accurate the constraint and collision handling."], "extent": [3018, 3169]}], "container": true, "attrs": {"id": "numiteration"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Enable Gravity"], "extent": [1726, 1742], "body": [{"type": "para", "indent": 4, "text": ["When on, gravity is applied to the skeleton. "], "extent": [1765, 1816]}], "container": true, "attrs": {"id": "enablegravity"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Gravity"], "extent": [1816, 1825], "body": [{"type": "para", "indent": 4, "text": ["Specifies the amount of gravity force to apply to the skeleton along a given axis."], "extent": [1842, 1930]}, {"type": "para", "indent": 4, "text": ["This parameter is only available when ", {"type": "ui", "text": ["Enable Gravity"]}, " is ", {"type": "em", "text": ["on"]}, "."], "extent": [1930, 2001]}], "container": true, "attrs": {"id": "gravity"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Enable Bullet World Scale"], "extent": [2001, 2028], "body": [{"type": "para", "indent": 4, "text": ["When on, the constraint rest lengths are scaled."], "extent": [2049, 2103]}], "container": true, "attrs": {"id": "enablescale"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Bullet World Scale"], "extent": [2103, 2123], "body": [{"type": "para", "indent": 4, "text": ["Specifies the scale value (multiplier)."], "extent": [2138, 2183]}], "container": true, "attrs": {"id": "scale"}, "role": "item"}], "container": true, "role": "item_group"}, {"level": 3, "id": "groundplane", "container": true, "type": "h", "indent": 0, "text": ["Ground Plane"], "extent": [2183, 2218], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Add Ground Plane"], "extent": [2218, 2237], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["None"], "extent": [2257, 2267], "body": [{"type": "para", "indent": 8, "text": ["The ground plane is disabled."], "extent": [2267, 2306]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Ground Plane"], "extent": [2306, 2324], "body": [{"type": "para", "indent": 8, "text": ["Adds a ground plane to the simulation."], "extent": [2324, 2372]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 8, "text": ["Position"], "extent": [2372, 2390], "body": [{"type": "para", "indent": 12, "text": ["Specifies the location of the center of the ground plane."], "extent": [2416, 2487]}], "container": true, "attrs": {"id": "ground_t"}}, {"type": "dt", "indent": 8, "text": ["Rotation"], "extent": [2487, 2505], "body": [{"type": "para", "indent": 12, "text": ["Specifies the rotation of the ground plane."], "extent": [2531, 2588]}], "container": true, "attrs": {"id": "ground_r"}}], "container": true}], "container": true}, {"type": "dt", "indent": 4, "text": ["Height Field"], "extent": [2588, 2606], "body": [{"type": "para", "indent": 8, "text": ["Adds a height field static object to the simulation."], "extent": [2606, 2668]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 8, "text": ["Height Field"], "extent": [2668, 2690], "body": [{"type": "para", "indent": 12, "text": ["Specified the SOP path to the height field geometry."], "extent": [2722, 2788]}], "container": true, "attrs": {"id": "heightfieldsop"}}, {"type": "dt", "indent": 8, "text": ["Use Deforming Geometry"], "extent": [2788, 2820], "body": [{"type": "para", "indent": 12, "text": ["When on, the geometry for the object is pulled from the chosen SOP at each timestep."], "extent": [2855, 2953]}], "container": true, "attrs": {"id": "ground_animategeo"}}], "container": true}], "container": true}, {"type": "dt", "indent": 4, "text": ["Bounce"], "extent": [2953, 2965], "body": [{"type": "para", "indent": 8, "text": ["Specifies the elasticity of the object. If two objects of bounce 1.0 collide, they will rebound without losing energy. If two objects of bounce 0.0 collide, they will come to a standstill."], "extent": [2992, 3190]}], "container": true, "attrs": {"id": "ground_bounce"}}, {"type": "dt", "indent": 4, "text": ["Friction"], "extent": [3190, 3204], "body": [{"type": "para", "indent": 8, "text": ["Specifies the coefficient of friction for the object. A value of 0 means the object is frictionless."], "extent": [3233, 3343]}, {"type": "para", "indent": 8, "text": ["This governs how much tangential velocity is affected by collisions and resting contacts."], "extent": [3343, 3442]}], "container": true, "attrs": {"id": "ground_friction"}}], "container": true}], "container": true, "attrs": {"id": "useground"}, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 3, "id": "collisiongeo", "container": true, "type": "h", "indent": 0, "text": ["Collision Geometry"], "extent": [3442, 3484], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Initial Object Type"], "extent": [3484, 3506], "body": [{"type": "para", "indent": 4, "text": ["Specifies the initial state of the objects. "], "extent": [3538, 3592]}, {"type": "para", "indent": 4, "text": ["See ", {"scheme": "Node", "value": "/nodes/dop/rbdpackedobject", "type": "link", "text": "", "fullpath": "/nodes/dop/rbdpackedobject.html"}, "."], "extent": [3592, 3629]}], "container": true, "attrs": {"id": "collision_initialstate"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Collision Shape"], "extent": [3629, 3646], "body": [{"type": "para", "indent": 4, "text": ["The shape used by the Bullet engine to represent the object. The ", {"type": "ui", "text": ["Show Guide Geometry"]}, " parameter can be used to visualize this collision shape."], "extent": [552, 703]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Convex Hull"], "extent": [60, 77], "body": [{"type": "para", "indent": 8, "text": ["The default shape for the object. The ", {"scheme": "Node", "value": "/nodes/dop/bulletrbdsolver", "type": "link", "text": ["Bullet Solver"], "fullpath": "/nodes/dop/bulletrbdsolver.html"}, " creates a collision shape from the convex hull of the geometry points."], "extent": [77, 236]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Concave"], "extent": [236, 249], "body": [{"type": "para", "indent": 8, "text": ["The ", {"scheme": "Node", "value": "/nodes/dop/bulletrbdsolver", "type": "link", "text": ["Bullet Solver"], "fullpath": "/nodes/dop/bulletrbdsolver.html"}, " converts the geometry to polygons and creates a concave collision shape from the resulting triangles.\n        This shape is useful when simulating concave objects such as a torus or a hollow tube. However, it is recommended to only use the concave representation when necessary, since the convex hull representation typically provides better performance."], "extent": [249, 658]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Box"], "extent": [658, 667], "body": [{"type": "para", "indent": 8, "text": ["The bounding box of the object."], "extent": [667, 708]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Capsule"], "extent": [708, 721], "body": [{"type": "para", "indent": 8, "text": ["The bounding capsule of the object."], "extent": [721, 766]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Cylinder"], "extent": [766, 780], "body": [{"type": "para", "indent": 8, "text": ["The bounding cylinder of the object."], "extent": [780, 826]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Compound"], "extent": [826, 840], "body": [{"type": "para", "indent": 8, "text": ["Creates a complex shape consisting of Bullet primitives (including boxes, spheres, and cylinders). You will need to use the ", {"scheme": "Node", "value": "/nodes/sop/bakeode", "type": "link", "text": ["Bake ODE SOP"], "fullpath": "/nodes/sop/bakeode.html"}, "."], "extent": [840, 1006]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Sphere"], "extent": [1006, 1018], "body": [{"type": "para", "indent": 8, "text": ["The bounding sphere of the object."], "extent": [1018, 1062]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Plane"], "extent": [1062, 1073], "body": [{"type": "para", "indent": 8, "text": ["A static ground plane."], "extent": [1073, 1104]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "collision_georep"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Overwrite Constraints from SOP"], "extent": [3731, 3763], "body": [{"type": "para", "indent": 4, "text": ["When on, the constraints from the ", {"type": "ui", "text": ["Collision Geometry"]}, " input are imported on every time step."], "extent": [3797, 3898]}], "container": true, "attrs": {"id": "collision_reloadfromsops"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Overwrite Attributes from SOP"], "extent": [3898, 3929], "body": [{"type": "para", "indent": 4, "text": ["When on, specifies a list of point attributes that are updated on each frame from the simulation geometry."], "extent": [3965, 4077]}], "container": true, "attrs": {"id": "collision_overwritefromsop"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Overwrite Attributes from SOP"], "extent": [4077, 4108], "body": [{"type": "para", "indent": 4, "text": ["Specifies the names of the point attributes to update on each frame."], "extent": [4147, 4221]}, {"type": "para", "indent": 4, "text": ["This parameter is only available when the ", {"type": "ui", "text": ["Overwrite Attributes from SOP"]}, " checkbox is ", {"type": "em", "text": ["on"]}, "."], "extent": [4221, 4320]}], "container": true, "attrs": {"id": "collision_overwriteattributes"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Density"], "extent": [4320, 4329], "body": [{"type": "para", "indent": 4, "text": ["Specifies the mass of an object as its volume times its density."], "extent": [4356, 4426]}, {"type": "para", "indent": 4, "text": ["See ", {"scheme": "Node", "value": "/nodes/dop/rbdpackedobject", "type": "link", "text": "", "fullpath": "/nodes/dop/rbdpackedobject.html"}, "."], "extent": [4426, 4463]}], "container": true, "attrs": {"id": "collision_density"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Rotational Stiffness"], "extent": [4463, 4485], "body": [{"type": "para", "indent": 4, "text": ["When an object receives a glancing blow, it will often acquire a spin. The amount of spin acquired depends on the shape and mass distribution of the object, known as the inertial tensor. The ", {"type": "ui", "text": ["Rotational Stiffness"]}, " is a scale factor applied to this. A higher stiffness will make the object less liable to spinning, and a lower value will make it more ready to spin."], "extent": [4528, 4900]}, {"type": "para", "indent": 4, "text": ["See ", {"scheme": "Node", "value": "/nodes/dop/rbdpackedobject", "type": "link", "text": "", "fullpath": "/nodes/dop/rbdpackedobject.html"}, "."], "extent": [4900, 4937]}], "container": true, "attrs": {"id": "collision_inertialtensorstiffness"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Bounce"], "extent": [4937, 4945], "body": [{"type": "para", "indent": 4, "text": ["Specifies the elasticity of the object."], "extent": [4971, 5016]}, {"type": "para", "indent": 4, "text": ["See ", {"scheme": "Node", "value": "/nodes/dop/rbdpackedobject", "type": "link", "text": "", "fullpath": "/nodes/dop/rbdpackedobject.html"}, "."], "extent": [5016, 5053]}], "container": true, "attrs": {"id": "collision_bounce"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Friction"], "extent": [5053, 5063], "body": [{"type": "para", "indent": 4, "text": ["Specifies the coefficient of friction of the object."], "extent": [5091, 5149]}, {"type": "para", "indent": 4, "text": ["See ", {"scheme": "Node", "value": "/nodes/dop/rbdpackedobject", "type": "link", "text": "", "fullpath": "/nodes/dop/rbdpackedobject.html"}, "."], "extent": [5149, 5186]}], "container": true, "attrs": {"id": "collision_friction"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Transfer Attributes"], "extent": [5186, 5207], "body": [{"type": "para", "indent": 4, "text": ["Specifies the listed attributes to be transferred to the output collision geometry."], "extent": [5242, 5331]}], "container": true, "attrs": {"id": "collision_transferattribs"}, "role": "item"}], "container": true, "role": "item_group"}]}]}, {"level": 2, "id": "ragdoll", "container": true, "type": "h", "indent": 0, "text": ["Ragdoll"], "extent": [5331, 5355], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Rest Pose Attribute"], "extent": [5355, 5377], "body": [{"type": "para", "indent": 4, "text": ["Specifies the name of the rest transform point attribute."], "extent": [5401, 5464]}, {"type": "note_group", "body": [{"type": "note", "indent": 4, "role": "item", "extent": [5464, 5474], "body": [{"type": "para", "indent": 8, "text": ["In order for the solve to behave as expected, the ", {"type": "ui", "text": ["Rest Pose Attribute"]}, " has to be the same as the rest pose attribute used to configure the collision shapes, in the ", {"scheme": "Icon", "value": "/icons/SOP/kinefx-ragdollcollisionshapes.svg", "type": "link", "text": "", "fullpath": "/icons/SOP/kinefx-ragdollcollisionshapes.svg.html"}, " ", {"scheme": "Node", "value": "/nodes/sop/kinefx--ragdollcollisionshapes", "type": "link", "text": ["Ragdoll Collision Shapes SOP"], "fullpath": "/nodes/sop/kinefx--ragdollcollisionshapes.html"}, " node."], "extent": [5474, 5779]}], "container": true}], "container": true, "role": "item_group"}], "container": true, "attrs": {"id": "restposeattrib"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Clip Range"], "extent": [8728, 8740], "body": [{"type": "para", "indent": 4, "text": ["Read the frame range from the ", {"type": "code", "text": ["clipinfo"]}, " detail attribute on the input geometry, or set a custom frame range."], "extent": [8764, 8879]}], "container": true, "attrs": {"id": "cliprangemode"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Frame Range"], "extent": [8879, 8892], "body": [{"type": "para", "indent": 4, "text": ["The custom frame range of the animation. This parameter is only available when ", {"type": "ui", "text": ["Clip Range"]}, " is set to ", {"type": "ui", "text": ["Custom Frame Range"]}, ". "], "extent": [8913, 9047]}, {"type": "para", "indent": 4, "text": ["Use the action button on this parameter to populate the values from either the ", {"type": "code", "text": ["clipinfo"]}, " detail attribute, the scene frame range, or the playback frame range."], "extent": [9047, 9212]}], "container": true, "attrs": {"id": "framerange"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Allow Initial Violation of Limits"], "extent": [5856, 5891], "body": [{"type": "para", "indent": 4, "text": ["When on, if the rotation limits are initially violated, then the limits will not be enforced but further rotation will be prevented. This allows the objects to naturally move back within the rotation limits, instead of introducing sudden motion at the beginning of the simulation."], "extent": [5920, 6206]}], "container": true, "attrs": {"id": "computeinitialerror"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Overwrite Internal Constraints from SOP"], "extent": [6206, 6247], "body": [{"type": "para", "indent": 4, "text": ["When on, the ragdoll internal constraints are imported on every time step."], "extent": [6280, 6360]}], "container": true, "attrs": {"id": "internal_reloadfromsops"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Overwrite External Constraints from SOP"], "extent": [6360, 6401], "body": [{"type": "para", "indent": 4, "text": ["When on, the ragdoll external constraints are imported on every time step."], "extent": [6434, 6514]}], "container": true, "attrs": {"id": "external_reloadfromsops"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Partial Ragdoll"], "extent": [6514, 6531], "body": [{"type": "para", "indent": 4, "text": ["Some points in the skeleton will be simulated, while others will follow the animation clip. For example, you can have the lower body animated by a walking clip, but the upper body can be ragdolled and react to hits from simulated objects."], "extent": [6555, 6799]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Joints With Collision Shapes"], "extent": [6799, 6833], "body": [{"type": "para", "indent": 8, "text": ["All the points in the skeleton that have a collision shape will be simulated."], "extent": [6833, 6920]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Custom Joint Group"], "extent": [6920, 6945], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 8, "text": ["Partial Ragdoll Group"], "extent": [6945, 6976], "body": [{"type": "para", "indent": 12, "text": ["Specifies which points to simulate."], "extent": [7006, 7055]}], "container": true, "attrs": {"id": "partialgroup"}}], "container": true}], "container": true}], "container": true}], "container": true, "attrs": {"id": "partialragdoll"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Pin Root Collision Shapes"], "extent": [7055, 7082], "body": [{"type": "para", "indent": 4, "text": ["When on, pin constraints are created for the collision shapes that are at a beginning of a chain (and have no parent shape) in order to keep them attached to the skeleton."], "extent": [7099, 7276]}], "container": true, "attrs": {"id": "pinroot"}, "role": "item"}], "container": true, "role": "item_group"}, {"level": 3, "id": "stiffness", "container": true, "type": "h", "indent": 0, "text": ["Stiffness"], "extent": [7276, 7306], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Enable Stiffness"], "extent": [7306, 7325], "body": [{"type": "para", "indent": 4, "text": ["When on, stiffness adds a certain resistance to the solver\u2019s attempts to move points from their current orientation to their ", {"type": "em", "text": ["target"]}, " (animated or simulated) orientation."], "extent": [7350, 7526]}], "container": true, "attrs": {"id": "enablestiffness"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Group"], "extent": [7526, 7533], "body": [{"type": "para", "indent": 4, "text": ["Specifies which points you want to become stiff."], "extent": [7557, 7611]}], "container": true, "attrs": {"id": "stiffnessgroup"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Stiffness Value"], "extent": [7611, 7628], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Constant"], "extent": [7657, 7671], "body": [{"type": "para", "indent": 8, "text": ["The stiffness is the same for the duration of the simulation. "], "extent": [7671, 7743]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Ramp"], "extent": [7743, 7753], "body": [{"type": "para", "indent": 8, "text": ["Changes the stiffness value according to a ramp based on how long the skeleton has been affected by the simulation."], "extent": [7753, 7878]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "stiffnessvalue"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Stiffness"], "extent": [7878, 7889], "body": [{"type": "para", "indent": 4, "text": ["Specifies how much to resist changes to the current point rotations. A value between 0.2 (the default) and 0.5 appear as ", {"type": "em", "text": ["stiff but not too stiff"]}, ". Values of 1 or more appear very stiff."], "extent": [7908, 8100]}, {"type": "para", "indent": 4, "text": ["This parameter is only available when ", {"type": "ui", "text": ["Stiffness Value"]}, " is set to ", {"type": "ui", "text": ["Constant"]}, "."], "extent": [8100, 8187]}], "container": true, "attrs": {"id": "stiffness"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Time Range"], "extent": [8187, 8199], "body": [{"type": "para", "indent": 4, "text": ["Sets the start and end times (in seconds) corresponding to the start and end of \n    the ramp. For example, if you set ", {"type": "ui", "text": ["Time Range"]}, " to 0.0 and 5.0, the ramp will let you control the stiffness over the first 5 seconds of the simulation. Outside this range, the ramp will extend the first and last values."], "extent": [8230, 8541]}, {"type": "para", "indent": 4, "text": ["This parameter is only available when ", {"type": "ui", "text": ["Stiffness Value"]}, " is set to ", {"type": "ui", "text": ["Ramp"]}, "."], "extent": [8541, 8624]}], "container": true, "attrs": {"id": "stiffnessramprangemin"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Stiffness Scale"], "extent": [8624, 8641], "body": [{"type": "para", "indent": 4, "text": ["A scale (multiplier) on the value of the ", {"type": "ui", "text": ["Stiffness Ramp"]}, "."], "extent": [8665, 8731]}, {"type": "para", "indent": 4, "text": ["This parameter is only available when ", {"type": "ui", "text": ["Stiffness Value"]}, " is set to ", {"type": "ui", "text": ["Ramp"]}, "."], "extent": [8731, 8814]}], "container": true, "attrs": {"id": "stiffnessscale"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Enable Stiffness Scale Attribute"], "extent": [8814, 8848], "body": [{"type": "para", "indent": 4, "text": ["Scale the ", {"type": "ui", "text": ["Stiffness"]}, " value by the specified point attribute."], "extent": [8884, 8953]}, {"type": "note_group", "body": [{"type": "note", "indent": 4, "role": "item", "extent": [8953, 8963], "body": [{"type": "para", "indent": 8, "text": ["The point attribute must be a float between 0 and 1."], "extent": [8963, 9025]}], "container": true}], "container": true, "role": "item_group"}], "container": true, "attrs": {"id": "enablestiffnessscaleattrib"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Stiffness Scale Attribute"], "extent": [9025, 9052], "body": [{"type": "para", "indent": 4, "text": ["Name of the point attribute to use for scaling the ", {"type": "ui", "text": ["Stiffness"]}, " value."], "extent": [9082, 9159]}], "container": true, "attrs": {"id": "stiffnessscaleattrib"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Stiffness Ramp"], "extent": [9159, 9175], "body": [{"type": "para", "indent": 4, "text": ["Sets the stiffness at each point during the simulation. You have to set up a ", {"type": "ui", "text": ["Time Range"]}, " and define the stiffness in just that range. Outside this range, the ramp extends the first and last values."], "extent": [9198, 9404]}, {"type": "para", "indent": 4, "text": ["This parameter is only available when ", {"type": "ui", "text": ["Stiffness Value"]}, " is set to ", {"type": "ui", "text": ["Ramp"]}, "."], "extent": [9404, 9487]}], "container": true, "attrs": {"id": "stiffnessramp"}, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 3, "id": "motors", "container": true, "type": "h", "indent": 0, "text": ["Motors"], "extent": [9487, 9511], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Enable Motor"], "extent": [9511, 9526], "body": [{"type": "para", "indent": 4, "text": ["When on, a certain amount of effort is spent to make points follow the animation clip, however the points are still simulated and simulated forces can modify or \n    overcome the motor effect."], "extent": [9547, 9745]}], "container": true, "attrs": {"id": "enablemotor"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Group"], "extent": [9745, 9752], "body": [{"type": "para", "indent": 4, "text": ["Specifies which points should be (partially) animated by the clip."], "extent": [9772, 9844]}], "container": true, "attrs": {"id": "motorgroup"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Strength Value"], "extent": [9844, 9860], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Constant"], "extent": [9893, 9907], "body": [{"type": "para", "indent": 8, "text": ["The motor strength is the same for the duration of the simulation. "], "extent": [9907, 9984]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Ramp"], "extent": [9984, 9994], "body": [{"type": "para", "indent": 8, "text": ["Changes the motor strength value according to a ramp and how long the skeleton has been affected by the simulation."], "extent": [9994, 10119]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "motorstrengthvalue"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Motor Strength"], "extent": [10119, 10135], "body": [{"type": "para", "indent": 4, "text": ["Sets how much effort to spend making the points follow the clip. The default value of 10 is enough to overcome gravity but still allows collisions to overcome the motor. You can play with increasing or decreasing this value to get the effect you want."], "extent": [10158, 10415]}, {"type": "para", "indent": 4, "text": ["This parameter is only available when ", {"type": "ui", "text": ["Strength Value"]}, " is set to ", {"type": "ui", "text": ["Constant"]}, "."], "extent": [10415, 10501]}], "container": true, "attrs": {"id": "motorstrength"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Correction Time"], "extent": [10501, 10518], "body": [{"type": "para", "indent": 4, "text": ["Sets how quickly or slowly (in seconds) it takes the solver to correct deviations from the target point rotations (such as after a collision). Lower values make the character ", {"type": "em", "text": ["recover"]}, " from impacts quickly, and higher values make impacts affect the character for longer."], "extent": [10547, 10823]}], "container": true, "attrs": {"id": "motorcorrectiontime"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Constraint Force Mixing"], "extent": [10823, 10848], "body": [{"type": "para", "indent": 4, "text": ["Increasing this value makes the motor component of the constraint softer. A small positive value can increase the stability of the simulation."], "extent": [10866, 11014]}], "container": true, "attrs": {"id": "motorcfm"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Time Range"], "extent": [11014, 11026], "body": [{"type": "para", "indent": 4, "text": ["The start and end times (in seconds) correspond to the start and end of the ramp. For example, if you set this to 0.0 and 5.0, the ramp lets you control the motor strength over the first 5 seconds of the simulation. Outside this range, the ramp extends the first and last values."], "extent": [11058, 11343]}, {"type": "para", "indent": 4, "text": ["This parameter is only available when ", {"type": "ui", "text": ["Strength Value"]}, " is set to ", {"type": "ui", "text": ["Ramp"]}, "."], "extent": [11343, 11425]}], "container": true, "attrs": {"id": "motorstrengthramprange"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Strength Scale"], "extent": [11425, 11441], "body": [{"type": "para", "indent": 4, "text": ["Specifies a scale (multiplier) for the value of the Strength Ramp."], "extent": [11469, 11541]}, {"type": "para", "indent": 4, "text": ["This parameter is only available when ", {"type": "ui", "text": ["Strength Value"]}, " is set to ", {"type": "ui", "text": ["Ramp"]}, "."], "extent": [11541, 11623]}], "container": true, "attrs": {"id": "motorstrengthscale"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Enable Motor Strength Scale Attribute"], "extent": [11623, 11662], "body": [{"type": "para", "indent": 4, "text": ["Scale the ", {"type": "ui", "text": ["Motor Strength"]}, " value by the specified point attribute."], "extent": [11702, 11776]}, {"type": "note_group", "body": [{"type": "note", "indent": 4, "role": "item", "extent": [11776, 11786], "body": [{"type": "para", "indent": 8, "text": ["The point attribute must be a float between 0 and 1."], "extent": [11786, 11848]}], "container": true}], "container": true, "role": "item_group"}], "container": true, "attrs": {"id": "enablemotorstrengthscaleattrib"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Motor Strength Scale Attribute"], "extent": [11848, 11880], "body": [{"type": "para", "indent": 4, "text": ["Name of the point attribute to use for scaling the ", {"type": "ui", "text": ["Motor Strength"]}, " value."], "extent": [11914, 11996]}], "container": true, "attrs": {"id": "motorstrengthscaleattrib"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Strength Ramp"], "extent": [11996, 12011], "body": [{"type": "para", "indent": 4, "text": ["Sets the motor strength at each point during the simulation. You have to set up a ", {"type": "ui", "text": ["Time Range"]}, " and define the strength in just that range. Outside this range, the ramp extends the first and last values."], "extent": [12038, 12248]}, {"type": "para", "indent": 4, "text": ["This parameter is only available when ", {"type": "ui", "text": ["Strength Value"]}, " is set to ", {"type": "ui", "text": ["Ramp"]}, "."], "extent": [12248, 12330]}], "container": true, "attrs": {"id": "motorstrengthramp"}, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 3, "id": "transitions", "container": true, "type": "h", "indent": 0, "text": ["Transitions"], "extent": [12330, 12364], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Enable Transitions"], "extent": [12364, 12385], "body": [{"type": "para", "indent": 4, "text": ["When on, the current animation clip will transition to the ragdoll simulation based on specific criteria."], "extent": [12412, 12523]}], "container": true, "attrs": {"id": "enabletransitions"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Type"], "extent": [12523, 12529], "body": [{"type": "para", "indent": 4, "text": ["Specifies what the criteria is for the transition. For example, object attribute, particle speed, time, and so on."], "extent": [12543, 12663]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Object Bounds"], "extent": [12663, 12682], "body": [{"type": "para", "indent": 8, "text": ["Checks if the skeleton is bounded by an object."], "extent": [12682, 12739]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 8, "text": ["Object SOP Path"], "extent": [12739, 12764], "body": [{"type": "para", "indent": 12, "text": ["Path to the bounding SOP object."], "extent": [12799, 12845]}], "container": true, "attrs": {"id": "boundingobjectsop"}}, {"type": "dt", "indent": 8, "text": ["Check"], "extent": [12845, 12860], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 12, "text": ["Incoming"], "extent": [12893, 12915], "body": [{"type": "para", "indent": 16, "text": ["Transition when the skeleton goes inside the bounding shape."], "extent": [12915, 12993]}], "container": true}, {"type": "dt", "indent": 12, "text": ["Outgoing"], "extent": [12993, 13015], "body": [{"type": "para", "indent": 16, "text": ["Transition when the skeleton goes outside the bounding shape."], "extent": [13015, 13094]}], "container": true}, {"type": "dt", "indent": 12, "text": ["Continuous"], "extent": [13094, 13118], "body": [{"type": "para", "indent": 16, "text": ["Run the simulation as long as the skeleton is inside the bounding shape."], "extent": [13118, 13208]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "boundscondition"}}], "container": true}], "container": true}, {"type": "dt", "indent": 4, "text": ["Object Attribute"], "extent": [13208, 13230], "body": [{"type": "para", "indent": 8, "text": ["Reads an attribute from the specified SOP object and performs a comparison."], "extent": [13230, 13315]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 8, "text": ["Object SOP Path"], "extent": [13315, 13340], "body": [{"type": "para", "indent": 12, "text": ["Specifies the path to the object SOP to read the attribute from."], "extent": [13376, 13454]}], "container": true, "attrs": {"id": "attributeobjectsop"}}, {"type": "dt", "indent": 8, "text": ["Attribute Name"], "extent": [13454, 13478], "body": [{"type": "para", "indent": 12, "text": ["Specifies the name of the attribute to read."], "extent": [13509, 13567]}], "container": true, "attrs": {"id": "attributename"}}, {"type": "dt", "indent": 8, "text": ["Search Radius"], "extent": [13567, 13590], "body": [{"type": "para", "indent": 12, "text": ["Sets the distance to search to find the closest point from the skeleton to the object."], "extent": [13629, 13729]}], "container": true, "attrs": {"id": "attributesearchradius"}}, {"type": "dt", "indent": 8, "text": ["Comparison"], "extent": [13729, 13749], "body": [{"type": "para", "indent": 12, "text": ["Specifies what type of comparison will be made: Less Than, Equal, or Greater Than."], "extent": [13785, 13881]}], "container": true, "attrs": {"id": "attributecondition"}}, {"type": "dt", "indent": 8, "text": ["Comparison Value"], "extent": [13881, 13907], "body": [{"type": "para", "indent": 12, "text": ["Specifies the value to compare the attribute against."], "extent": [13949, 14016]}], "container": true, "attrs": {"id": "attributecomparisonvalue"}}], "container": true}], "container": true}, {"type": "dt", "indent": 4, "text": ["Object Distance"], "extent": [14016, 14037], "body": [{"type": "para", "indent": 8, "text": ["Checks the distance between the skeleton and the specified SOP object."], "extent": [14037, 14117]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 8, "text": ["Object SOP Path"], "extent": [14117, 14142], "body": [{"type": "para", "indent": 12, "text": ["Specifies the path to the SOP object to calculate the distance to."], "extent": [14177, 14257]}], "container": true, "attrs": {"id": "distanceobjectsop"}}, {"type": "dt", "indent": 8, "text": ["Distance To"], "extent": [14257, 14278], "body": [{"type": "para", "indent": 12, "text": ["Specifies how the distance is measured: measures the distance to the object\u2019s centroid or finds the closest point."], "extent": [14302, 14438]}], "container": true, "attrs": {"id": "distto"}}, {"type": "dt", "indent": 8, "text": ["Comparison"], "extent": [14438, 14458], "body": [{"type": "para", "indent": 12, "text": ["Specifies the type of comparison to be made: Less Than, Equal, or Greater Than."], "extent": [14493, 14586]}], "container": true, "attrs": {"id": "distancecondition"}}, {"type": "dt", "indent": 8, "text": ["Comparison Distance"], "extent": [14586, 14615], "body": [{"type": "para", "indent": 12, "text": ["Specifies the distance to compare against."], "extent": [14641, 14697]}], "container": true, "attrs": {"id": "distance"}}], "container": true}], "container": true}, {"type": "dt", "indent": 4, "text": ["Object Distance (pointcloud)"], "extent": [14697, 14731], "body": [{"type": "para", "indent": 8, "text": ["Checks the distance between the skeleton and a point cloud."], "extent": [14731, 14800]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 8, "text": ["Object SOP Path"], "extent": [14800, 14825], "body": [{"type": "para", "indent": 12, "text": ["Specifies the path to the SOP point cloud object to calculate the distance to."], "extent": [14862, 14954]}], "container": true, "attrs": {"id": "pointcloudobjectsop"}}, {"type": "dt", "indent": 8, "text": ["Search Radius"], "extent": [14954, 14977], "body": [{"type": "para", "indent": 12, "text": ["Sets the distance to search to find the closest point from the skeleton to the object."], "extent": [15019, 15119]}], "container": true, "attrs": {"id": "pointcloudsearchdistance"}}, {"type": "dt", "indent": 8, "text": ["Comparison"], "extent": [15119, 15139], "body": [{"type": "para", "indent": 12, "text": ["Specifies the type of comparison to be made: Less Than, Equal, or Greater Than."], "extent": [15176, 15269]}], "container": true, "attrs": {"id": "pointcloudcondition"}}, {"type": "dt", "indent": 8, "text": ["Comparison Distance"], "extent": [15269, 15298], "body": [{"type": "para", "indent": 12, "text": ["Sets the distance to compare against."], "extent": [15334, 15385]}], "container": true, "attrs": {"id": "pointclouddistance"}}], "container": true}], "container": true}, {"type": "dt", "indent": 4, "text": ["Object Raycast"], "extent": [15385, 15405], "body": [{"type": "para", "indent": 8, "text": ["Sends a ray along the ", {"type": "ui", "text": ["Reference Direction"]}, " from the root point of the skeleton and checks if it hits the object."], "extent": [15405, 15530]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 8, "text": ["Object SOP Path"], "extent": [15530, 15555], "body": [{"type": "para", "indent": 12, "text": ["Specifies the path to the SOP object to intersect with."], "extent": [15589, 15658]}], "container": true, "attrs": {"id": "raycastobjectsop"}}, {"type": "dt", "indent": 8, "text": ["Ray Direction"], "extent": [15658, 15681], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 12, "text": ["Orientation"], "extent": [15722, 15747], "body": [{"type": "para", "indent": 16, "text": ["Casts a ray in the direction the skeleton is currently facing."], "extent": [15747, 15827]}], "container": true}, {"type": "dt", "indent": 12, "text": ["Velocity"], "extent": [15827, 15849], "body": [{"type": "para", "indent": 16, "text": ["Casts a ray in the direction of the computed skeleton\u2019s velocity"], "extent": [15849, 15931]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "raycastdir"}}, {"type": "dt", "indent": 8, "text": ["Reference Direction"], "extent": [15931, 15960], "body": [{"type": "para", "indent": 12, "text": ["Specifies the original direction of the skeleton. This will be transformed by the skeleton\u2019s current orientation to determine the ray direction when ", {"type": "ui", "text": ["Ray Direction"]}, " is set to ", {"type": "ui", "text": ["Orientation"]}, "."], "extent": [15984, 16191]}], "container": true, "attrs": {"id": "refdir"}}, {"type": "dt", "indent": 8, "text": ["Raycast Length"], "extent": [16191, 16215], "body": [{"type": "para", "indent": 12, "text": ["Sets the maximum distance to look for a hit."], "extent": [16249, 16307]}], "container": true, "attrs": {"id": "raycastraylength"}}, {"type": "dt", "indent": 8, "text": ["Raycast"], "extent": [16307, 16324], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 12, "text": ["Hit"], "extent": [16357, 16374], "body": [{"type": "para", "indent": 16, "text": ["Transition activates when the object is hit."], "extent": [16374, 16436]}], "container": true}, {"type": "dt", "indent": 12, "text": ["No Hit"], "extent": [16436, 16456], "body": [{"type": "para", "indent": 16, "text": ["Transition activate when the object is ", {"type": "em", "text": ["not"]}, " hit."], "extent": [16456, 16523]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "raycasthitcheck"}}], "container": true}], "container": true}, {"type": "dt", "indent": 4, "text": ["Speed"], "extent": [16523, 16534], "body": [{"type": "para", "indent": 8, "text": ["Compares skeleton locomotion speed against given value."], "extent": [16534, 16599]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 8, "text": ["Angular Speed"], "extent": [16599, 16622], "body": [{"type": "para", "indent": 12, "text": ["When on, use angular speed in degrees per second. "], "extent": [16666, 16730]}], "container": true, "attrs": {"id": "particlespeedangulartoggle"}}, {"type": "dt", "indent": 8, "text": ["Comparison"], "extent": [16730, 16750], "body": [{"type": "para", "indent": 12, "text": ["Sets which type of comparison should be made: Less Than, Equal, or Greater Than."], "extent": [16782, 16876]}], "container": true, "attrs": {"id": "speedcondition"}}, {"type": "dt", "indent": 8, "text": ["Speed"], "extent": [16876, 16891], "body": [{"type": "para", "indent": 12, "text": ["Sets the value to compare against."], "extent": [16922, 16970]}], "container": true, "attrs": {"id": "particlespeed"}}], "container": true}], "container": true}, {"type": "dt", "indent": 4, "text": ["Time"], "extent": [16970, 16980], "body": [{"type": "para", "indent": 8, "text": ["Compares the current scene time against a given value."], "extent": [16980, 17044]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 8, "text": ["Units"], "extent": [17044, 17059], "body": [{"type": "para", "indent": 12, "text": ["Sets whether the ", {"type": "ui", "text": ["Playback Time"]}, " and ", {"type": "ui", "text": ["Random Offset"]}, " are specified in frames or seconds."], "extent": [17086, 17192]}], "container": true, "attrs": {"id": "timeunits"}}, {"type": "dt", "indent": 8, "text": ["Comparison"], "extent": [17192, 17212], "body": [{"type": "para", "indent": 12, "text": ["Sets which type of comparison should be made: Less Than, Equal, or Greater Than."], "extent": [17248, 17342]}], "container": true, "attrs": {"id": "timeframecondition"}}, {"type": "dt", "indent": 8, "text": ["Playback Time"], "extent": [17342, 17365], "body": [{"type": "para", "indent": 12, "text": ["Sets the value to compare against."], "extent": [17392, 17440]}], "container": true, "attrs": {"id": "timeframe"}}, {"type": "dt", "indent": 8, "text": ["Random Offset"], "extent": [17440, 17463], "body": [{"type": "para", "indent": 12, "text": ["Sets the random amount that is added to the compared value."], "extent": [17496, 17569]}], "container": true, "attrs": {"id": "timeframerandom"}}], "container": true}], "container": true}, {"type": "dt", "indent": 4, "text": ["Animated Parameter"], "extent": [17569, 17593], "body": [{"type": "para", "indent": 8, "text": ["Animates a parameter to create the transition."], "extent": [17593, 17649]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 8, "text": ["Value"], "extent": [17649, 17664], "body": [{"type": "para", "indent": 12, "text": ["Specifies the value to be animated (int)."], "extent": [17704, 17759]}], "container": true, "attrs": {"id": "animatedparametervalue"}}], "container": true}], "container": true}, {"type": "dt", "indent": 4, "text": ["Custom VEXpression"], "extent": [17759, 17792], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 8, "text": ["Parameters"], "extent": [17792, 17812], "body": [{"type": "para", "indent": 12, "text": ["Specifies custom wrangle code to manipulate when the transition should start."], "extent": [17812, 17903]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Inputs"], "extent": [17903, 17919], "body": [{"type": "para", "indent": 12, "text": ["The SOP geometry is cooked prior to running the VEX and the result will be wired to this input."], "extent": [17919, 18028]}], "container": true}], "container": true}], "container": true}, {"type": "dt", "indent": 4, "text": ["RBD Impact Data"], "extent": [18028, 18049], "body": [{"type": "para", "indent": 8, "text": ["RBD impact data greater than the threshold will activate the trigger."], "extent": [18049, 18128]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 8, "text": ["DOP Impact Objects"], "extent": [18128, 18156], "body": [{"type": "para", "indent": 12, "text": ["Specifies which DOP objects should be considered for impacts."], "extent": [18187, 18262]}], "container": true, "attrs": {"id": "impactobjects"}}, {"type": "dt", "indent": 8, "text": ["Impact Threshold"], "extent": [18262, 18288], "body": [{"type": "para", "indent": 12, "text": ["Sets the magnitude of the impact that is required to activate the trigger."], "extent": [18317, 18405]}], "container": true, "attrs": {"id": "impactvalue"}}, {"type": "dt", "indent": 8, "text": ["Joint Group"], "extent": [18405, 18426], "body": [{"type": "para", "indent": 12, "text": ["Specifies which points to detect the impact for."], "extent": [18463, 18525]}], "container": true, "attrs": {"id": "rbdimpactjointgroup"}}], "container": true}], "container": true}], "container": true}], "container": true, "attrs": {"id": "type"}, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 3, "type": "sep", "indent": 0, "text": [" Locomotion "], "extent": [18525, 18544], "body": [{"type": "para", "indent": 4, "text": ["The locomotion data is used when ", {"type": "ui", "text": ["Transitions"]}, " is on and set to a ", {"type": "ui", "text": ["Type"]}, " that is meant to trigger when the skeleton is moving/rotating through the world. For example, ", {"type": "ui", "text": ["Transition Type"]}, " set to ", {"type": "ui", "text": ["Object Bounds"]}, " requires the skeleton\u2019s locomotion in order to accurately calculate when the skeleton meets the bounds conditions."], "extent": [18544, 18880]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 4, "text": ["Locomotion"], "extent": [18880, 18896], "body": [{"type": "para", "indent": 8, "text": ["Specifies the method that is used to determine the locomotion of the skeleton."], "extent": [18920, 19008]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 8, "text": ["Existing Locomotion"], "extent": [19008, 19037], "body": [{"type": "para", "indent": 12, "text": ["The locomotion is obtained from the ", {"type": "code", "text": ["__locomotion__"]}, " point of the skeleton. \n            This point can be created by the ", {"scheme": "Icon", "value": "/icons/CHOP/extractlocomotion.svg", "type": "link", "text": "", "fullpath": "/icons/CHOP/extractlocomotion.svg.html"}, " ", {"scheme": "Node", "value": "/nodes/sop/kinefx--extractlocomotion", "type": "link", "text": ["Extract Locomotion SOP"], "fullpath": "/nodes/sop/kinefx--extractlocomotion.html"}, " node."], "extent": [19037, 19279]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Compute Locomotion"], "extent": [19279, 19307], "body": [{"type": "para", "indent": 12, "text": ["The locomotion of the skeleton is computed by this node."], "extent": [19307, 19377]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "locomotion"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Locomotion Source"], "extent": [19377, 19400], "body": [{"type": "para", "indent": 8, "text": ["Specifies the source of the locomotion of the skeleton."], "extent": [19430, 19495]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 8, "text": ["Joint"], "extent": [19495, 19510], "body": [{"type": "para", "indent": 12, "text": ["A joint in the skeleton is used as a reference for extracting the locomotion."], "extent": [19510, 19601]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Center of Mass"], "extent": [19601, 19625], "body": [{"type": "para", "indent": 12, "text": ["The joint at the center of mass of the skeleton is used as a reference for extracting the locomotion. This joint can be created by the ", {"scheme": "Icon", "value": "/icons/SOP/kinefx-configurejoints.svg", "type": "link", "text": "", "fullpath": "/icons/SOP/kinefx-configurejoints.svg.html"}, " ", {"scheme": "Node", "value": "/nodes/sop/kinefx--configurejoints", "type": "link", "text": ["Configure Joints SOP"], "fullpath": "/nodes/sop/kinefx--configurejoints.html"}, " node."], "extent": [19625, 19880]}], "container": true}], "container": true}, {"type": "para", "indent": 8, "text": ["This parameter is only available when ", {"type": "ui", "text": ["Locomotion"]}, " is set to ", {"type": "ui", "text": ["Compute Locomotion"]}, "."], "extent": [19880, 19976]}], "container": true, "attrs": {"id": "locomotionsource"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Locomotion Joint"], "extent": [19976, 19998], "body": [{"type": "para", "indent": 8, "text": ["Specifies the joint in the input skeleton to use as reference for extracting the translation and orientation."], "extent": [20027, 20146]}, {"type": "para", "indent": 8, "text": ["This parameter is only available when ", {"type": "ui", "text": ["Locomotion Source"]}, " is set to ", {"type": "ui", "text": ["Joint"]}, "."], "extent": [20146, 20236]}], "container": true, "attrs": {"id": "locomotionjoint"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["COM Joint"], "extent": [20236, 20251], "body": [{"type": "para", "indent": 8, "text": ["Specifies the center of mass (COM) joint in the input skeleton to use as reference for extracting the translation and orientation."], "extent": [20278, 20418]}, {"type": "para", "indent": 8, "text": ["This parameter is only available when ", {"type": "ui", "text": ["Locomotion Source"]}, " is set to ", {"type": "ui", "text": ["Center of Mass"]}, "."], "extent": [20418, 20517]}], "container": true, "attrs": {"id": "comtargetname"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Configuration Attribute"], "extent": [20517, 20546], "body": [{"type": "para", "indent": 8, "text": ["Specifies the name of the configuration point attribute from which to read the ", {"type": "code", "text": ["mass"]}, " and ", {"type": "code", "text": ["local_com"]}, " attributes from. See the ", {"scheme": "Icon", "value": "/icons/SOP/kinefx-configurejoints.svg", "type": "link", "text": "", "fullpath": "/icons/SOP/kinefx-configurejoints.svg.html"}, " ", {"scheme": "Node", "value": "/nodes/sop/kinefx--configurejoints", "type": "link", "text": ["Configure Joints SOP"], "fullpath": "/nodes/sop/kinefx--configurejoints.html"}, " node."], "extent": [20579, 20822]}, {"type": "para", "indent": 8, "text": ["This parameter is only available when ", {"type": "ui", "text": ["Locomotion Source"]}, " is set to ", {"type": "ui", "text": ["Center of Mass"]}, "."], "extent": [20822, 20921]}], "container": true, "attrs": {"id": "configurationattrib"}, "role": "item"}], "container": true, "role": "item_group"}, {"level": 3, "type": "sep", "indent": 4, "text": [" Translation "], "extent": [20921, 20945], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 8, "text": ["Ground Plane"], "extent": [20945, 20967], "body": [{"type": "para", "indent": 12, "text": ["Specifies which plane acts as the ground plane."], "extent": [20967, 21028]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Convert to In-Place"], "extent": [21028, 21057], "body": [{"type": "para", "indent": 12, "text": ["Sets from which axis to extract the translation from the character animation.\n            Selecting an axis will remove the translation on that axis from the character animation and add it to the ", {"type": "code", "text": ["__locomotion__"]}, " joint."], "extent": [21086, 21319]}, {"type": "para", "indent": 12, "text": ["These parameter is only available when ", {"type": "ui", "text": ["Locomotion"]}, " is set to ", {"type": "ui", "text": ["Compute Locomotion"]}, "."], "extent": [21319, 21420]}], "container": true, "attrs": {"id": "inplaceaxis"}, "role": "item"}], "container": true, "role": "item_group"}], "container": true}, {"level": 3, "type": "sep", "indent": 4, "text": [" Orientation "], "extent": [21420, 21444], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 8, "text": ["Extract Orientation Around Up Axis"], "extent": [21444, 21488], "body": [{"type": "para", "indent": 12, "text": ["When on, extracts the rotational velocity around the Up axis of the character. The Up axis is deduced from the viewport orientation option."], "extent": [21524, 21677]}], "container": true, "attrs": {"id": "extractorientation"}, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Up Axis"], "extent": [21677, 21694], "body": [{"type": "para", "indent": 12, "text": ["Specifies which method to use when extracting the orientation around the Up axis. "], "extent": [21694, 21790]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 12, "text": ["Use Joint Orientation"], "extent": [21790, 21825], "body": [{"type": "para", "indent": 16, "text": ["Extracts the orientation by pulling out the Euler angles from the locomotion joint and using those to extract the orientation data around the chosen axis."], "extent": [21825, 21997]}], "container": true}, {"type": "dt", "indent": 12, "text": ["Direction Between Joints"], "extent": [21997, 22035], "body": [{"type": "para", "indent": 16, "text": ["Extracts the orientation by specifying an extra joint and drawing a direction vector between the locomotion joint and the joint specified in ", {"type": "ui", "text": ["Look At Joint"]}, ". This direction vector is then projected on the relevant plane and used to determine the orientation around the chosen axis."], "extent": [22035, 22336]}], "container": true}], "container": true}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 8, "text": ["Look At Joint"], "extent": [22336, 22359], "body": [{"type": "para", "indent": 12, "text": ["Specifies an extra joint that will act as the tip of the direction vector."], "extent": [22388, 22476]}], "container": true, "attrs": {"id": "updirvector"}, "role": "item"}], "container": true, "role": "item_group"}], "container": true}], "container": true}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Guide Geometry"], "extent": [22476, 22497], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Display Collision Shapes"], "extent": [22497, 22524], "body": [{"type": "para", "indent": 4, "text": ["When on, the guide geometry for the collision shapes appears in the viewport."], "extent": [22553, 22636]}], "container": true, "attrs": {"id": "showcollisionshapes"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Display Constraint Geometry"], "extent": [22636, 22665], "body": [{"type": "para", "indent": 4, "text": ["When on, the guide geometry for the constraints appears in the viewport."], "extent": [22692, 22770]}], "container": true, "attrs": {"id": "showconstraintgeo"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Guide Size"], "extent": [22770, 22782], "body": [{"type": "para", "indent": 4, "text": ["Controls the size of the Bullet constraint DOP\u2019s guide geometry."], "extent": [22815, 22885]}, {"type": "para", "indent": 4, "text": ["This parameter is only available when ", {"type": "ui", "text": ["Display Constraint Geometry"]}, " is ", {"type": "em", "text": ["on"]}, "."], "extent": [22885, 22969]}], "container": true, "attrs": {"id": "constraintgeo_guidesize"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Display Ground Plane Geometry"], "extent": [22969, 23000], "body": [{"type": "para", "indent": 4, "text": ["When on, the guide geometry for the ground plane appears in the viewport."], "extent": [23028, 23107]}], "container": true, "attrs": {"id": "showgroundplanegeo"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Display Collision Geometry"], "extent": [23107, 23135], "body": [{"type": "para", "indent": 4, "text": ["When on, the guide geometry for the external collisions appears in the viewport."], "extent": [23166, 23252]}], "container": true, "attrs": {"id": "showcollisiongeometry"}, "role": "item"}], "container": true, "role": "item_group"}]}], "text": "Parameters"}, {"level": 1, "id": "inputs", "container": true, "type": "inputs_section", "indent": 0, "role": "section", "extent": [23252, 23260], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 0, "text": ["Input 1"], "extent": [23260, 23270], "body": [{"type": "para", "indent": 4, "text": ["Target Skeleton. The skeleton to run through the ragdoll simulation."], "extent": [23270, 23344]}], "container": true}, {"type": "dt", "indent": 0, "text": ["Input 2"], "extent": [23344, 23353], "body": [{"type": "para", "indent": 4, "text": ["Constraint Geometry. The constraint geometry belonging to the ", {"type": "ui", "text": ["Target Skeleton"]}, "."], "extent": [23353, 23441]}], "container": true}, {"type": "dt", "indent": 0, "text": ["Input 3"], "extent": [23441, 23450], "body": [{"type": "para", "indent": 4, "text": ["Collision Shapes. The collision shapes belonging to the ", {"type": "ui", "text": ["Target Skeleton"]}, "."], "extent": [23450, 23532]}], "container": true}, {"type": "dt", "indent": 0, "text": ["Input 4"], "extent": [23532, 23541], "body": [{"type": "para", "indent": 4, "text": ["Collision Geometry. Geometry to use as a collider in the simulation. This input must be in the form of packed geometry or RBD packed geometry like that which is set up by a ", {"scheme": "Icon", "value": "/icons/SOP/rbdpack.svg", "type": "link", "text": "", "fullpath": "/icons/SOP/rbdpack.svg.html"}, " ", {"scheme": "Node", "value": "/nodes/sop/rbdpack", "type": "link", "text": ["RBD Pack SOP"], "fullpath": "/nodes/sop/rbdpack.html"}, " node."], "extent": [23541, 23787]}], "container": true}], "container": true}], "text": "Inputs"}, {"level": 1, "id": "outputs", "container": true, "type": "outputs_section", "indent": 0, "role": "section", "extent": [23787, 23796], "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 0, "text": ["Output 1"], "extent": [23796, 23807], "body": [{"type": "para", "indent": 4, "text": ["Target Skeleton. The input skeleton after the simulation."], "extent": [23807, 23870]}], "container": true}, {"type": "dt", "indent": 0, "text": ["Output 2"], "extent": [23870, 23880], "body": [{"type": "para", "indent": 4, "text": ["Collision Geometry. The collision geometry after the simulation."], "extent": [23880, 23950]}], "container": true}], "container": true}], "text": "Outputs"}, {"level": 1, "id": "related", "container": true, "type": "related_section", "indent": 0, "role": "section", "extent": [23950, 23959], "body": [{"type": "bullet_group", "body": [{"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": null, "value": "/character/kinefx/ragdoll", "type": "link", "text": ["Setting up ragdoll simulations for characters"], "fullpath": "/character/kinefx/ragdoll.html"}], "extent": [23959, 24036]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/sop/kinefx--ragdollcollisionshapes", "type": "link", "text": "", "fullpath": "/nodes/sop/kinefx--ragdollcollisionshapes.html"}], "extent": [24036, 24080]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/sop/kinefx--ragdollconstraints", "type": "link", "text": "", "fullpath": "/nodes/sop/kinefx--ragdollconstraints.html"}], "extent": [24080, 24120]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/sop/kinefx--configurejoints", "type": "link", "text": "", "fullpath": "/nodes/sop/kinefx--configurejoints.html"}], "extent": [24120, 24157]}], "container": true}], "text": "Related"}], "title": ["Ragdoll Solver"], "summary": ["Runs a ragdoll RBD simulation on the target skeleton."], "included": ["/nodes/dop/bullet_solver_parms", "/nodes/dop/standard_bulletdata_common", "/nodes/dop/standard_bulletdata_parm", "/nodes/sop/_kinefx_common"]}