{"type": "root", "attrs": {"type": "node", "context": "chop", "internal": "constraintparent", "icon": "SHELF/parent", "version": null, "namespace": null}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["Constraint Parent"], "extent": [76, 98]}, {"type": "summary", "indent": 0, "text": ["Reparent an object."], "extent": [98, 126]}, {"type": "para", "indent": 0, "text": ["The Constraint Parent CHOP reparents an object from a current parent to a new parent."], "extent": [126, 213]}, {"type": "para", "indent": 0, "text": ["The first input is world transform of the object to reparent.\nThe second input is the current parent transform.\nThe third input is the new parent transform."], "extent": [213, 371]}, {"level": 1, "id": "parameters", "container": true, "type": "parameters_section", "indent": 0, "role": "section", "extent": [371, 383], "body": [{"level": 2, "id": "channel", "container": true, "type": "h", "indent": 0, "text": ["Channel"], "extent": [16, 40], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Align"], "extent": [40, 48], "body": [{"type": "para", "indent": 4, "text": ["The alignment option to use."], "extent": [48, 82]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Extend to Min/Max"], "extent": [82, 105], "body": [{"type": "para", "indent": 8, "text": ["Find the earliest start and latest end, and extend all\n        inputs to that range using the extend conditions."], "extent": [105, 226]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Stretch to Min/Max"], "extent": [226, 250], "body": [{"type": "para", "indent": 8, "text": ["Find the earliest start and latest end, and stretch every\n        channel\u2019s start and end to that range."], "extent": [250, 363]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Shift to Minimum"], "extent": [363, 385], "body": [{"type": "para", "indent": 8, "text": ["Find the earliest start and shift all channels so they all\n        start at that index. All channels are extended to the length\n        of the longest one."], "extent": [385, 549]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Shift to Maximum"], "extent": [549, 571], "body": [{"type": "para", "indent": 8, "text": ["Find the latest end and shift all channels so they all end\n        at that index. Extend all channels to the length of the\n        longest one."], "extent": [571, 723]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Shift to First Interval"], "extent": [723, 752], "body": [{"type": "para", "indent": 8, "text": ["Shift all channels to the start of the first channel and\n        sample all inputs using the first input\u2019s range."], "extent": [752, 874]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Trim to First Interval"], "extent": [874, 902], "body": [{"type": "para", "indent": 8, "text": ["Trim all channels to first channel\u2019s range."], "extent": [902, 954]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Stretch to First Interval"], "extent": [954, 985], "body": [{"type": "para", "indent": 8, "text": ["Stretch all channels to the first channel\u2019s range."], "extent": [985, 1044]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Trim to Smallest Interval"], "extent": [1044, 1075], "body": [{"type": "para", "indent": 8, "text": ["Trim all channels to the smallest start/end interval. The\n        start and end values may not come from the same channel."], "extent": [1075, 1206]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Stretch to Smallest Interval"], "extent": [1206, 1240], "body": [{"type": "para", "indent": 8, "text": ["Stretch all channels to the smallest start/end interval. The\n        start and end values may not come from the same channel."], "extent": [1240, 1375]}], "container": true}], "container": true}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Range"], "extent": [1375, 1382], "body": [{"type": "para", "indent": 4, "text": ["Specifies the range of data to generate."], "extent": [1382, 1428]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Use Full Animation Range"], "extent": [1428, 1458], "body": [{"type": "para", "indent": 8, "text": ["All of the animated range."], "extent": [1458, 1493]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Use Current Frame"], "extent": [1493, 1516], "body": [{"type": "para", "indent": 8, "text": ["Only the sample at the current frame."], "extent": [1516, 1562]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Use Start/End"], "extent": [1562, 1581], "body": [{"type": "para", "indent": 8, "text": ["The range is specified from the ", {"type": "ui", "text": ["Start"]}, " and ", {"type": "ui", "text": ["End"]}, "\n        parameters."], "extent": [1581, 1663]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Use Value Animation"], "extent": [1663, 1688], "body": [{"type": "para", "indent": 8, "text": ["The range is taken from range of keys available in the\n        evaluated Value parameters."], "extent": [1688, 1787]}], "container": true}], "container": true}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Start"], "extent": [1787, 1794], "body": [{"type": "para", "indent": 4, "text": ["The start time of the channel range."], "extent": [1817, 1859]}], "container": true, "attrs": {"channels": "/start"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["End"], "extent": [1859, 1864], "body": [{"type": "para", "indent": 4, "text": ["The end time of the channel range."], "extent": [1885, 1925]}], "container": true, "attrs": {"channels": "/end"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Sample Rate"], "extent": [1925, 1938], "body": [{"type": "para", "indent": 4, "text": ["The sample rate of the CHOP."], "extent": [1960, 1994]}], "container": true, "attrs": {"channels": "/rate"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Number of Threads"], "extent": [1994, 2013], "body": [{"type": "para", "indent": 4, "text": ["The number of separate threads to use to evaluate the channel samples.\n    The default is no threading."], "extent": [2013, 2122]}, {"type": "para", "indent": 4, "text": ["Since Houdini evaluates the VEX program for each sample in the input\n    geometry, it can benefit greatly from threading on a multi-processor\n    or multi-core machine when the CHOP nodes have many samples."], "extent": [2122, 2334]}], "container": true, "role": "item"}], "container": true}]}, {"level": 2, "id": "common", "container": true, "type": "h", "indent": 0, "text": ["Common"], "extent": [2334, 2356], "body": [{"type": "para", "indent": 0, "text": ["Some of these parameters may not be available on all CHOP nodes."], "extent": [2356, 2423]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Scope"], "extent": [2423, 2430], "body": [{"type": "para", "indent": 4, "text": ["To determine the channels that are affected, some CHOPs have a scope string. Patterns can be used in ", {"type": "ui", "text": ["Scope"]}, ", for example ", {"type": "code", "text": ["*"]}, " (match all), and ", {"type": "code", "text": ["?"]}, " (match single character). "], "extent": [2430, 2615]}, {"type": "para", "indent": 4, "text": ["The following are examples of possible channel name matching options:"], "extent": [2615, 2694]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": [{"type": "code", "text": ["chan2"]}], "extent": [2694, 2707], "body": [{"type": "para", "indent": 8, "text": ["Matches a single channel name."], "extent": [2707, 2751]}], "container": true}, {"type": "dt", "indent": 4, "text": [{"type": "code", "text": ["chan3 tx ty tz"]}], "extent": [2751, 2773], "body": [{"type": "para", "indent": 8, "text": ["Matches four channel names, separated by spaces."], "extent": [2773, 2835]}], "container": true}, {"type": "dt", "indent": 4, "text": [{"type": "code", "text": ["chan*"]}], "extent": [2835, 2848], "body": [{"type": "para", "indent": 8, "text": ["Matches each channel that starts with ", {"type": "code", "text": ["chan"]}, "."], "extent": [2848, 2911]}], "container": true}, {"type": "dt", "indent": 4, "text": [{"type": "code", "text": ["*foot*"]}], "extent": [2911, 2925], "body": [{"type": "para", "indent": 8, "text": ["Matches each channel that has ", {"type": "code", "text": ["foot"]}, " in it."], "extent": [2925, 2982]}], "container": true}, {"type": "dt", "indent": 4, "text": [{"type": "code", "text": ["t?"]}], "extent": [2982, 2992], "body": [{"type": "para", "indent": 8, "text": ["The ", {"type": "code", "text": ["?"]}, " matches a single character. ", {"type": "code", "text": ["t?"]}, " matches two-character channels starting with t.  "], "extent": [2992, 3096]}], "container": true}, {"type": "dt", "indent": 4, "text": [{"type": "code", "text": ["blend[3-7:2]"]}], "extent": [3096, 3116], "body": [{"type": "para", "indent": 8, "text": ["Matches number ranges, giving ", {"type": "code", "text": ["blend3"]}, ", ", {"type": "code", "text": ["blend5"]}, ", and ", {"type": "code", "text": ["blend7"]}, "."], "extent": [3116, 3197]}], "container": true}, {"type": "dt", "indent": 4, "text": [{"type": "code", "text": ["blend[2-3,5,13]"]}], "extent": [3197, 3220], "body": [{"type": "para", "indent": 8, "text": ["Matches channels ", {"type": "code", "text": ["blend2"]}, ", ", {"type": "code", "text": ["blend3"]}, ", ", {"type": "code", "text": ["blend5"]}, ", ", {"type": "code", "text": ["blend13"]}, "."], "extent": [3220, 3291]}], "container": true}, {"type": "dt", "indent": 4, "text": [{"type": "code", "text": ["t[xyz]"]}], "extent": [3291, 3305], "body": [{"type": "para", "indent": 8, "text": [{"type": "code", "text": ["[xyz]"]}, "matches three characters, giving channels ", {"type": "code", "text": ["tx"]}, ", ", {"type": "code", "text": ["ty"]}, " and ", {"type": "code", "text": ["tz"]}, "."], "extent": [3305, 3393]}], "container": true}], "container": true}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Sample Rate Match"], "extent": [3393, 3412], "body": [{"type": "para", "indent": 4, "text": ["The ", {"type": "ui", "text": ["Sample Rate Match"]}, " options handle cases where multiple input CHOPs\u2019 sample rates are different."], "extent": [3412, 3524]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Resample At First Input\u2019s Rate"], "extent": [3524, 3560], "body": [{"type": "para", "indent": 8, "text": ["Use the rate of the first input to resample the others."], "extent": [3560, 3633]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Resample At Maximum Rate"], "extent": [3633, 3663], "body": [{"type": "para", "indent": 8, "text": ["Resample to the highest sample rate."], "extent": [3663, 3713]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Resample At Minimum Rate"], "extent": [3713, 3743], "body": [{"type": "para", "indent": 8, "text": ["Resample to the lowest sample rate."], "extent": [3743, 3796]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Error if Rates Differ"], "extent": [3796, 3823], "body": [{"type": "para", "indent": 8, "text": ["Does not accept conflicting sample rates."], "extent": [3823, 3878]}], "container": true}], "container": true}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Units"], "extent": [3878, 3885], "body": [{"type": "para", "indent": 4, "text": ["The units of the time parameters."], "extent": [3885, 3928]}, {"type": "para", "indent": 4, "text": ["For example, you can specify the amount of time a lag should last for in seconds (default), frames (at the Houdini FPS), or samples (in the CHOP\u2019s sample rate)."], "extent": [3928, 4098]}, {"type": "note_group", "body": [{"type": "note", "indent": 4, "role": "item", "extent": [4098, 4108], "body": [{"type": "para", "indent": 8, "text": ["When you change the ", {"type": "ui", "text": ["Units"]}, " parameter, the existing parameters are not converted to the new units."], "extent": [4108, 4222]}], "container": true}], "container": true, "role": "item_group"}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Time Slice"], "extent": [4222, 4234], "body": [{"type": "para", "indent": 4, "text": ["Time slicing is a feature that boosts cooking performance and reduces memory usage. Traditionally, CHOPs calculate the channel over its entire frame range. If the channel needs to be evaluated every frame, then cooking the entire range of the channel is unnecessary. It is more efficient to calculate only the fraction of the channel that is needed. This fraction is the ", {"type": "ui", "text": ["Time Slice"]}, "."], "extent": [4234, 4626]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Unload"], "extent": [4626, 4634], "body": [{"type": "para", "indent": 4, "text": ["Causes the memory consumed by a CHOP to be released after it is cooked, and the data passed to the next CHOP."], "extent": [4634, 4749]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Export Prefix"], "extent": [4749, 4764], "body": [{"type": "para", "indent": 4, "text": ["The ", {"type": "ui", "text": ["Export Prefix"]}, " is prepended to CHOP channel names to determine where to export to. "], "extent": [4764, 4864]}, {"type": "para", "indent": 4, "text": ["For example, if the CHOP channel was named ", {"type": "code", "text": ["geo1:tx"]}, ", and the prefix was ", {"type": "code", "text": ["/obj"]}, ", the channel would be exported to ", {"type": "code", "text": ["/obj/geo1/tx"]}, "."], "extent": [4864, 5003]}, {"type": "note_group", "body": [{"type": "note", "indent": 4, "role": "item", "extent": [5003, 5013], "body": [{"type": "para", "indent": 8, "text": ["You can leave the ", {"type": "ui", "text": ["Export Prefix"]}, " blank, but then your CHOP track names need to be absolute paths, such as ", {"type": "code", "text": ["obj:geo1:tx"]}, "."], "extent": [5013, 5146]}], "container": true}], "container": true, "role": "item_group"}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Graph Color"], "extent": [5146, 5159], "body": [{"type": "para", "indent": 4, "text": ["Every CHOP has this option. Each CHOP gets a default color assigned to it for display in the graph, but you can override the color with the ", {"type": "ui", "text": ["Graph Color"]}, ". There are 36 RGB color combinations in the palette."], "extent": [5159, 5373]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Graph Color Step"], "extent": [5373, 5391], "body": [{"type": "para", "indent": 4, "text": ["When the graph displays the animation curves, and a CHOP has two or more channels, this defines the difference in color from one channel to the next, giving a rainbow spectrum of colors."], "extent": [5391, 5583]}], "container": true, "role": "item"}], "container": true}]}], "text": "Parameters"}, {"level": 1, "id": "related", "container": true, "type": "related_section", "indent": 0, "role": "section", "extent": [435, 444], "body": [{"type": "bullet_group", "body": [{"blevel": 6, "type": "bullet", "indent": 4, "text": [{"scheme": null, "value": "/shelf/constraintparentblend", "type": "link", "text": ["Constraint Parent Blend Shelf Tool"], "fullpath": "/shelf/constraintparentblend.html"}], "extent": [444, 516]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": [{"scheme": "Node", "value": "/nodes/chop/constraintblend", "type": "link", "text": "", "fullpath": "/nodes/chop/constraintblend.html"}], "extent": [516, 550]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": [{"scheme": "Node", "value": "/nodes/chop/constraintsequence", "type": "link", "text": "", "fullpath": "/nodes/chop/constraintsequence.html"}], "extent": [550, 587]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": [{"scheme": "Node", "value": "/nodes/chop/constraintsimpleblend", "type": "link", "text": "", "fullpath": "/nodes/chop/constraintsimpleblend.html"}], "extent": [587, 628]}], "container": true}], "text": "Related"}], "title": ["Constraint Parent"], "summary": ["Reparent an object."], "included": ["/nodes/chop/common"]}