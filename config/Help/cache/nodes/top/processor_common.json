{"type": "root", "attrs": {"type": "include"}, "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 0, "text": ["Generate When"], "extent": [16, 31], "body": [{"type": "para", "indent": 4, "text": ["Determines when this node will generate work items. You should generally leave this set to ", {"type": "q", "text": ["Automatic"]}, " unless you know the node requires a specific generation mode, or that the work items need to be generated dynamically."], "extent": [64, 291]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["All Upstream Items are Generated"], "extent": [291, 329], "body": [{"type": "para", "indent": 11, "text": ["This node will generate work items once all of the input nodes have generated their work items."], "extent": [329, 437]}], "container": true}, {"type": "dt", "indent": 4, "text": ["All Upstream Items are Cooked"], "extent": [437, 472], "body": [{"type": "para", "indent": 11, "text": ["This node will generate work items once all of the input nodes have cooked their work items."], "extent": [472, 577]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Each Upstream Item is Cooked"], "extent": [577, 611], "body": [{"type": "para", "indent": 11, "text": ["This node will generate work items each time a work item in an input node is cooked."], "extent": [611, 708]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Automatic"], "extent": [708, 723], "body": [{"type": "para", "indent": 11, "text": ["The generation mode is selected based on the generation mode of the input nodes. If any of the input nodes are generating work items when their inputs cook, this node will be set to ", {"type": "ui", "text": ["Each Upstream Item is Cooked"]}, ". Otherwise, it will be set to ", {"type": "ui", "text": ["All Upstream Items are Generated"]}, "."], "extent": [723, 1018]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "pdg_workitemgeneration"}}, {"type": "dt", "indent": 0, "text": ["Command"], "extent": [1018, 1027], "body": [{"type": "para", "indent": 4, "text": ["The command line (executable and arguments) to run when the work item runs.\n    If this field is empty the work item will not be scheduled, and will be\n    instantly marked done once all of its dependencies finish. "], "extent": [1049, 1270]}], "container": true, "attrs": {"id": "pdg_command"}}, {"type": "dt", "indent": 0, "text": ["Cache Mode"], "extent": [1270, 1282], "body": [{"type": "para", "indent": 4, "text": ["Determines how the processor node handles work items that report expected file results."], "extent": [1306, 1399]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Automatic"], "extent": [1399, 1414], "body": [{"type": "para", "indent": 8, "text": ["If the expected result file exists on disk, the work item is marked as\n        cooked without being scheduled. If the file ", {"type": "em", "text": ["does not"]}, " exist on disk, the work item is scheduled as normal. If upstream work item dependencies write out new\n        files during a cook, the cache files on work items in this node will\n        also be marked as out-of-date."], "extent": [1414, 1775]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Automatic (Ignore Upstream)"], "extent": [1775, 1808], "body": [{"type": "para", "indent": 8, "text": ["The same as ", {"type": "ui", "text": ["Automatic"]}, ", except upstream file writes ", {"type": "em", "text": ["do not"]}, " invalidate\n        cache files on work items in this node and this node will only check output files for its own work items."], "extent": [1808, 2006]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Read Files"], "extent": [2006, 2022], "body": [{"type": "para", "indent": 8, "text": ["If the expected result file exists on disk, the work item is marked as cooked without being scheduled. Otherwise the work item is marked as failed."], "extent": [2022, 2179]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Write Files"], "extent": [2179, 2196], "body": [{"type": "para", "indent": 8, "text": ["Work items are always scheduled and the expected result file is ignored even if it exists on disk."], "extent": [2196, 2304]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "pdg_cachemode"}}, {"type": "dt", "indent": 0, "text": ["Cook Type"], "extent": [2304, 2315], "body": [{"type": "para", "indent": 4, "text": ["Determines how work items in the node should cook, e.g. if they should run in process, out of process, or using services."], "extent": [2338, 2465]}], "container": true, "attrs": {"id": "pdg_cooktype"}}, {"type": "dt", "indent": 0, "text": ["Run on Service Block"], "extent": [2465, 2487], "body": [{"type": "para", "indent": 4, "text": ["Determines whether or not work items in this node should run on the parent service block, if one exists."], "extent": [2517, 2627]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Always"], "extent": [2627, 2639], "body": [{"type": "para", "indent": 8, "text": ["Always run work items on the block\u2019s service, regardless of any other service settings on this node."], "extent": [2639, 2749]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Match"], "extent": [2749, 2760], "body": [{"type": "para", "indent": 8, "text": ["Only run work items on the block\u2019s service if ", {"type": "ui", "text": ["Service Name"]}, " matches the service name that\u2019s used by the block."], "extent": [2760, 2883]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Never"], "extent": [2883, 2894], "body": [{"type": "para", "indent": 8, "text": ["Never run work items on the block\u2019s service."], "extent": [2894, 2948]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "pdg_useserviceblock"}}, {"type": "dt", "indent": 0, "text": ["Service Name"], "extent": [2948, 2962], "body": [{"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["Cook Type"]}, " is set to the ", {"type": "ui", "text": ["Service"]}, ", this parameter is used to specify the name of the service. For more information on using services, see the ", {"scheme": null, "value": "/tops/services", "type": "link", "text": ["PDG Service Manager"], "fullpath": "/tops/services.html"}, " documentation."], "extent": [2988, 3198]}], "container": true, "attrs": {"id": "pdg_servicename"}}, {"type": "dt", "indent": 0, "text": ["Reset Service"], "extent": [3198, 3213], "body": [{"type": "para", "indent": 4, "text": ["Determines whether or not service clients should be reset before executing work items. If this node is a service block, the reset operation is only performed once per block loop. Otherwise, the reset operation occurs for each work item in this node."], "extent": [3240, 3495]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["None"], "extent": [3495, 3505], "body": [{"type": "para", "indent": 8, "text": ["The service client is used as-is. This means that any imported modules, global variables, or scene state are preserved between work item cooks."], "extent": [3505, 3658]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Reset Client"], "extent": [3658, 3676], "body": [{"type": "para", "indent": 8, "text": ["The service client is sent the ", {"type": "q", "text": ["reset"]}, " command, which clears state but does not restart the service process."], "extent": [3676, 3794]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Restart Client"], "extent": [3794, 3814], "body": [{"type": "para", "indent": 8, "text": ["The service client process is completely restarted before running a work item."], "extent": [3814, 3902]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "pdg_servicereset"}}, {"type": "dt", "indent": 0, "text": ["File Dependencies"], "extent": [3902, 3921], "body": [{"type": "para", "indent": 4, "text": ["A list of files that should be copied to the PDG working directory before the first work item in this node is executed.  This can be used to ensure that supporting files like digital assets and custom scripts are available for the work item job."], "extent": [3943, 4194]}, {"type": "para", "indent": 4, "text": ["The specified paths can be absolute or relative to HOUDINI_PATH."], "extent": [4194, 4264]}], "container": true, "attrs": {"id": "pdgnodedeps"}}, {"type": "dt", "indent": 0, "text": ["Evaluate Using"], "extent": [4264, 4280], "body": [{"type": "para", "indent": 4, "text": ["Determines how the TOP node creates and executes work items."], "extent": [4306, 4372]}, {"type": "para", "indent": 4, "text": ["When using the ", {"type": "ui", "text": ["Single Frame"]}, " option, the node creates one work item for each upstream\n    frame. When using the ", {"type": "ui", "text": ["Frame Range"]}, " option, the node creates one work item per frame\n    in the range for each upstream work item. When using the ", {"type": "ui", "text": ["ROP Node Configuration"]}, " option, PDG cooks the ROP without passing any frame range options and uses whatever configuration is set on the target ROP. When using the ", {"type": "ui", "text": ["Automatic"]}, " option, the node automatically configures the node based on whether or not it has any inputs."], "extent": [4372, 4892]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Single Frame"], "extent": [4892, 4910], "body": [{"type": "para", "indent": 11, "text": ["The node creates a single work item per upstream item and sets the new work item\u2019s frame to match the upstream item\u2019s frame. If there are no input nodes, then the node creates a single work item set to frame 1. You can override the single frame value with the ", {"type": "ui", "text": ["Override Frame"]}, " parameter."], "extent": [4910, 5212]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Frame Range"], "extent": [5212, 5229], "body": [{"type": "para", "indent": 11, "text": ["For each upstream work item, the node creates the full frame range of work items. If there are no upstream items, the node creates one set of items for the specified frame range."], "extent": [5229, 5420]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Automatic"], "extent": [5420, 5435], "body": [{"type": "para", "indent": 8, "text": ["If the node has inputs, it generates one frame of work for each input. If the node does not have any inputs, it generates work items for the node\u2019s full frame range."], "extent": [5435, 5610]}], "container": true}, {"type": "dt", "indent": 4, "text": ["ROP Node Configuration"], "extent": [5610, 5638], "body": [{"type": "para", "indent": 11, "text": ["For each upstream work item, the node creates a single work item that cooks the ", {"type": "ui", "text": ["ROP Path"]}, " and PDG does ", {"type": "em", "text": ["not"]}, " pass any frame range settings to the ROP node. The number of frames to cook is determined by the parameters on the ROP itself."], "extent": [5638, 5889]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "framegeneration"}}, {"type": "dt", "indent": 0, "text": ["Override Frame"], "extent": [5889, 5905], "body": [{"type": "para", "indent": 4, "text": ["When this parameter is enabled, it overrides the frame used with the ", {"type": "ui", "text": ["Single Frame"]}, " Evaluation mode."], "extent": [5929, 6037]}], "container": true, "attrs": {"id": "frameoverride"}}, {"type": "dt", "indent": 0, "text": ["Frame Range"], "extent": [6037, 6050], "body": [{"type": "para", "indent": 4, "text": ["The frame start, end and step size to use when ", {"type": "ui", "text": ["Frame Generation"]}, " is set to ", {"type": "ui", "text": ["Frame Range"]}, "."], "extent": [6066, 6166]}], "container": true, "attrs": {"id": "range"}}, {"type": "dt", "indent": 0, "text": ["All Frames in One Batch"], "extent": [6166, 6191], "body": [{"type": "para", "indent": 4, "text": ["When on, work items from the same frame range are grouped into a batch that is scheduled as a single job. This is used for simulations where each frame depends on the previous frame, and it is advantageous to keep everything in memory."], "extent": [6210, 6451]}], "container": true, "attrs": {"id": "batchall"}}, {"type": "dt", "indent": 0, "text": ["Frames per Batch"], "extent": [6451, 6469], "body": [{"type": "para", "indent": 4, "text": ["By default, when this parameter is at 1 each work item is cooked as a \n    separate job. When this parameter is set to a value greater than 1, work\n    items are grouped into batches."], "extent": [6494, 6683]}], "container": true, "attrs": {"id": "framesperbatch"}}, {"type": "dt", "indent": 0, "text": ["TOP Scheduler Override"], "extent": [6683, 6707], "body": [{"type": "para", "indent": 4, "text": ["This parameter overrides the TOP scheduler for this node."], "extent": [6730, 6793]}], "container": true, "attrs": {"id": "topscheduler"}}, {"type": "dt", "indent": 0, "text": ["Add Job Parms"], "extent": [6793, 6808], "body": [{"type": "para", "indent": 4, "text": ["Opens the ", {"scheme": null, "value": "/ref/windows/edit_parameter_interface", "type": "link", "text": ["Edit Parameter Interface"], "fullpath": "/ref/windows/edit_parameter_interface.html"}, "  window for the purpose of adding scheduler parameters to the node\u2019s interface."], "extent": [6830, 6990]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["In-Process Scheduler"], "extent": [6990, 7016], "body": [{"type": "para", "indent": 8, "text": ["The ", {"type": "ui", "text": ["Edit Parameter Interface"]}, " window opens with the ", {"scheme": "Icon", "value": "/icons/TOP/scheduler.svg", "type": "link", "text": "", "fullpath": "/icons/TOP/scheduler.svg.html"}, " ", {"scheme": "Node", "value": "/nodes/top/inprocessscheduler", "type": "link", "text": ["In-Process Scheduler\u2019s"], "fullpath": "/nodes/top/inprocessscheduler.html"}, " parameter folder selected in the ", {"type": "ui", "text": ["Create Parameters"]}, " column."], "extent": [7016, 7228]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Local Scheduler"], "extent": [7228, 7249], "body": [{"type": "para", "indent": 8, "text": ["The ", {"type": "ui", "text": ["Edit Parameter Interface"]}, " window opens with the ", {"scheme": "Icon", "value": "/icons/TOP/scheduler.svg", "type": "link", "text": "", "fullpath": "/icons/TOP/scheduler.svg.html"}, " ", {"scheme": "Node", "value": "/nodes/top/localscheduler", "type": "link", "text": ["Local Scheduler\u2019s"], "fullpath": "/nodes/top/localscheduler.html"}, " parameter folder selected in the ", {"type": "ui", "text": ["Create Parameters"]}, " column."], "extent": [7249, 7452]}], "container": true}, {"type": "dt", "indent": 4, "text": ["HQueue Scheduler"], "extent": [7452, 7474], "body": [{"type": "para", "indent": 8, "text": ["The ", {"type": "ui", "text": ["Edit Parameter Interface"]}, " window opens with the ", {"scheme": "Icon", "value": "/icons/MISC/hqueue_logo.svg", "type": "link", "text": "", "fullpath": "/icons/MISC/hqueue_logo.svg.html"}, " ", {"scheme": "Node", "value": "/nodes/top/hqueuescheduler", "type": "link", "text": ["HQueue Scheduler\u2019s"], "fullpath": "/nodes/top/hqueuescheduler.html"}, " parameter folder selected in the ", {"type": "ui", "text": ["Create Parameters"]}, " column."], "extent": [7474, 7682]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "addjobparms"}}, {"type": "dt", "indent": 0, "text": ["Work Item Priority"], "extent": [7682, 7702], "body": [{"type": "para", "indent": 4, "text": ["This parameter determines how the current scheduler prioritizes the work items in this node."], "extent": [7733, 7831]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Inherit From Upstream Item"], "extent": [7831, 7864], "body": [{"type": "para", "indent": 11, "text": ["The work items inherit their priority from their parent items. If a work item has no parent, its priority is set to 0."], "extent": [7864, 7995]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Custom Expression"], "extent": [7995, 8019], "body": [{"type": "para", "indent": 11, "text": ["The work item priority is set to the value of ", {"type": "ui", "text": ["Priority Expression"]}, "."], "extent": [8019, 8102]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Node Defines Priority"], "extent": [8102, 8130], "body": [{"type": "para", "indent": 7, "text": ["The work item priority is set based on the node\u2019s own internal priority calculations."], "extent": [8130, 8235]}, {"type": "para", "indent": 7, "text": ["This option is only available on the ", {"scheme": "Icon", "value": "MISC/python.svg", "type": "link", "text": "", "fullpath": "/nodes/top/MISC/python.svg.html"}, " ", {"scheme": "Node", "value": "/nodes/top/pythonprocessor", "type": "link", "text": ["Python Processor TOP"], "fullpath": "/nodes/top/pythonprocessor.html"}, ", ", {"scheme": "Icon", "value": "TOP/ropfetch.svg", "type": "link", "text": "", "fullpath": "/nodes/top/TOP/ropfetch.svg.html"}, " ", {"scheme": "Node", "value": "/nodes/top/ropfetch", "type": "link", "text": ["ROP Fetch TOP"], "fullpath": "/nodes/top/ropfetch.html"}, ", and ROP Output TOP nodes. These nodes define their own prioritization schemes that are implemented in their node logic."], "extent": [8235, 8531]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "pdg_workitempriority"}}, {"type": "dt", "indent": 0, "text": ["Priority Expression"], "extent": [8531, 8552], "body": [{"type": "para", "indent": 4, "text": ["This parameter specifies an expression for work item priority. The expression is evaluated for each work item in the node."], "extent": [8587, 8715]}, {"type": "para", "indent": 4, "text": ["This parameter is only available when ", {"type": "ui", "text": ["Work Item Priority"]}, " is set to ", {"type": "ui", "text": ["Custom Expression"]}, "."], "extent": [8715, 8814]}], "container": true, "attrs": {"id": "pdg_workitempriorityexpr"}}, {"type": "dt", "indent": 0, "text": ["Feedback Attributes"], "extent": [8814, 8835], "body": [{"type": "para", "indent": 4, "text": ["When on, the specified attributes are copied from the end of each iteration onto the corresponding work item at the beginning of the next iteration. This occurs immediately before the starting work item for the next iteration cooks."], "extent": [8865, 9103]}, {"type": "tip_group", "body": [{"type": "tip", "indent": 4, "role": "item", "extent": [9103, 9112], "body": [{"type": "para", "indent": 11, "text": ["The attribute(s) to feedback can be specified as a space-separated list or by using the attribute pattern syntax. For more information on how to write attribute patterns, see ", {"scheme": null, "value": "/tops/attributes#pattern", "type": "link", "text": ["Attribute Pattern Syntax"], "fullpath": "/tops/attributes.html#pattern", "fragment": "#pattern"}, "."], "extent": [9112, 9352]}], "container": true}], "container": true, "role": "item_group"}], "container": true, "attrs": {"id": "pdg_feedbackpattern"}}, {"type": "dt", "indent": 0, "text": ["Feedback Output Files"], "extent": [9352, 9375], "body": [{"type": "para", "indent": 4, "text": ["When on, the output files from each iteration are copied onto the corresponding work item at the beginning of the next loop iteration. The files are added as outputs of that work item, which makes them available as inputs to work items inside the loop."], "extent": [9403, 9661]}], "container": true, "attrs": {"id": "pdg_feedbackfiles"}}, {"type": "dt", "indent": 0, "text": ["Work Item Label"], "extent": [9661, 9678], "body": [{"type": "para", "indent": 4, "text": ["Determines how the node should label its work items. This parameter allows you to assign non-unique label strings to your work items which are then used to identify the work items in the attribute panel, task bar, and scheduler job names."], "extent": [9706, 9950]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Use Default Label"], "extent": [9950, 9974], "body": [{"type": "para", "indent": 8, "text": ["The work items in this node will use the default label from the TOP network, or have no label if the default is unset."], "extent": [9974, 10102]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Inherit From Upstream Item"], "extent": [10102, 10135], "body": [{"type": "para", "indent": 8, "text": ["The work items inherit their labels from their parent work items.        "], "extent": [10135, 10218]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Custom Expression"], "extent": [10218, 10242], "body": [{"type": "para", "indent": 8, "text": ["The work item label is set to the ", {"type": "ui", "text": ["Label Expression"]}, " custom expression which is evaluated for each item."], "extent": [10242, 10358]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Node Defines Label"], "extent": [10358, 10383], "body": [{"type": "para", "indent": 8, "text": ["The work item label is defined in the node\u2019s internal logic."], "extent": [10383, 10453]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "pdg_workitemlabel"}}, {"type": "dt", "indent": 0, "text": ["Label Expression"], "extent": [10453, 10471], "body": [{"type": "para", "indent": 4, "text": ["When on, this parameter specifies a custom label for work items created by this node. The parameter can be an expression that includes references to work item attributes or built-in properties. For example, ", {"type": "code", "text": ["$OS: @pdg_frame"]}, " will set the label of each work item based on its frame value."], "extent": [10503, 10796]}], "container": true, "attrs": {"id": "pdg_workitemlabelexpr"}}, {"type": "dt", "indent": 0, "text": ["Schedule When"], "extent": [10796, 10811], "body": [{"type": "para", "indent": 4, "text": ["When enabled, this parameter can be used to specify an expression that determines which work items from the node should be scheduled. If the expression returns zero for a given work item, that work item will immediately be marked as cooked instead of being queued with a scheduler. If the expression returns a non-zero value, the work item is scheduled normally."], "extent": [10838, 11206]}], "container": true, "attrs": {"id": "pdg_schedulewhen"}}, {"type": "dt", "indent": 0, "text": ["Copy Inputs For"], "extent": [11206, 11223], "body": [{"type": "para", "indent": 4, "text": ["Determines how input files are copied onto loop items. By default, upstream files are copied onto all input files. However, it is also possible to ", {"type": "em", "text": ["only"]}, " copy input files onto the first iteration or none of the loop iterations."], "extent": [11247, 11480]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["No Iterations"], "extent": [11480, 11499], "body": [{"type": "para", "indent": 7, "text": ["Upstream input files are ", {"type": "em", "text": ["not"]}, " copied to the outputs of any loop iteration items."], "extent": [11499, 11589]}], "container": true}, {"type": "dt", "indent": 4, "text": ["First Iteration"], "extent": [11589, 11610], "body": [{"type": "para", "indent": 7, "text": ["Upstream input files are copied to the output file list for ", {"type": "em", "text": ["only"]}, " the first loop iteration"], "extent": [11610, 11710]}], "container": true}, {"type": "dt", "indent": 4, "text": ["All Iterations"], "extent": [11710, 11730], "body": [{"type": "para", "indent": 7, "text": ["Upstream input files are copied to the output file list of all iterations."], "extent": [11730, 11813]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "copyinputsfor"}}, {"type": "dt", "indent": 0, "text": ["Cook Loops Sequentially"], "extent": [11813, 11838], "body": [{"type": "para", "indent": 4, "text": ["When this toggle is enabled, loops created by this node cook to completion one at a time. Otherwise, when this toggle is off, independent loops are able to cook in parallel."], "extent": [11863, 12041]}], "container": true, "attrs": {"id": "loopsequential"}}], "container": true}]}