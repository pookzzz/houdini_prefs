{"type": "root", "attrs": {"type": "node", "context": "top", "internal": "pythonmapper", "icon": "MISC/python", "since": "17.5", "version": null, "namespace": null}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["Python Mapper"], "extent": [92, 110]}, {"type": "summary", "indent": 0, "text": ["Maps work items using a Python script"], "extent": [110, 156]}, {"type": "para", "indent": 0, "text": ["This node can be used to write custom mapper logic using the Python API."], "extent": [156, 230]}, {"type": "para", "indent": 0, "text": ["For use cases that can expressed as a single line Python or HScript expression,\nthe ", {"scheme": "Node", "value": "/nodes/top/mapbyexpression", "type": "link", "text": ["Map by Expression"], "fullpath": "/nodes/top/mapbyexpression.html"}, " is a simpler\nalternative."], "extent": [230, 386]}, {"level": 1, "id": "parameters", "container": true, "type": "parameters_section", "indent": 0, "role": "section", "extent": [386, 398], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Save to Python Script"], "extent": [16, 39], "body": [{"type": "para", "indent": 4, "text": ["Saves the callbacks defined on this node to a Python script, which can be\n    imported and registered with PDG. The parameter template associated with\n    the node is also saved and embedded into the Python script. After saving\n    the script is automatically imported and the node type is made available\n    in the TAB menu."], "extent": [64, 395]}], "container": true, "attrs": {"id": "savenodescript"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Save to Digital Asset"], "extent": [395, 418], "body": [{"type": "para", "indent": 4, "text": ["Saves the callbacks defined on this node to a standalone Houdini Digital\n    asset. The callbacks are stored inside the .hda itself and are registered\n    with PDG as an embedded PDG node type."], "extent": [440, 638]}], "container": true, "attrs": {"id": "savenodehda"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["onMapStatic Callback"], "extent": [476, 498], "body": [{"type": "para", "indent": 4, "text": ["This script is run in order to map upstream static items to downstream\n    static items. It is always run once during the static cook step."], "extent": [518, 667]}, {"type": "para", "indent": 4, "text": ["Several variables are available in the script:"], "extent": [667, 719]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": [{"type": "code", "text": ["self"]}], "extent": [719, 731], "body": [{"type": "para", "indent": 8, "text": ["Refers to the underlying PDG node associated with the TOP node. Note\n        that this is different than TOP node itself, which is a standard Houdini\n        operator."], "extent": [731, 908]}, {"type": "para", "indent": 8, "text": ["Spare parameters added to the TOP node\u2019s parameter interface will\n        automatically be added to the PDG node."], "extent": [908, 1031]}], "container": true}, {"type": "dt", "indent": 4, "text": [{"type": "code", "text": ["upstream_items"]}], "extent": [1031, 1053], "body": [{"type": "para", "indent": 8, "text": ["The list of upstream static work items - these are the items that can\n        be added as dependencies on the downstream items."], "extent": [1053, 1190]}], "container": true}, {"type": "dt", "indent": 4, "text": [{"type": "code", "text": ["downstream_items"]}], "extent": [1190, 1214], "body": [{"type": "para", "indent": 8, "text": ["The list of downstream static work items - these are the items below\n        the mapper that will be made to depend on some of the upstream static\n        items."], "extent": [1214, 1385]}], "container": true}, {"type": "dt", "indent": 4, "text": [{"type": "code", "text": ["dependency_holder"]}], "extent": [1385, 1410], "body": [{"type": "para", "indent": 8, "text": ["The object used to construct dependencies. For example, to add a \n        dependency between the first upstream item and downstream item, one\n        could write ", {"type": "code", "text": ["dependency_holder.addDependency(upstream_items[0], downstream_items[0])"]}, ".\n        The order the dependent/dependency are specified does not matter, as PDG\n        will be able to determine which is which on its own."], "extent": [1410, 1798]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "mapstatic"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["onMapDynamic Callback"], "extent": [1798, 1821], "body": [{"type": "para", "indent": 4, "text": ["This script is run in order to map upstream dynamic items to downstream\n    static items. It is run multiple times during the cook when dynamic work\n    items are generated about the mapper node."], "extent": [1842, 2043]}, {"type": "para", "indent": 4, "text": ["The dynamic work items passed in are pre-filtered by the results of the\n    ", {"type": "ui", "text": ["onMapStatic"]}, " script, such that only dynamic items that descend from the\n    static items selected in that script will be considered."], "extent": [2043, 2264]}, {"type": "para", "indent": 4, "text": ["Several variables are available in the script:"], "extent": [2264, 2316]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": [{"type": "code", "text": ["self"]}], "extent": [2316, 2328], "body": [{"type": "para", "indent": 8, "text": ["Refers to the underlying PDG node associated with the TOP node. Note\n        that this is different than TOP node itself, which is a standard Houdini\n        operator."], "extent": [2328, 2505]}, {"type": "para", "indent": 8, "text": ["Spare parameters added to the TOP node\u2019s parameter interface will\n        automatically be added to the PDG node."], "extent": [2505, 2628]}], "container": true}, {"type": "dt", "indent": 4, "text": [{"type": "code", "text": ["upstream_items"]}], "extent": [2628, 2650], "body": [{"type": "para", "indent": 8, "text": ["The list of upstream dynamic work items - these are the items that can\n        be added as dependencies on the downstream items."], "extent": [2650, 2788]}], "container": true}, {"type": "dt", "indent": 4, "text": [{"type": "code", "text": ["downstream_items"]}], "extent": [2788, 2812], "body": [{"type": "para", "indent": 8, "text": ["The list of downstream static work items - these are the items below\n        the mapper that will be made to depend on some of the upstream dynamic\n        items."], "extent": [2812, 2984]}], "container": true}, {"type": "dt", "indent": 4, "text": [{"type": "code", "text": ["dependency_holder"]}], "extent": [2984, 3009], "body": [{"type": "para", "indent": 8, "text": ["The object used to construct dependencies. For example, to add a \n        dependency between the first upstream item and downstream item, one\n        could write ", {"type": "code", "text": ["dependency_holder.addDependency(upstream_items[0], downstream_items[0])"]}, ".\n        The order the dependent/dependency are specified does not matter, as PDG\n        will be able to determine which is which on its own."], "extent": [3009, 3398]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "mapdynamic"}, "role": "item"}], "container": true, "role": "item_group"}], "text": "Parameters"}, {"level": 1, "id": "related", "container": true, "type": "related_section", "indent": 0, "role": "section", "extent": [3398, 3407], "body": [{"type": "bullet_group", "body": [{"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/top/mapbyexpression", "type": "link", "text": "", "fullpath": "/nodes/top/mapbyexpression.html"}], "extent": [3407, 3436]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/top/pythonpartitioner", "type": "link", "text": "", "fullpath": "/nodes/top/pythonpartitioner.html"}], "extent": [3436, 3467]}], "container": true}], "text": "Related"}], "title": ["Python Mapper"], "summary": ["Maps work items using a Python script"], "included": ["/nodes/top/python_common"]}