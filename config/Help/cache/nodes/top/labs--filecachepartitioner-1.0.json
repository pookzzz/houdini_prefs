{"type": "root", "attrs": {"type": "node", "context": "top", "internal": "labs::filecachepartitioner::1.0", "icon": "TOP/partitionbycombination", "version": "1.0", "namespace": "labs"}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["Labs File Cache Partitioner"], "extent": [113, 145]}, {"type": "summary", "indent": 0, "text": ["Partitions and generates work items based on range and wedge values for file cache."], "extent": [145, 237]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Overview"], "extent": [237, 252], "body": [{"type": "para", "indent": 0, "text": ["This node is mostly used as a basic building block for ", {"scheme": "Node", "value": "/nodes/top/labs::topfilecache::1.0", "type": "link", "text": ["TOP Labs File Cache node"], "exists": true}, "."], "extent": [252, 370]}, {"type": "para", "indent": 0, "text": ["TOP nodes change their work items based on their inputs. This means, for example a ", {"scheme": "Node", "value": "/nodes/top/ropgeometry", "type": "link", "text": ["ROP Geometry Output node"], "fullpath": "/nodes/top/ropgeometry.html"}, " can give you undesired amount of frames/work items to work with just by connecting/disconnecting it\u2019s input. This can lead to a very error prone, slow, and hard to build workflows. This partitioner\u2019s job to ensure that the amount of work items generated are always correspond to the settings given on this node, and by that, to create dependencies between all incoming and newly generated work items. "], "extent": [370, 904]}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Cache Types"], "extent": [904, 922], "body": [{"type": "para", "indent": 0, "text": ["This node differentiates between two distinctive cache types based on ", {"type": "code", "text": ["frame"]}, " and ", {"type": "code", "text": ["range"]}, " top attributes:"], "extent": [922, 1029]}, {"type": "bullet_group", "body": [{"blevel": 2, "type": "bullet", "indent": 0, "text": [{"type": "ui", "text": ["Time Independent / Static Geometry / Model"]}], "extent": [1029, 1078], "body": [{"type": "task_group", "body": [{"ext": null, "type": "task", "indent": 4, "text": [" To create a Time Independent work item"], "role": "item", "extent": [1078, 1129], "body": [{"type": "ord_group", "body": [{"blevel": 10, "type": "ord", "indent": 8, "text": ["Create a ", {"scheme": "Node", "value": "/nodes/top/rangegenerate", "type": "link", "text": ["Range Generate node"], "fullpath": "/nodes/top/rangegenerate.html"}, "."], "extent": [1129, 1194]}, {"blevel": 10, "type": "ord", "indent": 8, "text": ["Set all three components of the ", {"type": "ui", "text": ["Value Range"]}, " parameter to 1. This will set both the ", {"type": "code", "text": ["frame"]}, " and the ", {"type": "code", "text": ["range"]}, " attribute on the work item to 1."], "extent": [1194, 1357]}], "container": true}], "container": true}], "container": true, "role": "item_group"}], "container": true}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"type": "ui", "text": ["Time Dependent / Geometry Sequence"]}], "extent": [1357, 1398], "body": [{"type": "task_group", "body": [{"ext": null, "type": "task", "indent": 4, "text": [" To create a Time Dependent work item"], "role": "item", "extent": [1398, 1447], "body": [{"type": "ord_group", "body": [{"blevel": 10, "type": "ord", "indent": 8, "text": ["Create a ", {"scheme": "Node", "value": "/nodes/top/rangegenerate", "type": "link", "text": ["Range Generate node"], "fullpath": "/nodes/top/rangegenerate.html"}, "."], "extent": [1447, 1512]}, {"blevel": 10, "type": "ord", "indent": 8, "text": ["Make sure the first and second values of ", {"type": "ui", "text": ["Value Range"]}, " parameter are not the same. This will give you multiple work items with the same ", {"type": "code", "text": ["range"]}, ", but each with different ", {"type": "code", "text": ["frame"]}, " number. "], "extent": [1512, 1711]}], "container": true}], "container": true}], "container": true, "role": "item_group"}], "container": true}], "container": true}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Dependencies and Partitioning"], "extent": [1711, 1747], "body": [{"type": "para", "indent": 0, "text": ["Each of these cache types can be wedged using this node, in which case top wedge attributes such as ", {"type": "code", "text": ["wedgeindex"]}, ", ", {"type": "code", "text": ["wedgenum"]}, ", ", {"type": "code", "text": ["wedgetotal"]}, ", ", {"type": "code", "text": ["wedgecount"]}, " is added to the work items. This means that the node can generate ", {"type": "ui", "text": ["Time Independed"]}, ", ", {"type": "ui", "text": ["Wedged Time Independent"]}, ", ", {"type": "ui", "text": ["Time Dependent"]}, " and ", {"type": "ui", "text": ["Wedged Time Dependent"]}, " work items from any number and variation of work items of these categorized. "], "extent": [1747, 2145]}, {"type": "note_group", "body": [{"type": "note", "indent": 0, "role": "item", "extent": [2145, 2151], "body": [{"type": "para", "indent": 4, "text": ["Wedging here does not give you access the usual wedge attribute controls you would expect from a ", {"scheme": "Node", "value": "/nodes/top/wedge", "type": "link", "text": ["Wedge node"], "fullpath": "/nodes/top/wedge.html"}, ". Here it simply controls the amount of work items needed if you are to wedge a ", {"type": "ui", "text": ["Time Dependent"]}, " or ", {"type": "ui", "text": ["Time Independent"]}, " cache. To add wedge attributes to the work items after this node, the ", {"scheme": "Node", "value": "/nodes/top/labs::wedge::1.0", "type": "link", "text": ["Labs Wedge node"], "exists": true}, " can be used. "], "extent": [2151, 2531]}], "container": true}], "container": true, "role": "item_group"}, {"type": "para", "indent": 0, "text": ["As general rule, incoming ", {"type": "ui", "text": ["Time Dependent"]}, " caches will partition with the work item of the same frame number. If that is not found no dependency will be created, for example when the incoming frame range is longer then the generated frame range.  Incoming ", {"type": "ui", "text": ["Time Dependent"]}, " work items will always collapse their frames (partition) into a single ", {"type": "ui", "text": ["Time Independent"]}, " work item. While on the opposite side, an incoming ", {"type": "ui", "text": ["Time Independent"]}, " work item will partition to all the frames of the generated ", {"type": "ui", "text": ["Time Dependent"]}, " work items. This behaviour is similar when it comes to wedging. When you generate wedged work items, every incoming none wedged work items will partition to all wedges of the same frame. "], "extent": [2531, 3240]}, {"type": "para", "indent": 0, "text": ["When a work item does not have ", {"type": "code", "text": ["frame"]}, " or ", {"type": "code", "text": ["range"]}, " attribute, it is considered a generic work item. This is generally not recommend. However this means that all generated work items depend on this generic work item. "], "extent": [3240, 3457]}, {"type": "para", "indent": 0, "text": ["You can find a demo scene under SideFXLabs/hip/filecachepartitioner_demoscene.hip that demonstrates these dependencies in detail."], "extent": [3457, 3588]}]}, {"level": 1, "id": "parameters", "container": true, "type": "parameters_section", "indent": 0, "role": "section", "extent": [3588, 3600], "body": [{"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Frame Range"], "extent": [3600, 3619], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Time Dependent Cache"], "extent": [8241, 8263], "body": [{"type": "para", "indent": 4, "text": ["When this is on (the default), the node writes out a separate cache file for every frame (using the global frame start/end/increment from the timeline). If the input geometry is static (doesn\u2019t change based on the frame number), turn this off to avoid writing out multiple identical files."], "extent": [8287, 8582]}], "container": true, "attrs": {"id": "timedependent"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Start/End/Inc"], "extent": [669, 684], "body": [{"type": "para", "indent": 4, "text": ["Specifies the range of frames to render (start frame, end frame, and increment). All values may be floating point values. The range is inclusive. "], "extent": [695, 847]}, {"type": "para", "indent": 4, "text": ["These parameters determine the values of the local variables for the output driver."], "extent": [847, 936]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": [{"type": "code", "text": ["$NRENDER"]}], "extent": [936, 952], "body": [{"type": "para", "indent": 8, "text": ["The number of frames to be rendered by the output driver."], "extent": [952, 1018]}], "container": true}, {"type": "dt", "indent": 4, "text": [{"type": "code", "text": ["$N"]}], "extent": [1018, 1028], "body": [{"type": "para", "indent": 8, "text": ["The current frame being rendered (starting at 1 and going to ", {"type": "code", "text": ["$NRENDER"]}, ")."], "extent": [1028, 1111]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "f"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Substeps"], "extent": [3703, 3713], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Substeps"], "extent": [12082, 12092], "body": [{"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["Evaluate as"]}, " is ", {"type": "ui", "text": ["Frame range"]}, ", this is the number of fractional sub-frames to divide each frame into. Caching sub-frames increases the quality of motion blur rendering for cached animated geometry. If you set ", {"type": "ui", "text": ["Substeps"]}, " greater than ", {"type": "code", "text": ["1"]}, " and you've set ", {"type": "ui", "text": ["File Path"]}, " to ", {"type": "ui", "text": ["Explicit"]}, ", make sure your explicit path expression can handle fractional frames, by using ", {"type": "code", "text": ["$T"]}, " (floating point time in seconds) or ", {"type": "code", "text": ["$FF"]}, " (fractional frame number) instead of ", {"type": "code", "text": ["$F"]}, " (whole frame number)."], "extent": [12111, 12602]}], "container": true, "attrs": {"id": "substeps"}, "role": "item"}], "container": true, "role": "item_group"}], "container": true, "attrs": {"id": "substeps"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Wait for All Frames"], "extent": [3776, 3797], "body": [{"type": "para", "indent": 4, "text": ["This will make every single generated work item dependent on all incoming work items. So this node awaits for all upstream work items to finish before processing."], "extent": [3823, 3991]}], "container": true, "attrs": {"id": "waitforallframes"}, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Wedging"], "extent": [3991, 4005], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Enable Wedging"], "extent": [4005, 4022], "body": [{"type": "para", "indent": 4, "text": ["This will generate copies of the given frame range using the ", {"type": "ui", "text": ["Wedge Count"]}, " parameter. The work items will contain all necessary top attributes, such as ", {"type": "code", "text": ["wedgeindex"]}, " to differentiate between wedges, however this node will not generate any other wedge attributes. To add wedge attributes to the generated work items, use the ", {"scheme": "Node", "value": "/nodes/top/labs::wedge::1.0", "type": "link", "text": ["Labs Wedge node"], "exists": true}, "."], "extent": [4045, 4420]}], "container": true, "attrs": {"id": "enablewedging"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Wedge Count"], "extent": [4420, 4433], "body": [{"type": "para", "indent": 4, "text": ["Sets how many copies of the given frame range will be created. The work items will contain all necessary top attributes, such as ", {"type": "code", "text": ["wedgeindex"]}, " to differentiate between wedges, however this node will not generate any other wedge attributes. To add wedge attributes to the generated work items, use the ", {"scheme": "Node", "value": "/nodes/top/labs::wedge::1.0", "type": "link", "text": ["Labs Wedge node"], "exists": true}, "."], "extent": [4453, 4803]}], "container": true, "attrs": {"id": "wedgecount"}, "role": "item"}], "container": true, "role": "item_group"}]}], "text": "Parameters"}, {"level": 1, "id": "related", "container": true, "type": "related_section", "indent": 0, "role": "section", "extent": [4803, 4812], "body": [{"type": "bullet_group", "body": [{"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/top/labs::topfilecache::1.0", "type": "link", "text": ["TOP Labs File Cache node"], "exists": true}], "extent": [4812, 4874]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/top/labs::wedge::1.0", "type": "link", "text": ["Labs Wedge node"], "exists": true}], "extent": [4874, 4920]}], "container": true}], "text": "Related"}], "title": ["Labs File Cache Partitioner"], "summary": ["Partitions and generates work items based on range and wedge values for file cache."], "included": ["/nodes/out/geometry", "/nodes/out/standard", "/nodes/sop/file", "/nodes/sop/filecache", "/nodes/top/processor_common", "/nodes/top/ropfetch"]}