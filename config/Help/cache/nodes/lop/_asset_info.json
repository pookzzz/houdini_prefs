{"type": "root", "attrs": {"type": "include"}, "body": [{"type": "dt_group", "body": [{"type": "dt", "indent": 0, "text": ["Asset Info Count"], "extent": [16, 34], "body": [{"type": "para", "indent": 8, "text": ["Additional named values to associate with the asset info dictionary on these prims or properties. Set the number of items to set/edit, or use the plus and minus buttons to add or remove items."], "extent": [34, 236]}], "container": true}, {"type": "dt", "indent": 0, "text": ["Asset Info Name"], "extent": [236, 253], "body": [{"type": "para", "indent": 8, "text": ["For each item of asset info, the name of the item."], "extent": [253, 313]}], "container": true}, {"type": "dt", "indent": 0, "text": ["Asset Info Type"], "extent": [313, 330], "body": [{"type": "para", "indent": 8, "text": ["For each item of asset info, the data type of the value."], "extent": [330, 396]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 8, "text": ["String"], "extent": [396, 412], "body": [{"type": "para", "indent": 16, "text": ["The value is stored as a single string."], "extent": [412, 469]}], "container": true}, {"type": "dt", "indent": 8, "text": ["String Array"], "extent": [469, 491], "body": [{"type": "para", "indent": 16, "text": ["The value is parsed into an array of substring, respecting quotes to group space separated words into a single substring."], "extent": [491, 630]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Token"], "extent": [630, 645], "body": [{"type": "para", "indent": 16, "text": ["Like a string, but represented as a USD Token, which generally should not contain spaces. Using this specific data type may be necessary to match scripts or tools later in your pipeline."], "extent": [645, 849]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Token Array"], "extent": [849, 870], "body": [{"type": "para", "indent": 16, "text": ["Like a string array, but because USD Tokens generally aren\u2019t expected to have spaces, the string is parsed into tokens using a simpler algorithm which ignores quotes and always splits the string where there is whitespace."], "extent": [870, 1109]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Float"], "extent": [1109, 1124], "body": [{"type": "para", "indent": 16, "text": ["The value is stored as a floating point number."], "extent": [1124, 1189]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Integer"], "extent": [1189, 1206], "body": [{"type": "para", "indent": 16, "text": ["The value is stored as a whole integer value."], "extent": [1206, 1269]}], "container": true}, {"type": "dt", "indent": 8, "text": ["Boolean"], "extent": [1269, 1286], "body": [{"type": "para", "indent": 16, "text": ["The value is stored as a True or False value."], "extent": [1286, 1349]}], "container": true}], "container": true}], "container": true}, {"type": "dt", "indent": 0, "text": ["Asset Info Value"], "extent": [1349, 1367], "body": [{"type": "para", "indent": 8, "text": ["For each item of asset info, the value to associate with the name."], "extent": [1367, 1443]}, {"type": "para", "indent": 8, "text": ["(Behind the scenes there are several different parameters (", {"type": "code", "text": ["assetinfostrvalue", {"type": "var", "text": ["n"]}]}, ", ", {"type": "code", "text": ["assetinfofloatvalue", {"type": "var", "text": ["n"]}]}, ", ", {"type": "code", "text": ["assetinfointvalue", {"type": "var", "text": ["n"]}]}, ", ", {"type": "code", "text": ["assetinfoboolvalue", {"type": "var", "text": ["n"]}]}, ") all labeled ", {"type": "ui", "text": ["Asset info value"]}, ", with the visible one controlled by the ", {"type": "ui", "text": ["Asset info type"]}, " value. This may be relevant if you are using expressions or scripting these values.)"], "extent": [1443, 1795]}], "container": true}], "container": true}]}