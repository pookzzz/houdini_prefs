{"type": "root", "attrs": {"type": "node", "context": "lop", "internal": "karmatexturebaker", "icon": "COMMON/bake", "since": "20.5", "version": null, "namespace": null}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["Karma Texture Baker"], "extent": [0, 24]}, {"type": "summary", "indent": 0, "text": ["Create a Render Settings primitive to create texture maps that define shading state for an object."], "extent": [113, 220]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Overview"], "extent": [220, 235], "body": [{"type": "para", "indent": 0, "text": ["The Karma Texture Baker LOP creates USD ", {"type": "code", "text": ["render var"]}, ", ", {"type": "code", "text": ["render product"]}, " and ", {"type": "code", "text": ["render settings"]}, " primitives to set up texture baking for a single object. This node writes to the USD ", {"type": "em", "text": ["stage"]}, " and configures rendering for Karma. You can then write the ", {"type": "em", "text": ["stage"]}, " to disk or further modify it with LOP nodes."], "extent": [235, 535]}, {"type": "note_group", "body": [{"type": "note", "indent": 0, "role": "item", "extent": [535, 541], "body": [{"type": "para", "indent": 4, "text": ["Baking currently only works for objects with a ", {"scheme": "Node", "value": "/nodes/vop/mtlxstandard_surface", "type": "link", "text": ["MtlX Standard Surface VOP"], "fullpath": "/nodes/vop/mtlxstandard_surface.html"}, " shader."], "extent": [541, 660]}], "container": true}], "container": true, "role": "item_group"}]}, {"level": 1, "id": "parameters", "container": true, "type": "parameters_section", "indent": 0, "role": "section", "extent": [660, 672], "body": [{"level": 3, "type": "sep", "indent": 0, "text": [" Common Settings "], "extent": [672, 697]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Rendersettings Primitive Path"], "extent": [697, 729], "body": [{"type": "para", "indent": 4, "text": ["Scene graph path to the ", {"type": "code", "text": ["RenderSettings"]}, " prim to render with. If this is blank, the node looks for default render settings on the root prim. If the root prim has no render settings, the node will use default settings."], "extent": [4049, 4272]}], "container": true, "attrs": {"id": "primpath"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Baking Mode"], "extent": [802, 815], "body": [{"type": "para", "indent": 4, "text": ["Specifies how the shading point is determined for each point on the bake mesh."], "extent": [834, 918]}, {"type": "bullet_group", "body": [{"blevel": 6, "type": "bullet", "indent": 4, "text": [{"type": "ui", "text": ["Trace"]}, ". This mode sends rays from the low res mesh in the direction of the surface normal to find the shading point. This method works if multiple objects are baked onto a single mesh. The other scene objects don\u2019t need UV coordinates."], "extent": [918, 1163]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": [{"type": "ui", "text": ["UV Match"]}, ". This method takes a single high-res mesh and determines the shading point by matching UV coordinates from the low-res mesh. ", {"type": "ui", "text": ["UV Match"]}, " makes sense if the high-res mesh doesn\u2019t align very well to the low res mesh."], "extent": [1163, 1399]}], "container": true}], "container": true, "attrs": {"id": "bakemode"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Bake Mesh"], "extent": [1399, 1410], "body": [{"type": "para", "indent": 4, "text": ["This is the mesh that will be baked. The polygons are rasterized based on the mesh\u2019s UV coordinates."], "extent": [1429, 1535]}], "container": true, "attrs": {"id": "bakemesh"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Cage Mesh"], "extent": [1535, 1546], "body": [{"type": "para", "indent": 4, "text": ["This parameter is only available when you set ", {"type": "ui", "text": ["Baking Mode"]}, " to ", {"type": "ui", "text": ["Trace"]}, ". Sometimes it\u2019s problematic to determine the direction to trace rays from the bake mesh to the scene. When you specify a cage mesh, rays are sent from the position on the cage mesh through the matching position on the bake mesh. This leads to finer control when determining the shading position."], "extent": [1565, 1941]}], "container": true, "attrs": {"id": "cagemesh"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["High Res Mesh"], "extent": [1941, 1956], "body": [{"type": "para", "indent": 4, "text": ["This parameter is only available when you set ", {"type": "ui", "text": ["Baking Mode"]}, " to ", {"type": "ui", "text": ["UV Mesh"]}, " and specifies the high-res mesh that has matching UV coordinates. The position data of this mesh are used to compute the shading information."], "extent": [1975, 2199]}], "container": true, "attrs": {"id": "highmesh"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Dicing Camera"], "extent": [2199, 2214], "body": [{"type": "para", "indent": 4, "text": ["Specifies the camera that\u2019s used for dicing subdivision or displaced surfaces. This parameter is mandatory for the texture baker to work correctly."], "extent": [2231, 2384]}], "container": true, "attrs": {"id": "camera"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Output Picture"], "extent": [2384, 2400], "body": [{"type": "para", "indent": 4, "text": ["The filename of the output image. When you bake a single image, the node uses the name exactly as entered here."], "extent": [2418, 2535]}, {"type": "para", "indent": 4, "text": ["However, when you render separate images for each AOV, this name will be the starting point for the individual AOV filename. The AOV name will be appended to the ", {"type": "ui", "text": ["Output Picture"]}, " just before the file extension. The file extension will be changed to the format that you've chosen from the  ", {"type": "ui", "text": ["Image Format"]}, " dropdown on the ", {"type": "ui", "text": ["Images"]}, " tab."], "extent": [2535, 2880]}], "container": true, "attrs": {"id": "picture"}, "role": "item"}, {"type": "parameters_item", "indent": 4, "text": ["Resolution"], "extent": [2480, 2496], "body": [{"type": "para", "indent": 8, "text": ["The horizontal and vertical size of the output image, in pixels."], "extent": [2521, 2595]}], "container": true, "attrs": {"id": "resolution"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["UDIM"], "extent": [2917, 2923], "body": [{"type": "para", "indent": 4, "text": ["When baking, Karma will render the images for a single UDIM tile. The parameter specifies which UDIM tile will be rendered."], "extent": [2938, 3067]}], "container": true, "attrs": {"id": "udim"}, "role": "item"}], "container": true, "role": "item_group"}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Images"], "extent": [3067, 3080], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Create Separate Files"], "extent": [3080, 3104], "body": [{"type": "para", "indent": 4, "text": ["Renders either a single image with multiple AOVS, or store each AOV in a separate file."], "extent": [3123, 3216]}, {"type": "tip_group", "body": [{"type": "tip", "indent": 4, "role": "item", "extent": [3216, 3225], "body": [{"type": "para", "indent": 8, "text": ["To see all AOVs, render a single image to ", {"scheme": null, "value": "/mplay", "type": "link", "text": ["MPlay"], "fullpath": "/mplay.html"}, "."], "extent": [3225, 3292]}], "container": true}], "container": true, "role": "item_group"}], "container": true, "attrs": {"id": "separate"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Image Format"], "extent": [3292, 3306], "body": [{"type": "para", "indent": 4, "text": ["Specifies the format the image format of the separately rendered AOV. The file extension will change accordingly."], "extent": [3329, 3448]}], "container": true, "attrs": {"id": "image_format"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Name Separator"], "extent": [3448, 3464], "body": [{"type": "para", "indent": 4, "text": ["This character will be used to separate the file name from the ", {"type": "ui", "text": ["Output Picture"]}, " parameter and the AOV channel name.  For example, when you bake ", {"type": "code", "text": ["Nt"]}, " and ", {"type": "code", "text": ["P"]}, " AOVs and ", {"type": "ui", "text": ["Output Picture"]}, " is ", {"type": "code", "text": ["render/bake.png"]}, ", the output file names will be ", {"type": "code", "text": ["render/bake_Nt.png"]}, " and ", {"type": "code", "text": ["render/bake_P.png"]}, "."], "extent": [3489, 3779]}, {"type": "note_group", "body": [{"type": "note", "indent": 4, "role": "item", "extent": [3779, 3789], "body": [{"type": "para", "indent": 8, "text": ["You can inspect the stage and see details for all the render products in the created render settings primitive."], "extent": [3789, 3910]}], "container": true}], "container": true, "role": "item_group"}], "container": true, "attrs": {"id": "name_separator"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Expand UV Islands"], "extent": [3910, 3929], "body": [{"type": "para", "indent": 4, "text": ["Post-processes the images by smearing the boundaries of the UV islands into the empty areas of the image. This will produce better results when MIP-mapping the textures. This process can be time-consuming. For faster iterations, only turn on this feature for the final baking."], "extent": [3954, 4236]}], "container": true, "attrs": {"id": "expand_islands"}, "role": "item"}], "container": true, "role": "item_group"}, {"level": 3, "type": "sep", "indent": 0, "text": [" Outputs "], "extent": [4236, 4252]}, {"type": "para", "indent": 0, "text": ["This tab specifies AOVs that are defined as outputs of the shading state."], "extent": [4252, 4328]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Tangent Space Normal (Nt)"], "extent": [4328, 4355], "body": [{"type": "para", "indent": 4, "text": ["Creates an AOV for the tangent space normal. You can change the AOV\u2019s default ", {"type": "code", "text": ["Nt"]}, " name."], "extent": [4372, 4466]}], "container": true, "attrs": {"id": "aov_Nt"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Displacement (Ds)"], "extent": [4466, 4485], "body": [{"type": "para", "indent": 4, "text": ["Displacement between the bake mesh and the shading point as a scalar value. You can change the AOV\u2019s default ", {"type": "code", "text": ["Ds"]}, " name."], "extent": [4502, 4627]}], "container": true, "attrs": {"id": "aov_Ds"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Vector Displacement (Vd)"], "extent": [4627, 4653], "body": [{"type": "para", "indent": 4, "text": ["Displacement between the bake mesh and the shading point as a vector value. You can change the AOV\u2019s default ", {"type": "code", "text": ["Vd"]}, " name."], "extent": [4670, 4795]}], "container": true, "attrs": {"id": "aov_Vd"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Tangent-Space Vector Displacement (Vdt)"], "extent": [4795, 4836], "body": [{"type": "para", "indent": 4, "text": ["Displacement between the bake mesh and the shading point as a tangent-space vector value. You can change the AOV\u2019s default ", {"type": "code", "text": ["Vdt"]}, " name."], "extent": [4854, 4994]}], "container": true, "attrs": {"id": "aov_Vdt"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Occlusion (Oc)"], "extent": [4994, 5010], "body": [{"type": "para", "indent": 4, "text": ["Ambient occlusion. You can change the AOV\u2019s default ", {"type": "code", "text": ["Oc"]}, " name."], "extent": [5027, 5095]}], "container": true, "attrs": {"id": "aov_Oc"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Cavity (Cv)"], "extent": [5095, 5108], "body": [{"type": "para", "indent": 4, "text": ["The occlusion along the inverted normal at the shading position. This produces ", {"type": "q", "text": ["relief"]}, " shading. You can change the AOV\u2019s default ", {"type": "code", "text": ["Cv"]}, " name."], "extent": [5125, 5271]}], "container": true, "attrs": {"id": "aov_Cv"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Thickness (Th)"], "extent": [5271, 5287], "body": [{"type": "para", "indent": 4, "text": ["The thickness at the shading position. You can change the AOV\u2019s default ", {"type": "code", "text": ["Th"]}, " name."], "extent": [5304, 5392]}], "container": true, "attrs": {"id": "aov_Th"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Curvature (Cu)"], "extent": [5392, 5408], "body": [{"type": "para", "indent": 4, "text": ["The curvature at the shading position. You can change the AOV\u2019s default ", {"type": "code", "text": ["Cu"]}, " name."], "extent": [5425, 5513]}], "container": true, "attrs": {"id": "aov_Cu"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Alpha (Af)"], "extent": [5513, 5525], "body": [{"type": "para", "indent": 4, "text": ["The alpha at the shading position. You can change the AOV\u2019s default ", {"type": "code", "text": ["Af"]}, " name."], "extent": [5542, 5626]}], "container": true, "attrs": {"id": "aov_Af"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Shading Position (P)"], "extent": [5626, 5648], "body": [{"type": "para", "indent": 4, "text": ["The shading position. You can change the AOV\u2019s default ", {"type": "code", "text": ["P"]}, " name."], "extent": [5664, 5734]}], "container": true, "attrs": {"id": "aov_P"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Shading Space"], "extent": [5734, 5749], "body": [{"type": "para", "indent": 4, "text": ["When you store the ", {"type": "code", "text": ["P"]}, " AOV, this is how the position should be represented"], "extent": [5768, 5847]}, {"type": "bullet_group", "body": [{"blevel": 6, "type": "bullet", "indent": 4, "text": [{"type": "ui", "text": ["World Space"]}, ". The shading position is written directly to the AOV."], "extent": [5847, 5923]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": [{"type": "ui", "text": ["Bake Mesh Bounding Box"]}, ". The shading position is fit to the bounding box of the bake mesh."], "extent": [5923, 6023]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": [{"type": "ui", "text": ["Scene Bounding Box"]}, ". The shading position is fit to the bounding box of the whole scene."], "extent": [6023, 6121]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": [{"type": "ui", "text": ["User Defined"]}, ". The shading position is fit to user specified values."], "extent": [6121, 6200]}], "container": true}], "container": true, "attrs": {"id": "Pboxmode"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Shading Normal (N)"], "extent": [6200, 6220], "body": [{"type": "para", "indent": 4, "text": ["The shading normal. You can change the AOV\u2019s default ", {"type": "code", "text": ["N"]}, " name."], "extent": [6236, 6304]}], "container": true, "attrs": {"id": "aov_N"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Shading Position (Ng)"], "extent": [6304, 6327], "body": [{"type": "para", "indent": 4, "text": ["The geometric shading normal. You can change the AOV\u2019s default ", {"type": "code", "text": ["Ng"]}, " name."], "extent": [6344, 6423]}], "container": true, "attrs": {"id": "aov_Ng"}, "role": "item"}], "container": true, "role": "item_group"}, {"level": 3, "type": "sep", "indent": 0, "text": [" Shader Values "], "extent": [6423, 6445]}, {"type": "para", "indent": 0, "text": ["This folder specifies AOVs that are defined by the MtlX Standard Surface shader\u2019s inputs. Currently, you can only use inputs to a single MtlX Standard Surface shader, so blending of shaders is not supported."], "extent": [6445, 6655]}, {"type": "para", "indent": 0, "text": ["Additional AOVs are available for all defined inputs of the MtlX Standard Surface."], "extent": [6655, 6739]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Base Combined"], "extent": [6739, 6754], "body": [{"type": "para", "indent": 4, "text": ["The MtlX Standard Surface defines the base color as ", {"type": "code", "text": ["base * base_color"]}, ", where ", {"type": "code", "text": ["base"]}, " is a scalar multiplier on the color given by ", {"type": "code", "text": ["base_color"]}, ".  This AOV stores the multiplied result as a single channel."], "extent": [6782, 6992]}, {"type": "para", "indent": 4, "text": ["The ", {"type": "ui", "text": ["Coat Normal"]}, ", ", {"type": "ui", "text": ["Shading Normal"]}, " and ", {"type": "ui", "text": ["Shading Tangent"]}, " values are stored exactly as they are wired into the shader (in world position)."], "extent": [6992, 7142]}], "container": true, "attrs": {"id": "aov_base_combined"}, "role": "item"}], "container": true, "role": "item_group"}, {"level": 3, "type": "sep", "indent": 0, "text": [" Lighting "], "extent": [7142, 7159]}, {"type": "para", "indent": 0, "text": ["When you bake textures, lighting computations are not always required.  However, Karma is capable of baking lighting AOVs."], "extent": [7159, 7284]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Enable Lighting"], "extent": [7284, 7301], "body": [{"type": "para", "indent": 4, "text": ["Turns on lighting computations for baking."], "extent": [7327, 7375]}], "container": true, "attrs": {"id": "enable_lighting"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Beauty"], "extent": [7375, 7383], "body": [{"type": "para", "indent": 4, "text": ["Stores the beauty image as an AOV with RGBA colors through the LPE ", {"type": "code", "text": ["C.*[LO]"]}], "extent": [7404, 7486]}], "container": true, "attrs": {"id": "aov_C_name"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Combined Diffuse"], "extent": [7486, 7504], "body": [{"type": "para", "indent": 4, "text": ["Stores the direct and indirect diffuse illumination through the LPE ", {"type": "code", "text": ["C<RD>.*L"]}, "."], "extent": [7534, 7619]}], "container": true, "attrs": {"id": "aov_combineddiffuse"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Direct Diffuse"], "extent": [7619, 7635], "body": [{"type": "para", "indent": 4, "text": ["Stores the direct diffuse illumination through the LPE ", {"type": "code", "text": ["C<RD>L"]}, "."], "extent": [7663, 7733]}], "container": true, "attrs": {"id": "aov_directdiffuse"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Indirect Diffuse"], "extent": [7733, 7751], "body": [{"type": "para", "indent": 4, "text": ["Stores the indirect diffuse illumination through the LPE ", {"type": "code", "text": ["C<RD>.+L"]}, "."], "extent": [7781, 7855]}], "container": true, "attrs": {"id": "aov_indirectdiffuse"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Facing Ratio"], "extent": [7855, 7869], "body": [{"type": "para", "indent": 4, "text": ["Stores the facing ratio from the ", {"type": "ui", "text": ["Dicing Camera"]}, "."], "extent": [7897, 7954]}], "container": true, "attrs": {"id": "aov_facingratio_N"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Extra AOVs"], "extent": [7954, 7966], "body": [{"type": "para", "indent": 4, "text": ["Define any custom AOVs here. In addition to lighting AOVs, you can also specify AOVs defined by Primvars or other Karma-specific AOVs."], "extent": [7986, 8126]}], "container": true, "attrs": {"id": "aov_extra"}, "role": "item"}], "container": true, "role": "item_group"}]}, {"level": 2, "id": null, "container": true, "type": "h", "indent": 0, "text": ["Baking"], "extent": [8126, 8139], "body": [{"type": "para", "indent": 0, "text": ["This folder contains parameters that control the baking operations."], "extent": [8139, 8209]}, {"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Make Bake Mesh Invisible"], "extent": [8209, 8235], "body": [{"type": "para", "indent": 4, "text": ["In most cases, the bake mesh should be invisible to any rays. This means that the mesh won\u2019t contribute to occlusion or other ray-traced effects. However, there might be situations where the the bake mesh remains visible."], "extent": [8260, 8487]}], "container": true, "attrs": {"id": "hide_bake_mesh"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Bake Traceset"], "extent": [8487, 8502], "body": [{"type": "para", "indent": 4, "text": ["Define the visible traceset of primitives on the bake mesh. You can use tracesets to subdivide a mesh into different parts. For example, the clothing on a  character might have tracesets like ", {"type": "code", "text": ["pants"]}, ", ", {"type": "code", "text": ["shirt"]}, " and ", {"type": "code", "text": ["jacket"]}, ". You can then define which part/traceset you want to bake. You can specify tracesets on the object through the ", {"type": "ui", "text": ["Custom Tracesets"]}, " parameter on the ", {"scheme": "Node", "value": "/nodes/lop/rendergeometrysettings", "type": "link", "text": ["Render Geometry Settings LOP"], "fullpath": "/nodes/lop/rendergeometrysettings.html"}, "."], "extent": [8526, 8966]}, {"type": "bullet_group", "body": [{"blevel": 6, "type": "bullet", "indent": 4, "text": ["With the default ", {"type": "code", "text": ["*"]}, " entry, all tracesets will be visible."], "extent": [8966, 9031]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": ["If the bake mesh has a string primvar named ", {"type": "code", "text": ["bake_traceset"]}, ", the values in the primvar will override this setting. Note that this traceset also affects secondary rays (occlusion, curvature, etc.)"], "extent": [9031, 9233]}, {"blevel": 6, "type": "bullet", "indent": 4, "text": ["You can also define a blank-separated list of different tracesets to combine them, e.g. ", {"type": "code", "text": ["pants shirt"]}, "."], "extent": [9233, 9343]}], "container": true}], "container": true, "attrs": {"id": "bake_traceset"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Primary Samples"], "extent": [9343, 9360], "body": [{"type": "para", "indent": 4, "text": ["Specifies the number of camera rays sent for each pixel. Higher values improve the quality of the rendering."], "extent": [9386, 9500]}], "container": true, "attrs": {"id": "samplesperpixel"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Trace Bias"], "extent": [9500, 9512], "body": [{"type": "para", "indent": 4, "text": ["When rays are sent from the bake mesh to the scene, this bias is used to offset a ray\u2019s origin from the surface of the bake mesh. You can use this parameter to arbitrarily offset the bake mesh along its normal without having to define a cage mesh."], "extent": [9532, 9785]}], "container": true, "attrs": {"id": "tracebias"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Use MikkT Tangents"], "extent": [9785, 9805], "body": [{"type": "para", "indent": 4, "text": ["MikkT is a common standard for tangent space used in baking tools to produce normal maps."], "extent": [9825, 9920]}], "container": true, "attrs": {"id": "use_mikkt"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Dicing Quality"], "extent": [9920, 9936], "body": [{"type": "para", "indent": 4, "text": ["When baking displaced meshes or subdivision surfaces, this parameter can control the level of detail of the dicing."], "extent": [9960, 10081]}], "container": true, "attrs": {"id": "dicingquality"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["True Displacement"], "extent": [10081, 10100], "body": [{"type": "para", "indent": 4, "text": ["Sometimes, displacement shading inverts the surface and produces bad normals. This parameter lets you run displacement shaders as bump map shaders. Alternatively, you can disable displacement shading entirely."], "extent": [10123, 10338]}], "container": true, "attrs": {"id": "truedisplace"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Occlusion Samples"], "extent": [10338, 10357], "body": [{"type": "para", "indent": 4, "text": ["Determines the number of indirect rays used when computing ", {"type": "ui", "text": ["Occlusion"]}, ".  If the resulting AOV is noisy, you can increase ", {"type": "ui", "text": ["Occlusion Samples"]}, " without having to increase the ", {"type": "ui", "text": ["Primary Samples"]}, "."], "extent": [10378, 10580]}], "container": true, "attrs": {"id": "oc_samples"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Occlusion Max Distance"], "extent": [10580, 10604], "body": [{"type": "para", "indent": 4, "text": ["The maximum distance to consider when computing ", {"type": "ui", "text": ["Occlusion"]}, ".  A small distance can speed up occlusion shading at the cost of accuracy."], "extent": [10625, 10767]}], "container": true, "attrs": {"id": "oc_maxdist"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Occlusion Ray Bias"], "extent": [10767, 10787], "body": [{"type": "para", "indent": 4, "text": ["Controls the ray bias when computing ", {"type": "ui", "text": ["Occlusion"]}, "."], "extent": [10808, 10865]}], "container": true, "attrs": {"id": "oc_raybias"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Thickness Samples"], "extent": [10865, 10884], "body": [{"type": "para", "indent": 4, "text": ["Determines the number of indirect rays used when computing ", {"type": "ui", "text": ["Thickness"]}, ".  If the resulting AOV is noisy, you can increase ", {"type": "ui", "text": ["Thickness Samples"]}, " without having to increase the ", {"type": "ui", "text": ["Primary Samples"]}, "."], "extent": [10905, 11107]}], "container": true, "attrs": {"id": "th_samples"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Cavity Samples"], "extent": [11107, 11123], "body": [{"type": "para", "indent": 4, "text": ["Determines the number of indirect rays used when computing ", {"type": "ui", "text": ["Cavity"]}, ".  If the resulting AOV is noisy, you can increase ", {"type": "ui", "text": ["Cavity Samples"]}, " without having to increase the ", {"type": "ui", "text": ["Primary Samples"]}, "."], "extent": [11144, 11340]}], "container": true, "attrs": {"id": "cv_samples"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Curvature Samples"], "extent": [11340, 11359], "body": [{"type": "para", "indent": 4, "text": ["Determines the number of indirect rays used when computing ", {"type": "ui", "text": ["Curvature"]}, ".  If the resulting AOV is noisy, you can increase ", {"type": "ui", "text": ["Curvature Samples"]}, " without having to increase the ", {"type": "ui", "text": ["Primary Samples"]}, "."], "extent": [11380, 11582]}], "container": true, "attrs": {"id": "cu_samples"}, "role": "item"}], "container": true, "role": "item_group"}]}], "text": "Parameters"}, {"level": 1, "id": "related", "container": true, "type": "related_section", "indent": 0, "role": "section", "extent": [11582, 11591], "body": [{"type": "bullet_group", "body": [{"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/lop/karma", "type": "link", "text": "", "fullpath": "/nodes/lop/karma.html"}], "extent": [11591, 11611]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/lop/renderproduct", "type": "link", "text": "", "fullpath": "/nodes/lop/renderproduct.html"}], "extent": [11611, 11638]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/lop/rendersettings", "type": "link", "text": "", "fullpath": "/nodes/lop/rendersettings.html"}], "extent": [11638, 11666]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": "Node", "value": "/nodes/lop/rendervar", "type": "link", "text": "", "fullpath": "/nodes/lop/rendervar.html"}], "extent": [11666, 11689]}, {"blevel": 2, "type": "bullet", "indent": 0, "text": [{"scheme": null, "value": "/render/lpe", "type": "link", "text": ["Light Path Expressions"], "fullpath": "/render/lpe.html"}], "extent": [11689, 11728]}], "container": true}], "text": "Related"}], "title": ["Karma Texture Baker"], "summary": ["Create a Render Settings primitive to create texture maps that define shading state for an object."], "included": ["/nodes/lop/_primpattern", "/nodes/lop/_sampling", "/nodes/lop/_simple_prims", "/nodes/lop/rendergeometrysettings", "/nodes/lop/rendersettings", "/nodes/out/standard", "/nodes/out/usd", "/nodes/out/usdrender", "/solaris/output", "/solaris/view"]}