{"type": "root", "attrs": {"type": "node", "context": "lop", "internal": "cache", "icon": "LOP/cache", "group": "util", "since": "17.0", "version": "", "namespace": null}, "body": [{"level": 0, "type": "title", "indent": 0, "text": ["Cache"], "extent": [0, 10]}, {"type": "summary", "indent": 0, "text": ["Caches the results of cooking the network at different times, increasing playback speed."], "extent": [97, 193]}, {"type": "para", "indent": 0, "text": ["The output of this node is a single stage holding the union of any time samples authored on each individual cook. This speeds up playback by eliminating cooking and minimizing updates sent to the viewport."], "extent": [193, 400]}, {"type": "para", "indent": 0, "text": ["This node is also useful to enable motion blur in the viewport for transformation data authored in the LOP network."], "extent": [400, 517]}, {"type": "para", "indent": 0, "text": ["A Cache LOP with a time dependent input node can eliminate the time dependency, if the entire frame range is cooked."], "extent": [517, 635]}, {"type": "para", "indent": 0, "text": ["If USD primitives are added or removed over time, the output of the Cache LOP will be the union of all USD primitives created over the cached frame range.  This behavior matches the ", {"scheme": "Node", "value": "/nodes/lop/usd_rop", "type": "link", "text": ["USD ROP"], "fullpath": "/nodes/lop/usd_rop.html"}, ", as both of these nodes combine time samples using USD\u2019s built in layer stitching functionality."], "extent": [635, 942]}, {"level": 1, "id": "parameters", "container": true, "type": "parameters_section", "indent": 0, "role": "section", "extent": [942, 954], "body": [{"type": "parameters_item_group", "body": [{"type": "parameters_item", "indent": 0, "text": ["Cache Behavior"], "extent": [954, 971], "body": [{"type": "para", "indent": 4, "text": ["Specifies when and how frames are combined into the cache."], "extent": [989, 1053]}, {"type": "dt_group", "body": [{"type": "dt", "indent": 4, "text": ["Always Cache All Frames"], "extent": [1053, 1082], "body": [{"type": "para", "indent": 8, "text": ["As soon as the node is cooked the first time, or whenever the input to the Cache LOP is modified, the node cooks the entire frame range and combines the results into a single stage. "], "extent": [1082, 1274]}, {"type": "para", "indent": 8, "text": ["This can be very expensive in both time and memory, however if you will be caching the entire frame range, this method provides the lowest average per-frame caching time."], "extent": [1274, 1454]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Cache Cooked Frames"], "extent": [1454, 1479], "body": [{"type": "para", "indent": 8, "text": ["Frames of data are cooked and combined into the cache when that particular frame is requested. "], "extent": [1479, 1584]}, {"type": "para", "indent": 8, "text": ["This is more expensive per-frame than cooking multiple frames at once, but it provides the best time to first result. The Extend Cooked Cache parameter can be used to cause additional frames of data to be cooked automatically so that motion blur can be displayed in the viewport when using this mode."], "extent": [1584, 1894]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Cache Up To Cooked Frames"], "extent": [1894, 1925], "body": [{"type": "para", "indent": 8, "text": ["This is a hybrid of the Always Cache All Frames and Cache Cooked Frames choices. When a particular frame\u2019s data is requested, this LOP cooks and caches all frames from the start of the range up to the requested frame."], "extent": [1925, 2152]}, {"type": "para", "indent": 8, "text": ["This option is useful when the cooked data is coming from a simulation, where it might be very expensive to go back and cook earlier frames. This option also obeys the Extend parameter to allow motion blur to work in the viewport."], "extent": [2152, 2392]}], "container": true}, {"type": "dt", "indent": 4, "text": ["Cache Rolling Window of Frames"], "extent": [2392, 2428], "body": [{"type": "para", "indent": 8, "text": ["In this mode, only a small set of frames is ever in the cache. This reduces memory usage considerably when scrubbing through the timeline, however it must recook the specified range of time samples every time a frame of data is requested from this node."], "extent": [2428, 2691]}, {"type": "para", "indent": 8, "text": ["In this mode, the Cache node is always time dependent, even after playing back an entire simulation."], "extent": [2691, 2801]}], "container": true}], "container": true}], "container": true, "attrs": {"id": "behavior"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Start/End/Inc"], "extent": [2801, 2816], "body": [{"type": "para", "indent": 4, "text": ["The first frame, last frame, and increment size (in frames) between each cook request made of the input to populate the cache. The first two values control the range of frames over which the Cache should apply, and the third value allows the stage to be super-sampled for improved motion blur, or sub-sampled to preserve memory (at the cost of accuracy, as USD simply uses linear interpolation between time sampled values)."], "extent": [2827, 3256]}], "container": true, "attrs": {"id": "f"}, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Extend Cooked Cache"], "extent": [3256, 3277], "body": [{"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["Cache behavior"]}, " is ", {"type": "q", "text": ["Cache Cooked Frames"]}, " or ", {"type": "q", "text": ["Cache Up to Cooked Frames"]}, ", this controls how far beyond the requested time the cache should be extended. A non-zero value here will allow motion blur to be presented in the viewport (if motion blue is supported by the render delegate)."], "extent": [3277, 3572]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Before/After/Inc"], "extent": [3572, 3590], "body": [{"type": "para", "indent": 4, "text": ["When ", {"type": "ui", "text": ["Cache behavior"]}, " is ", {"type": "q", "text": ["Rolling Window"]}, ", this controls the size of that rolling window. The Before value should be set to a positive number that is subtracted from the current frame. The After value controls how far into the future this LOP should cook when a given frame\u2019s data is requested. The ", {"type": "ui", "text": ["Inc"]}, " (increment) value, like on the ", {"type": "ui", "text": ["Start/End/Inc"]}, " parameters, allows sub-frame sampling, which may give more accurate motion blur."], "extent": [3590, 4034]}], "container": true, "role": "item"}, {"type": "parameters_item", "indent": 0, "text": ["Track Primitive Existence to Set Visibility"], "extent": [4034, 4079], "body": [{"type": "para", "indent": 4, "text": ["LOP networks may generate vastly different scene graphs from one frame to the next. When combining these scene graphs over a frame range into a single animated scene graph, the set of primitives in the combined scene graph will be the union of the primitives in each frame\u2019s hierarchy. But if a mesh appears at frame 50, this generally means that it is desired for this mesh to not be visible prior to frame 50. Enable this option to cause this node to track a list of all primitives at each frame, and automatically author animated visibility attributes for any primitives that are added to or removed from the scene graph over time. This gives the appearance of primitives being added and removed over time."], "extent": [4079, 4794]}, {"type": "para", "indent": 4, "text": ["Only subclasses of ", {"type": "code", "text": ["UsdGeomImageable"]}, " primitives will be tracked this way, since these are the only USD primitive types which respect the visibility attribute."], "extent": [4794, 4959]}, {"type": "para", "indent": 4, "text": ["This option cannot be enabled with ", {"type": "code", "text": ["Cache cooked frames"]}, " mode, as it requires all frames to be cooked in order for the visibility authoring to behave properly."], "extent": [4959, 5123]}], "container": true, "role": "item"}], "container": true, "role": "item_group"}], "text": "Parameters"}], "title": ["Cache"], "summary": ["Caches the results of cooking the network at different times, increasing playback speed."]}