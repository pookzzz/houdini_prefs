// Magic: 6aa6dddb
// Automatically generated PSI dialog (PSI version 20.5.278)
// Fri Nov 22 15:42:35 2024


f_tmp = FLOAT_FIELD;	// dialog.top.ui

group.gad = ROW
{
    HSTRETCH JUSTIFY(left, center)

    { WIDTH(0.18) }

    group.label = PARM_LABEL("Group", "group") WIDTH(1.5);
    PARM_FIELD(string, "group") VALUE(group.val) 
	LABELREF(group.label) HSTRETCH;

    group.menu SIZE(0.26, 0.26) LOOK(menuiconbutton);

    ACTION_ICONBUTTON "BUTTONS_reselect" VALUE(group.script_action)
	HELP("Select geometry from an available viewport.")
	UI_FLAT_ICON_BTN_SIZE_SMALL LOOKFLAT;

    { WIDTH(0.1) }
}

grouptype.gad = 
{
    LAYOUT(horizontal) JUSTIFY(left, center) HSTRETCH
    { WIDTH(0.18) }

    grouptype.label = PARM_LABEL_SIMPLE("Group Type", "grouptype") WIDTH(1.5);
    { WIDTH(0.09) }

    grouptype.menu;

    { HSTRETCH }

    { WIDTH(0.1) }
}

envelope.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 envelope.label = PARM_LABEL("Envelope", "envelope") WIDTH(1.5);
 PARM(float, 1, "envelope", none, none) RANGE(0,1)
	 LABELREF(envelope.label) HSTRETCH;

  { WIDTH(0.1) }
}
use_weight.row.join =		
{

  LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)
  HMARGIN(0.18, 0.1) NO_MARGIN_SPACING_SCALE
use_weight.join =		
{

  LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)
  HMARGIN(0, 0) NO_MARGIN_SPACING_SCALE

use_weight.gad = PARM_BUTTON("use_weight", "") toggle VALUE(use_weight.val) RETAIN_SIZE_WHEN_HIDDEN;

weight_name.gad = ROW
{
    HSTRETCH JUSTIFY(left, center)

    {  }

    weight_name.label = PARM_LABEL("Weight Name", "weight_name") WIDTH(1.32);
    PARM_FIELD(string, "weight_name") VALUE(weight_name.val) 
	LABELREF(weight_name.label) HSTRETCH;

    weight_name.menu SIZE(0.26, 0.26) LOOK(menuiconbutton);

    {  }
}
}	

invert_weight.gad = ROW
{
    
    {  }

    PARM_BUTTON("invert_weight", "Invert") toggle VALUE(invert_weight.val);

    {  }

    {  }
}
}	// Template join.bot

dopinedges.row.join =		
{

  LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)
  HMARGIN(0.18, 0.1) NO_MARGIN_SPACING_SCALE
dopinedges.join =		
{

  LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)
  HMARGIN(0, 0) NO_MARGIN_SPACING_SCALE

dopinedges.gad = PARM_BUTTON("dopinedges", "") toggle VALUE(dopinedges.val) RETAIN_SIZE_WHEN_HIDDEN;

pinedgesweight.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 {  }

 pinedgesweight.label = PARM_LABEL("Pin Edges %", "pinedgesweight") WIDTH(1.32);
 PARM(float, 1, "pinedgesweight", none, none) RANGE(0,1)
	 LABELREF(pinedgesweight.label) HSTRETCH;

  {  }
}
}	
}	// Template join.bot

dopc.row.join =		
{

  LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)
  HMARGIN(0.18, 0.1) NO_MARGIN_SPACING_SCALE
dopc.join =		
{

  LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)
  HMARGIN(0, 0) NO_MARGIN_SPACING_SCALE

dopc.gad = PARM_BUTTON("dopc", "") toggle VALUE(dopc.val) RETAIN_SIZE_WHEN_HIDDEN;

pcblend.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 {  }

 pcblend.label = PARM_LABEL("Proximity (%)", "pcblend") WIDTH(1.32);
 PARM(float, 1, "pcblend", none, none) RANGE(-1,1)
	 LABELREF(pcblend.label) HSTRETCH;

  {  }
}
}	
}	// Template join.bot


pcmaxdist.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 pcmaxdist.label = PARM_LABEL("Max Distance", "pcmaxdist") WIDTH(1.5);
 PARM(float, 1, "pcmaxdist", none, none) RANGE(0,10)
	LOCK_RANGE_MIN LABELREF(pcmaxdist.label) HSTRETCH;

  { WIDTH(0.1) }
}

pcmaxpts.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 pcmaxpts.label = PARM_LABEL("Max Points #", "pcmaxpts") WIDTH(1.5);
 PARM(integer, 1, "pcmaxpts", none, none) RANGE(0,100)
	LOCK_RANGE_MIN LABELREF(pcmaxpts.label) HSTRETCH;

  { WIDTH(0.1) }
}

pcexp.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 pcexp.label = PARM_LABEL("Falloff Exponent", "pcexp") WIDTH(1.5);
 PARM(float, 1, "pcexp", none, none) RANGE(0,10)
	 LABELREF(pcexp.label) HSTRETCH;

  { WIDTH(0.1) }
}
dotopo.row.join =		
{

  LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)
  HMARGIN(0.18, 0.1) NO_MARGIN_SPACING_SCALE
dotopo.join =		
{

  LAYOUT(horizontal) HSTRETCH JUSTIFY(left, center)
  HMARGIN(0, 0) NO_MARGIN_SPACING_SCALE

dotopo.gad = PARM_BUTTON("dotopo", "") toggle VALUE(dotopo.val) RETAIN_SIZE_WHEN_HIDDEN;

topoblend.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 {  }

 topoblend.label = PARM_LABEL("Topology (%)", "topoblend") WIDTH(1.32);
 PARM(float, 1, "topoblend", none, none) RANGE(-1,1)
	 LABELREF(topoblend.label) HSTRETCH;

  {  }
}
}	
}	// Template join.bot


topoiterations.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 topoiterations.label = PARM_LABEL("Iterations #", "topoiterations") WIDTH(1.5);
 PARM(integer, 1, "topoiterations", none, none) RANGE(0,100)
	LOCK_RANGE_MIN LABELREF(topoiterations.label) HSTRETCH;

  { WIDTH(0.1) }
}

topomethod.gad = 
{
    LAYOUT(horizontal) JUSTIFY(left, center) HSTRETCH
    { WIDTH(0.18) }

    topomethod.label = PARM_LABEL_SIMPLE("Method", "topomethod") WIDTH(1.5);
    { WIDTH(0.09) }

    topomethod.menu;

    { HSTRETCH }

    { WIDTH(0.1) }
}

topoalpha.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 topoalpha.label = PARM_LABEL("Alpha (%)", "topoalpha") WIDTH(1.5);
 PARM(float, 1, "topoalpha", none, none) RANGE(0,1)
	 LABELREF(topoalpha.label) HSTRETCH;

  { WIDTH(0.1) }
}

topobeta.gad = 
{

 LAYOUT(horizontal) HSTRETCH
 { WIDTH(0.18) }

 topobeta.label = PARM_LABEL("Beta (%)", "topobeta") WIDTH(1.5);
 PARM(float, 1, "topobeta", none, none) RANGE(0,1)
	 LABELREF(topobeta.label) HSTRETCH;

  { WIDTH(0.1) }
}

saverest.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("saverest", "Save Rest Position") toggle VALUE(saverest.val);

    { HSTRETCH }

    { WIDTH(0.1) }
}

guide.gad = ROW
{
    HSTRETCH
    { WIDTH(0.18) }

    { WIDTH(1.5) }
    { WIDTH(0.08) }

    PARM_BUTTON("guide", "Show Guide") toggle VALUE(guide.val);

    { HSTRETCH }

    { WIDTH(0.1) }
}

folder1.gad = 

GROUP simple "Topology Pass" flat 
{ 
    VALUE(folder1.gad.val) LAYOUT(vertical) HSTRETCH 
	    dotopo.row.join;		
	    topoiterations.gad;		
	    topomethod.gad;		
	    topoalpha.gad;		
	    topobeta.gad;		
} 

folder0.gad = 

GROUP simple "Proximity Pass" flat 
{ 
    VALUE(folder0.gad.val) LAYOUT(vertical) HSTRETCH 
	    dopc.row.join;		
	    pcmaxdist.gad;		
	    pcmaxpts.gad;		
	    pcexp.gad;		
} 

dialog_norm.gad = 
{
    LAYOUT(vertical) SPACING(0.02) HSTRETCH 
    group.gad; 
    grouptype.gad; 
    envelope.gad; 
    use_weight.row.join; 
    dopinedges.row.join; 
    folder0.gad; 
    folder1.gad; 
    saverest.gad; 
    guide.gad; 
} 
// dialog.bot.ui

extrastuffstowbar_minimize.val := 1;

dialog = OPENNOTIFIER
{
    LAYOUT(vertical) SPACING(0.02) LOOK(bg) VALUE(open.val_) HSTRETCH

    { HEIGHT(1p) LOOK(bg) HSTRETCH }

    dialog_norm.gad;
}
